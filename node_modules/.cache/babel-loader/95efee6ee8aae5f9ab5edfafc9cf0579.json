{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../config\"; // default\n\naxios.defaults.baseURL = config.API_URL; // content type\n\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\"; // intercepting to capture errors\n\naxios.interceptors.response.use(function (response) {\n  return response.data ? response.data : response;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  let message;\n\n  switch (error.status) {\n    case 500:\n      message = \"Internal Server Error\";\n      break;\n\n    case 401:\n      message = \"Invalid credentials\";\n      break;\n\n    case 404:\n      message = \"Sorry! the data you are looking for could not be found\";\n      break;\n\n    default:\n      message = error.message || error;\n  }\n\n  return Promise.reject(message);\n});\n/**\n * Sets the default authorization\n * @param {*} token\n */\n\nconst setAuthorization = token => {\n  axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n};\n\nclass APIClient {\n  constructor() {\n    this.get = (url, params) => {\n      return axios.get(url, params);\n    };\n\n    this.create = (url, data) => {\n      return axios.post(url, data);\n    };\n\n    this.update = (url, data) => {\n      return axios.put(url, data);\n    };\n\n    this.delete = (url, config) => {\n      return axios.delete(url, { ...config\n      });\n    };\n\n    this.updateWithFile = (url, data) => {\n      const formData = new FormData();\n\n      for (const k in data) {\n        formData.append(k, data[k]);\n      }\n\n      const config = {\n        headers: { ...axios.defaults.headers,\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      return axios.put(url, formData, config);\n    };\n\n    this.createWithFile = (url, data) => {\n      const formData = new FormData();\n\n      for (const k in data) {\n        formData.append(k, data[k]);\n      }\n\n      const config = {\n        headers: { ...axios.defaults.headers,\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      return axios.post(url, formData, config);\n    };\n  }\n\n}\n\nconst getLoggedinUser = () => {\n  const user = localStorage.getItem(\"authUser\");\n\n  if (!user) {\n    return null;\n  } else {\n    return JSON.parse(user);\n  }\n};\n\nexport { APIClient, setAuthorization, getLoggedinUser };","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/api/apiCore.ts"],"names":["axios","config","defaults","baseURL","API_URL","headers","post","interceptors","response","use","data","error","message","status","Promise","reject","setAuthorization","token","common","APIClient","get","url","params","create","update","put","delete","updateWithFile","formData","FormData","k","append","createWithFile","getLoggedinUser","user","localStorage","getItem","JSON","parse"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport config from \"../config\";\n\n// default\naxios.defaults.baseURL = config.API_URL;\n\n// content type\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n  function (response: any) {\n    return response.data ? response.data : response;\n  },\n  function (error: any) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    let message;\n    switch (error.status) {\n      case 500:\n        message = \"Internal Server Error\";\n        break;\n      case 401:\n        message = \"Invalid credentials\";\n        break;\n      case 404:\n        message = \"Sorry! the data you are looking for could not be found\";\n        break;\n      default:\n        message = error.message || error;\n    }\n    return Promise.reject(message);\n  }\n);\n\n/**\n * Sets the default authorization\n * @param {*} token\n */\nconst setAuthorization = (token: any) => {\n  axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + token;\n};\n\nclass APIClient {\n  /**\n   * Fetches data from given url\n   */\n  get = (url: string, params?: {}) => {\n    return axios.get(url, params);\n  };\n\n  /**\n   * post given data to url\n   */\n  create = (url: string, data?: {}) => {\n    return axios.post(url, data);\n  };\n\n  /**\n   * Updates data\n   */\n  update = (url: string, data?: {}) => {\n    return axios.put(url, data);\n  };\n\n  /**\n   * Delete\n   */\n  delete = (url: string, config?: {}) => {\n    return axios.delete(url, { ...config });\n  };\n\n  /*\n   file upload update method\n   */\n  updateWithFile = (url: string, data: any) => {\n    const formData = new FormData();\n    for (const k in data) {\n      formData.append(k, data[k]);\n    }\n    const config = {\n      headers: {\n        ...axios.defaults.headers,\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    return axios.put(url, formData, config);\n  };\n\n  /*\n   file upload post method\n   */\n  createWithFile = (url: string, data: any) => {\n    const formData = new FormData();\n    for (const k in data) {\n      formData.append(k, data[k]);\n    }\n    const config = {\n      headers: {\n        ...axios.defaults.headers,\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    return axios.post(url, formData, config);\n  };\n}\n\nconst getLoggedinUser = () => {\n  const user = localStorage.getItem(\"authUser\");\n  if (!user) {\n    return null;\n  } else {\n    return JSON.parse(user);\n  }\n};\n\nexport { APIClient, setAuthorization, getLoggedinUser };\n"]},"metadata":{},"sourceType":"module"}