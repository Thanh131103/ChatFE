{"ast":null,"code":"// constants\nimport { TABS, LAYOUT_MODES } from \"../../constants/index\";\nimport { LayoutActionTypes } from \"./types\";\nexport const INIT_STATE = {\n  activeTab: TABS.CHAT,\n  layoutMode: LAYOUT_MODES.LIGHT\n};\n\nconst Layout = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LayoutActionTypes.CHANGE_TAB:\n      return { ...state,\n        activeTab: action.payload\n      };\n\n    case LayoutActionTypes.CHANGE_LAYOUT_MODE:\n      return { ...state,\n        layoutMode: action.payload.layoutMode\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = Layout;\nexport default Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/redux/layout/reducer.ts"],"names":["TABS","LAYOUT_MODES","LayoutActionTypes","INIT_STATE","activeTab","CHAT","layoutMode","LIGHT","Layout","state","action","type","CHANGE_TAB","payload","CHANGE_LAYOUT_MODE"],"mappings":"AAAA;AACA,SAASA,IAAT,EAAeC,YAAf,QAAkC,uBAAlC;AAEA,SAASC,iBAAT,QAA+C,SAA/C;AAEA,OAAO,MAAMC,UAAuB,GAAG;AACrCC,EAAAA,SAAS,EAAEJ,IAAI,CAACK,IADqB;AAErCC,EAAAA,UAAU,EAAEL,YAAY,CAACM;AAFY,CAAhC;;AAKP,MAAMC,MAAM,GAAG,YAAqC;AAAA,MAApCC,KAAoC,uEAA5BN,UAA4B;AAAA,MAAhBO,MAAgB;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,iBAAiB,CAACU,UAAvB;AACE,aAAO,EACL,GAAGH,KADE;AAELL,QAAAA,SAAS,EAAEM,MAAM,CAACG;AAFb,OAAP;;AAKA,SAAKX,iBAAiB,CAACY,kBAAvB;AACA,aAAO,EACL,GAAGL,KADE;AAELH,QAAAA,UAAU,EAAEI,MAAM,CAACG,OAAP,CAAeP;AAFtB,OAAP;;AAIF;AACE,aAAO,EAAE,GAAGG;AAAL,OAAP;AAbJ;AAeD,CAhBD;;KAAMD,M;AAkBN,eAAeA,MAAf","sourcesContent":["// constants\nimport { TABS ,LAYOUT_MODES} from \"../../constants/index\";\n\nimport { LayoutActionTypes, LayoutState } from \"./types\";\n\nexport const INIT_STATE: LayoutState = {\n  activeTab: TABS.CHAT,\n  layoutMode: LAYOUT_MODES.LIGHT,\n};\n\nconst Layout = (state = INIT_STATE, action: any) => {\n  switch (action.type) {\n    case LayoutActionTypes.CHANGE_TAB:\n      return {\n        ...state,\n        activeTab: action.payload,\n      };\n\n      case LayoutActionTypes.CHANGE_LAYOUT_MODE:\n      return {\n        ...state,\n        layoutMode: action.payload.layoutMode,\n      }\n    default:\n      return { ...state };\n  }\n};\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}