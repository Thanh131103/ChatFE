{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/ForwardModal.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport classnames from \"classnames\"; // hooks\n\nimport { useRedux } from \"../hooks/index\"; // components\n\nimport AppSimpleBar from \"./AppSimpleBar\"; // interfaces\n\n// hooks\nimport { useProfile, useContacts } from \"../hooks\"; //utils\n\nimport { divideByKey } from \"../utils\";\nimport EmptyStateContacts from \"./EmptyStateResult\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ForwardMessage = _ref => {\n  _s();\n\n  let {\n    forwardData,\n    chatUserDetails\n  } = _ref;\n  const {\n    userProfile\n  } = useProfile();\n  const replyUserName = chatUserDetails.firstName ? `${chatUserDetails.firstName} ${chatUserDetails.lastName}` : \"-\";\n  const isReplyFromMe = forwardData && forwardData.meta.sender + \"\" === userProfile.uid + \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"replymessage-block mb-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"conversation-name\",\n      children: isReplyFromMe ? \"You\" : replyUserName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), (forwardData === null || forwardData === void 0 ? void 0 : forwardData.text) && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-0\",\n      children: forwardData === null || forwardData === void 0 ? void 0 : forwardData.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }, this), ((forwardData === null || forwardData === void 0 ? void 0 : forwardData.image) || (forwardData === null || forwardData === void 0 ? void 0 : forwardData.attachments)) && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-0\",\n      children: [(forwardData === null || forwardData === void 0 ? void 0 : forwardData.attachments) && !(forwardData === null || forwardData === void 0 ? void 0 : forwardData.image) && `${forwardData === null || forwardData === void 0 ? void 0 : forwardData.attachments.length} Files`, (forwardData === null || forwardData === void 0 ? void 0 : forwardData.image) && !(forwardData === null || forwardData === void 0 ? void 0 : forwardData.attachments) && `${forwardData === null || forwardData === void 0 ? void 0 : forwardData.image.length} Images`, (forwardData === null || forwardData === void 0 ? void 0 : forwardData.image) && (forwardData === null || forwardData === void 0 ? void 0 : forwardData.attachments) && `${forwardData === null || forwardData === void 0 ? void 0 : forwardData.attachments.length} Files & ${forwardData === null || forwardData === void 0 ? void 0 : forwardData.image.length} Images`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForwardMessage, \"wAtm7+MsicHrLOJHX62AtxC9+Qw=\", false, function () {\n  return [useProfile];\n});\n\n_c = ForwardMessage;\n\nconst ContactItem = _ref2 => {\n  let {\n    contact,\n    selected,\n    onSelectContact,\n    onSend\n  } = _ref2;\n  const fullName = `${contact.firstName} ${contact.lastName}`;\n\n  const onClick = () => {\n    onSelectContact(contact.id, !selected);\n\n    if (!selected) {\n      onSend([contact.id]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow-1\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"font-size-14 m-0\",\n          children: fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-shrink-0\",\n        children: !selected ? /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          color: \"primary\",\n          type: \"button\",\n          onClick: onClick,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Button, {\n          size: \"sm\",\n          color: \"light\",\n          type: \"button\",\n          onClick: onClick,\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = ContactItem;\n\nconst CharacterItem = _ref3 => {\n  let {\n    letterContacts,\n    index,\n    totalContacts,\n    selectedContacts,\n    onSelectContact,\n    onSend\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames({\n      \"mt-3\": index !== 0\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-title\",\n      children: letterContacts.letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classnames(\"list-unstyled\", \"contact-list\", {\n        \"mb-0\": index + 1 === totalContacts\n      }),\n      children: (letterContacts.data || []).map((contact, key) => {\n        const selected = selectedContacts.includes(contact.id);\n        return /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact,\n          selected: selected,\n          onSelectContact: onSelectContact,\n          onSend: onSend\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = CharacterItem;\n\nconst ForwardModal = _ref4 => {\n  _s2();\n\n  let {\n    isOpen,\n    onClose,\n    forwardData,\n    chatUserDetails,\n    onForward\n  } = _ref4;\n  // global store\n  const {\n    useAppSelector\n  } = useRedux();\n  const {\n    contactsList\n  } = useAppSelector(state => ({\n    contactsList: state.Contacts.contacts\n  }));\n  /*\n  contacts hook\n  */\n\n  const {\n    categorizedContacts,\n    totalContacts\n  } = useContacts();\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    setContacts(categorizedContacts);\n  }, [categorizedContacts]);\n  /*\n  contact search\n  */\n\n  const [search, setSearch] = useState(\"\");\n\n  const onChangeSearch = value => {\n    setSearch(value);\n    let modifiedContacts = [...contactsList];\n    let filteredContacts = (modifiedContacts || []).filter(c => c[\"firstName\"].toLowerCase().includes(value.toLowerCase()));\n    const formattedContacts = divideByKey(\"firstName\", filteredContacts);\n    setContacts(formattedContacts);\n  };\n\n  const totalC = (contacts || []).length;\n  /*\n  select contacts\n  */\n\n  const [selectedContacts, setSelectedContacts] = useState([]);\n\n  const onSelectContact = (id, selected) => {\n    let modifiedList = [...selectedContacts];\n\n    if (selected) {\n      modifiedList = [...modifiedList, id];\n    } else {\n      modifiedList = modifiedList.filter(m => m + \"\" !== id + \"\");\n    }\n\n    setSelectedContacts(modifiedList);\n  };\n  /*\n  share all\n  */\n\n\n  const onShareAll = () => {\n    const allIds = (contactsList || []).map(c => c.id);\n    setSelectedContacts(allIds);\n    const data = {\n      contacts: [...allIds],\n      message: message\n    };\n    onForward(data);\n  };\n  /*\n  message\n  */\n\n\n  const [message, setMessage] = useState();\n\n  const onChangeMessage = value => {\n    setMessage(value);\n  };\n  /*\n  submit data\n  */\n\n\n  const onSend = contacts => {\n    const data = {\n      contacts: [...contacts],\n      message: message\n    };\n    onForward(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    toggle: onClose,\n    centered: true,\n    className: \"forwardModal\",\n    tabIndex: -1,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      className: \"modal-title-custom\",\n      toggle: onClose,\n      children: \"Share this Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ForwardMessage, {\n          forwardData: forwardData,\n          chatUserDetails: chatUserDetails\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"form-control\",\n          placeholder: \"Type your message...\",\n          rows: 2,\n          value: message || \"\",\n          onChange: e => {\n            onChangeMessage(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"my-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control bg-light border-0 pe-0\",\n          placeholder: \"Search here..\",\n          \"aria-label\": \"Example text with button addon\",\n          \"aria-describedby\": \"forwardSearchbtn-addon\",\n          value: search || \"\",\n          onChange: e => {\n            onChangeSearch(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-light\",\n          type: \"button\",\n          id: \"forwardSearchbtn-addon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bx bx-search align-middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), totalC === 0 ? /*#__PURE__*/_jsxDEV(EmptyStateContacts, {\n        searchedText: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center px-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-grow-1\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-0 font-size-11 text-muted text-uppercase\",\n              children: \"Contacts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              color: \"primary\",\n              type: \"button\",\n              onClick: onShareAll,\n              children: \"Share All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AppSimpleBar, {\n          style: {\n            maxHeight: \"150px\"\n          },\n          className: \"mx-n4 px-1\",\n          children: (contacts || []).map((letterContacts, key) => /*#__PURE__*/_jsxDEV(CharacterItem, {\n            letterContacts: letterContacts,\n            index: key,\n            totalContacts: totalContacts,\n            selectedContacts: selectedContacts,\n            onSelectContact: onSelectContact,\n            onSend: onSend\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(ForwardModal, \"FYDKAT3JEIb96yuDaoNtu1EO0lo=\", true, function () {\n  return [useRedux, useContacts];\n});\n\n_c4 = ForwardModal;\nexport default ForwardModal;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ForwardMessage\");\n$RefreshReg$(_c2, \"ContactItem\");\n$RefreshReg$(_c3, \"CharacterItem\");\n$RefreshReg$(_c4, \"ForwardModal\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/ForwardModal.tsx"],"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","classnames","useRedux","AppSimpleBar","useProfile","useContacts","divideByKey","EmptyStateContacts","ForwardMessage","forwardData","chatUserDetails","userProfile","replyUserName","firstName","lastName","isReplyFromMe","meta","sender","uid","text","image","attachments","length","ContactItem","contact","selected","onSelectContact","onSend","fullName","onClick","id","CharacterItem","letterContacts","index","totalContacts","selectedContacts","letter","data","map","key","includes","ForwardModal","isOpen","onClose","onForward","useAppSelector","contactsList","state","Contacts","contacts","categorizedContacts","setContacts","search","setSearch","onChangeSearch","value","modifiedContacts","filteredContacts","filter","c","toLowerCase","formattedContacts","totalC","setSelectedContacts","modifiedList","m","onShareAll","allIds","message","setMessage","onChangeMessage","e","target","maxHeight"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\nimport classnames from \"classnames\";\n\n// hooks\nimport { useRedux } from \"../hooks/index\";\n\n// components\nimport AppSimpleBar from \"./AppSimpleBar\";\n\n// interfaces\nimport { MessagesTypes, ContactTypes } from \"../data\";\n\n// hooks\nimport { useProfile, useContacts } from \"../hooks\";\n\n//utils\nimport { DivideByKeyResultTypes, divideByKey } from \"../utils\";\nimport EmptyStateContacts from \"./EmptyStateResult\";\ninterface ForwardMessageProps {\n  forwardData: null | MessagesTypes | undefined;\n  chatUserDetails: any;\n}\nconst ForwardMessage = ({\n  forwardData,\n  chatUserDetails,\n}: ForwardMessageProps) => {\n  const { userProfile } = useProfile();\n\n  const replyUserName = chatUserDetails.firstName\n    ? `${chatUserDetails.firstName} ${chatUserDetails.lastName}`\n    : \"-\";\n  const isReplyFromMe =\n    forwardData && forwardData.meta.sender + \"\" === userProfile.uid + \"\";\n\n  return (\n    <div className=\"replymessage-block mb-2\">\n      <h5 className=\"conversation-name\">\n        {isReplyFromMe ? \"You\" : replyUserName}\n      </h5>\n      {forwardData?.text && <p className=\"mb-0\">{forwardData?.text}</p>}\n\n      {(forwardData?.image || forwardData?.attachments) && (\n        <p className=\"mb-0\">\n          {forwardData?.attachments &&\n            !forwardData?.image &&\n            `${forwardData?.attachments.length} Files`}\n          {forwardData?.image &&\n            !forwardData?.attachments &&\n            `${forwardData?.image.length} Images`}\n          {forwardData?.image &&\n            forwardData?.attachments &&\n            `${forwardData?.attachments.length} Files & ${forwardData?.image.length} Images`}\n        </p>\n      )}\n    </div>\n  );\n};\n\ninterface ContactItemProps {\n  contact: ContactTypes;\n  selected: boolean;\n  onSelectContact: (id: string | number, selected: boolean) => void;\n  onSend: (contact: Array<number | string>) => void;\n}\nconst ContactItem = ({\n  contact,\n  selected,\n  onSelectContact,\n  onSend,\n}: ContactItemProps) => {\n  const fullName = `${contact.firstName} ${contact.lastName}`;\n  const onClick = () => {\n    onSelectContact(contact.id, !selected);\n    if (!selected) {\n      onSend([contact.id]);\n    }\n  };\n\n  return (\n    <li>\n      <div className=\"d-flex align-items-center\">\n        <div className=\"flex-grow-1\">\n          <h5 className=\"font-size-14 m-0\">{fullName}</h5>\n        </div>\n        <div className=\"flex-shrink-0\">\n          {!selected ? (\n            <Button size=\"sm\" color=\"primary\" type=\"button\" onClick={onClick}>\n              Send\n            </Button>\n          ) : (\n            <Button size=\"sm\" color=\"light\" type=\"button\" onClick={onClick}>\n              Undo\n            </Button>\n          )}\n        </div>\n      </div>\n    </li>\n  );\n};\ninterface CharacterItemProps {\n  letterContacts: DivideByKeyResultTypes;\n  index: number;\n  totalContacts: number;\n  selectedContacts: Array<number | string>;\n  onSelectContact: (id: string | number, selected: boolean) => void;\n  onSend: (contact: Array<number | string>) => void;\n}\n\nconst CharacterItem = ({\n  letterContacts,\n  index,\n  totalContacts,\n  selectedContacts,\n  onSelectContact,\n  onSend,\n}: CharacterItemProps) => {\n  return (\n    <div className={classnames({ \"mt-3\": index !== 0 })}>\n      <div className=\"contact-list-title\">{letterContacts.letter}</div>\n\n      <ul\n        className={classnames(\"list-unstyled\", \"contact-list\", {\n          \"mb-0\": index + 1 === totalContacts,\n        })}\n      >\n        {(letterContacts.data || []).map((contact: any, key: number) => {\n          const selected: boolean = selectedContacts.includes(contact.id);\n          return (\n            <ContactItem\n              contact={contact}\n              key={key}\n              selected={selected}\n              onSelectContact={onSelectContact}\n              onSend={onSend}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\ninterface ForwardModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  forwardData: null | MessagesTypes | undefined;\n  chatUserDetails: any;\n  onForward: (data: any) => void;\n}\nconst ForwardModal = ({\n  isOpen,\n  onClose,\n  forwardData,\n  chatUserDetails,\n  onForward,\n}: ForwardModalProps) => {\n  // global store\n  const { useAppSelector } = useRedux();\n\n  const { contactsList } = useAppSelector(state => ({\n    contactsList: state.Contacts.contacts,\n  }));\n\n  /*\n  contacts hook\n  */\n  const { categorizedContacts, totalContacts } = useContacts();\n  const [contacts, setContacts] = useState<any>([]);\n  useEffect(() => {\n    setContacts(categorizedContacts);\n  }, [categorizedContacts]);\n\n  /*\n  contact search\n  */\n  const [search, setSearch] = useState(\"\");\n  const onChangeSearch = (value: string) => {\n    setSearch(value);\n    let modifiedContacts = [...contactsList];\n    let filteredContacts = (modifiedContacts || []).filter((c: any) =>\n      c[\"firstName\"].toLowerCase().includes(value.toLowerCase())\n    );\n    const formattedContacts = divideByKey(\"firstName\", filteredContacts);\n    setContacts(formattedContacts);\n  };\n\n  const totalC = (contacts || []).length;\n  \n  /*\n  select contacts\n  */\n  const [selectedContacts, setSelectedContacts] = useState<\n    Array<string | number>\n  >([]);\n  const onSelectContact = (id: string | number, selected: boolean) => {\n    let modifiedList: Array<string | number> = [...selectedContacts];\n    if (selected) {\n      modifiedList = [...modifiedList, id];\n    } else {\n      modifiedList = modifiedList.filter(m => m + \"\" !== id + \"\");\n    }\n    setSelectedContacts(modifiedList);\n  };\n\n  /*\n  share all\n  */\n  const onShareAll = () => {\n    const allIds = (contactsList || []).map((c: ContactTypes) => c.id);\n    setSelectedContacts(allIds);\n    const data = {\n      contacts: [...allIds],\n      message: message,\n    };\n    onForward(data);\n  };\n\n  /*\n  message\n  */\n  const [message, setMessage] = useState<string | null | undefined>();\n  const onChangeMessage = (value: string) => {\n    setMessage(value);\n  };\n\n  /*\n  submit data\n  */\n  const onSend = (contacts: Array<number | string>) => {\n    const data = {\n      contacts: [...contacts],\n      message: message,\n    };\n    onForward(data);\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      toggle={onClose}\n      centered\n      className=\"forwardModal\"\n      tabIndex={-1}\n    >\n      <ModalHeader className=\"modal-title-custom\" toggle={onClose}>\n        Share this Message\n      </ModalHeader>\n      <ModalBody className=\"p-4\">\n        <div>\n          <ForwardMessage\n            forwardData={forwardData}\n            chatUserDetails={chatUserDetails}\n          />\n          <textarea\n            className=\"form-control\"\n            placeholder=\"Type your message...\"\n            rows={2}\n            value={message || \"\"}\n            onChange={(e: any) => {\n              onChangeMessage(e.target.value);\n            }}\n          ></textarea>\n        </div>\n        <hr className=\"my-4\" />\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control bg-light border-0 pe-0\"\n            placeholder=\"Search here..\"\n            aria-label=\"Example text with button addon\"\n            aria-describedby=\"forwardSearchbtn-addon\"\n            value={search || \"\"}\n            onChange={(e: any) => {\n              onChangeSearch(e.target.value);\n            }}\n          />\n          <button\n            className=\"btn btn-light\"\n            type=\"button\"\n            id=\"forwardSearchbtn-addon\"\n          >\n            <i className=\"bx bx-search align-middle\"></i>\n          </button>\n        </div>\n        {totalC === 0 ? (\n          <EmptyStateContacts searchedText={search} />\n        ) : (\n          <>\n            <div className=\"d-flex align-items-center px-1\">\n              <div className=\"flex-grow-1\">\n                <h4 className=\"mb-0 font-size-11 text-muted text-uppercase\">\n                  Contacts\n                </h4>\n              </div>\n              <div className=\"flex-shrink-0\">\n                <Button\n                  size=\"sm\"\n                  color=\"primary\"\n                  type=\"button\"\n                  onClick={onShareAll}\n                >\n                  Share All\n                </Button>\n              </div>\n            </div>\n            <AppSimpleBar style={{ maxHeight: \"150px\" }} className=\"mx-n4 px-1\">\n              {(contacts || []).map(\n                (letterContacts: DivideByKeyResultTypes, key: number) => (\n                  <CharacterItem\n                    letterContacts={letterContacts}\n                    key={key}\n                    index={key}\n                    totalContacts={totalContacts}\n                    selectedContacts={selectedContacts}\n                    onSelectContact={onSelectContact}\n                    onSend={onSend}\n                  />\n                )\n              )}\n            </AppSimpleBar>\n          </>\n        )}\n      </ModalBody>\n    </Modal>\n  );\n};\n\nexport default ForwardModal;\n"]},"metadata":{},"sourceType":"module"}