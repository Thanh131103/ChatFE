{"ast":null,"code":"import { takeEvery, fork, put, all, call } from \"redux-saga/effects\"; // Login Redux States\n\nimport { ChatsActionTypes } from \"./types\";\nimport { chatsApiResponseSuccess, chatsApiResponseError } from \"./actions\";\nimport { getFavourites as getFavouritesApi, getDirectMessages as getDirectMessagesApi, getChannels as getChannelsApi, addContacts as addContactsApi, createChannel as createChannelApi, getChatUserDetails as getChatUserDetailsApi, getChatUserConversations as getChatUserConversationsApi, sendMessage, receiveMessage as receiveMessageApi, readMessage as readMessageApi, receiveMessageFromUser as receiveMessageFromUserApi, deleteMessage as deleteMessageApi, forwardMessage as forwardMessageApi, deleteUserMessages as deleteUserMessagesApi, getChannelDetails as getChannelDetailsApi, toggleFavouriteContact as toggleFavouriteContactApi, getArchiveContact as getArchiveContactApi, toggleArchiveContact as toggleArchiveContactApi, readConversation as readConversationApi, deleteImage as deleteImageApi } from \"../../api/index\";\nimport { showSuccessNotification, showErrorNotification } from \"../../helpers/notifications\"; //actions\n\nimport { getDirectMessages as getDirectMessagesAction, getFavourites as getFavouritesAction, getChannels as getChannelsAction } from \"./actions\";\n\nfunction* getFavourites() {\n  try {\n    const response = yield call(getFavouritesApi);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.GET_FAVOURITES, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.GET_FAVOURITES, error));\n  }\n}\n\nfunction* getDirectMessages() {\n  try {\n    const response = yield call(getDirectMessagesApi);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.GET_DIRECT_MESSAGES, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.GET_DIRECT_MESSAGES, error));\n  }\n}\n\nfunction* getChannels() {\n  try {\n    const response = yield call(getChannelsApi);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.GET_CHANNELS, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.GET_CHANNELS, error));\n  }\n}\n\nfunction* addContacts(_ref) {\n  let {\n    payload: contacts\n  } = _ref;\n\n  try {\n    const response = yield call(addContactsApi, contacts);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.ADD_CONTACTS, response));\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error) {\n    yield call(showErrorNotification, error);\n    yield put(chatsApiResponseError(ChatsActionTypes.ADD_CONTACTS, error));\n  }\n}\n\nfunction* createChannel(_ref2) {\n  let {\n    payload: channelData\n  } = _ref2;\n\n  try {\n    const response = yield call(createChannelApi, channelData);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.CREATE_CHANNEL, response));\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error) {\n    yield call(showErrorNotification, error);\n    yield put(chatsApiResponseError(ChatsActionTypes.CREATE_CHANNEL, error));\n  }\n}\n\nfunction* getChatUserDetails(_ref3) {\n  let {\n    payload: id\n  } = _ref3;\n\n  try {\n    const response = yield call(getChatUserDetailsApi, id);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.GET_CHAT_USER_DETAILS, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.GET_CHAT_USER_DETAILS, error));\n  }\n}\n\nfunction* getChatUserConversations(_ref4) {\n  let {\n    payload: id\n  } = _ref4;\n\n  try {\n    const response = yield call(getChatUserConversationsApi, id);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.GET_CHAT_USER_CONVERSATIONS, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.GET_CHAT_USER_CONVERSATIONS, error));\n  }\n}\n\nfunction* onSendMessage(_ref5) {\n  let {\n    payload: data\n  } = _ref5;\n\n  try {\n    const response = yield call(sendMessage, data);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.ON_SEND_MESSAGE, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.ON_SEND_MESSAGE, error));\n  }\n}\n\nfunction* receiveMessage(_ref6) {\n  let {\n    payload: id\n  } = _ref6;\n\n  try {\n    const response = yield call(receiveMessageApi, id);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.RECEIVE_MESSAGE, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.RECEIVE_MESSAGE, error));\n  }\n}\n\nfunction* readMessage(_ref7) {\n  let {\n    payload: id\n  } = _ref7;\n\n  try {\n    const response = yield call(readMessageApi, id);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.READ_MESSAGE, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.READ_MESSAGE, error));\n  }\n}\n\nfunction* receiveMessageFromUser(_ref8) {\n  let {\n    payload: id\n  } = _ref8;\n\n  try {\n    const response = yield call(receiveMessageFromUserApi, id);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.RECEIVE_MESSAGE_FROM_USER, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.RECEIVE_MESSAGE_FROM_USER, error));\n  }\n}\n\nfunction* deleteMessage(_ref9) {\n  let {\n    payload: {\n      userId,\n      messageId\n    }\n  } = _ref9;\n\n  try {\n    const response = yield call(deleteMessageApi, userId, messageId);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.DELETE_MESSAGE, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.DELETE_MESSAGE, error));\n  }\n}\n\nfunction* forwardMessage(_ref10) {\n  let {\n    payload: data\n  } = _ref10;\n\n  try {\n    const response = yield call(forwardMessageApi, data);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.FORWARD_MESSAGE, response));\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error) {\n    yield call(showErrorNotification, error + \"\");\n    yield put(chatsApiResponseError(ChatsActionTypes.FORWARD_MESSAGE, error));\n  }\n}\n\nfunction* deleteUserMessages(_ref11) {\n  let {\n    payload: userId\n  } = _ref11;\n\n  try {\n    const response = yield call(deleteUserMessagesApi, userId);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.DELETE_USER_MESSAGES, response));\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error) {\n    yield call(showErrorNotification, error + \"\");\n    yield put(chatsApiResponseError(ChatsActionTypes.DELETE_USER_MESSAGES, error));\n  }\n}\n\nfunction* getChannelDetails(_ref12) {\n  let {\n    payload: id\n  } = _ref12;\n\n  try {\n    const response = yield call(getChannelDetailsApi, id);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.GET_CHANNEL_DETAILS, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.GET_CHANNEL_DETAILS, error));\n  }\n}\n\nfunction* toggleFavouriteContact(_ref13) {\n  let {\n    payload: id\n  } = _ref13;\n\n  try {\n    const response = yield call(toggleFavouriteContactApi, id);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.TOGGLE_FAVOURITE_CONTACT, response));\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error) {\n    yield call(showErrorNotification, error + \"\");\n    yield put(chatsApiResponseError(ChatsActionTypes.TOGGLE_FAVOURITE_CONTACT, error));\n  }\n}\n\nfunction* getArchiveContact() {\n  try {\n    const response = yield call(getArchiveContactApi);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.GET_ARCHIVE_CONTACT, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.GET_ARCHIVE_CONTACT, error));\n  }\n}\n\nfunction* toggleArchiveContact(_ref14) {\n  let {\n    payload: id\n  } = _ref14;\n\n  try {\n    const response = yield call(toggleArchiveContactApi, id);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.TOGGLE_ARCHIVE_CONTACT, response));\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error) {\n    yield call(showErrorNotification, error + \"\");\n    yield put(chatsApiResponseError(ChatsActionTypes.TOGGLE_ARCHIVE_CONTACT, error));\n  }\n}\n\nfunction* readConversation(_ref15) {\n  let {\n    payload: id\n  } = _ref15;\n\n  try {\n    const response = yield call(readConversationApi, id);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.READ_CONVERSATION, response));\n    yield put(getDirectMessagesAction());\n    yield put(getFavouritesAction());\n    yield put(getChannelsAction());\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.READ_CONVERSATION, error));\n  }\n}\n\nfunction* deleteImage(_ref16) {\n  let {\n    payload: {\n      userId,\n      messageId,\n      imageId\n    }\n  } = _ref16;\n\n  try {\n    const response = yield call(deleteImageApi, userId, messageId, imageId);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.DELETE_IMAGE, response));\n  } catch (error) {\n    yield put(chatsApiResponseError(ChatsActionTypes.DELETE_IMAGE, error));\n  }\n}\n\nexport function* watchGetFavourites() {\n  yield takeEvery(ChatsActionTypes.GET_FAVOURITES, getFavourites);\n}\nexport function* watchGetDirectMessages() {\n  yield takeEvery(ChatsActionTypes.GET_DIRECT_MESSAGES, getDirectMessages);\n}\nexport function* watchGetChannels() {\n  yield takeEvery(ChatsActionTypes.GET_CHANNELS, getChannels);\n}\nexport function* watchAddContacts() {\n  yield takeEvery(ChatsActionTypes.ADD_CONTACTS, addContacts);\n}\nexport function* watchCreateChannel() {\n  yield takeEvery(ChatsActionTypes.CREATE_CHANNEL, createChannel);\n}\nexport function* watchGetChatUserDetails() {\n  yield takeEvery(ChatsActionTypes.GET_CHAT_USER_DETAILS, getChatUserDetails);\n}\nexport function* watchGetChatUserConversations() {\n  yield takeEvery(ChatsActionTypes.GET_CHAT_USER_CONVERSATIONS, getChatUserConversations);\n}\nexport function* watchOnSendMessage() {\n  yield takeEvery(ChatsActionTypes.ON_SEND_MESSAGE, onSendMessage);\n}\nexport function* watchReceiveMessage() {\n  yield takeEvery(ChatsActionTypes.RECEIVE_MESSAGE, receiveMessage);\n}\nexport function* watchReadMessage() {\n  yield takeEvery(ChatsActionTypes.READ_MESSAGE, readMessage);\n}\nexport function* watchReceiveMessageFromUser() {\n  yield takeEvery(ChatsActionTypes.RECEIVE_MESSAGE_FROM_USER, receiveMessageFromUser);\n}\nexport function* watchDeleteMessage() {\n  yield takeEvery(ChatsActionTypes.DELETE_MESSAGE, deleteMessage);\n}\nexport function* watchForwardMessage() {\n  yield takeEvery(ChatsActionTypes.FORWARD_MESSAGE, forwardMessage);\n}\nexport function* watchDeleteUserMessages() {\n  yield takeEvery(ChatsActionTypes.DELETE_USER_MESSAGES, deleteUserMessages);\n}\nexport function* watchGetChannelDetails() {\n  yield takeEvery(ChatsActionTypes.GET_CHANNEL_DETAILS, getChannelDetails);\n}\nexport function* watchToggleFavouriteContact() {\n  yield takeEvery(ChatsActionTypes.TOGGLE_FAVOURITE_CONTACT, toggleFavouriteContact);\n}\nexport function* watchGetArchiveContact() {\n  yield takeEvery(ChatsActionTypes.GET_ARCHIVE_CONTACT, getArchiveContact);\n}\nexport function* watchToggleArchiveContact() {\n  yield takeEvery(ChatsActionTypes.TOGGLE_ARCHIVE_CONTACT, toggleArchiveContact);\n}\nexport function* watchReadConversation() {\n  yield takeEvery(ChatsActionTypes.READ_CONVERSATION, readConversation);\n}\nexport function* watchDeleteImage() {\n  yield takeEvery(ChatsActionTypes.DELETE_IMAGE, deleteImage);\n}\n\nfunction* chatsSaga() {\n  yield all([fork(watchGetFavourites), fork(watchGetDirectMessages), fork(watchGetChannels), fork(watchAddContacts), fork(watchCreateChannel), fork(watchGetChatUserDetails), fork(watchGetChatUserConversations), fork(watchOnSendMessage), fork(watchReceiveMessage), fork(watchReadMessage), fork(watchReceiveMessageFromUser), fork(watchDeleteMessage), fork(watchForwardMessage), fork(watchDeleteUserMessages), fork(watchGetChannelDetails), fork(watchToggleFavouriteContact), fork(watchGetArchiveContact), fork(watchToggleArchiveContact), fork(watchReadConversation), fork(watchDeleteImage)]);\n}\n\nexport default chatsSaga;","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/redux/chats/saga.ts"],"names":["takeEvery","fork","put","all","call","ChatsActionTypes","chatsApiResponseSuccess","chatsApiResponseError","getFavourites","getFavouritesApi","getDirectMessages","getDirectMessagesApi","getChannels","getChannelsApi","addContacts","addContactsApi","createChannel","createChannelApi","getChatUserDetails","getChatUserDetailsApi","getChatUserConversations","getChatUserConversationsApi","sendMessage","receiveMessage","receiveMessageApi","readMessage","readMessageApi","receiveMessageFromUser","receiveMessageFromUserApi","deleteMessage","deleteMessageApi","forwardMessage","forwardMessageApi","deleteUserMessages","deleteUserMessagesApi","getChannelDetails","getChannelDetailsApi","toggleFavouriteContact","toggleFavouriteContactApi","getArchiveContact","getArchiveContactApi","toggleArchiveContact","toggleArchiveContactApi","readConversation","readConversationApi","deleteImage","deleteImageApi","showSuccessNotification","showErrorNotification","getDirectMessagesAction","getFavouritesAction","getChannelsAction","response","GET_FAVOURITES","error","GET_DIRECT_MESSAGES","GET_CHANNELS","payload","contacts","ADD_CONTACTS","channelData","CREATE_CHANNEL","id","GET_CHAT_USER_DETAILS","GET_CHAT_USER_CONVERSATIONS","onSendMessage","data","ON_SEND_MESSAGE","RECEIVE_MESSAGE","READ_MESSAGE","RECEIVE_MESSAGE_FROM_USER","userId","messageId","DELETE_MESSAGE","FORWARD_MESSAGE","DELETE_USER_MESSAGES","GET_CHANNEL_DETAILS","TOGGLE_FAVOURITE_CONTACT","GET_ARCHIVE_CONTACT","TOGGLE_ARCHIVE_CONTACT","READ_CONVERSATION","imageId","DELETE_IMAGE","watchGetFavourites","watchGetDirectMessages","watchGetChannels","watchAddContacts","watchCreateChannel","watchGetChatUserDetails","watchGetChatUserConversations","watchOnSendMessage","watchReceiveMessage","watchReadMessage","watchReceiveMessageFromUser","watchDeleteMessage","watchForwardMessage","watchDeleteUserMessages","watchGetChannelDetails","watchToggleFavouriteContact","watchGetArchiveContact","watchToggleArchiveContact","watchReadConversation","watchDeleteImage","chatsSaga"],"mappings":"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","sourcesContent":["import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\n\n// Login Redux States\nimport { ChatsActionTypes } from \"./types\";\nimport { chatsApiResponseSuccess, chatsApiResponseError } from \"./actions\";\n\nimport {\n  getFavourites as getFavouritesApi,\n  getDirectMessages as getDirectMessagesApi,\n  getChannels as getChannelsApi,\n  addContacts as addContactsApi,\n  createChannel as createChannelApi,\n  getChatUserDetails as getChatUserDetailsApi,\n  getChatUserConversations as getChatUserConversationsApi,\n  sendMessage,\n  receiveMessage as receiveMessageApi,\n  readMessage as readMessageApi,\n  receiveMessageFromUser as receiveMessageFromUserApi,\n  deleteMessage as deleteMessageApi,\n  forwardMessage as forwardMessageApi,\n  deleteUserMessages as deleteUserMessagesApi,\n  getChannelDetails as getChannelDetailsApi,\n  toggleFavouriteContact as toggleFavouriteContactApi,\n  getArchiveContact as getArchiveContactApi,\n  toggleArchiveContact as toggleArchiveContactApi,\n  readConversation as readConversationApi,\n  deleteImage as deleteImageApi,\n} from \"../../api/index\";\n\nimport {\n  showSuccessNotification,\n  showErrorNotification,\n} from \"../../helpers/notifications\";\n\n//actions\nimport {\n  getDirectMessages as getDirectMessagesAction,\n  getFavourites as getFavouritesAction,\n  getChannels as getChannelsAction,\n} from \"./actions\";\n\nfunction* getFavourites() {\n  try {\n    const response: Promise<any> = yield call(getFavouritesApi);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.GET_FAVOURITES, response)\n    );\n  } catch (error: any) {\n    yield put(chatsApiResponseError(ChatsActionTypes.GET_FAVOURITES, error));\n  }\n}\n\nfunction* getDirectMessages() {\n  try {\n    const response: Promise<any> = yield call(getDirectMessagesApi);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.GET_DIRECT_MESSAGES, response)\n    );\n  } catch (error: any) {\n    yield put(\n      chatsApiResponseError(ChatsActionTypes.GET_DIRECT_MESSAGES, error)\n    );\n  }\n}\n\nfunction* getChannels() {\n  try {\n    const response: Promise<any> = yield call(getChannelsApi);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.GET_CHANNELS, response));\n  } catch (error: any) {\n    yield put(chatsApiResponseError(ChatsActionTypes.GET_CHANNELS, error));\n  }\n}\n\nfunction* addContacts({ payload: contacts }: any) {\n  try {\n    const response: Promise<any> = yield call(addContactsApi, contacts);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.ADD_CONTACTS, response));\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error: any) {\n    yield call(showErrorNotification, error);\n    yield put(chatsApiResponseError(ChatsActionTypes.ADD_CONTACTS, error));\n  }\n}\nfunction* createChannel({ payload: channelData }: any) {\n  try {\n    const response: Promise<any> = yield call(createChannelApi, channelData);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.CREATE_CHANNEL, response)\n    );\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error: any) {\n    yield call(showErrorNotification, error);\n    yield put(chatsApiResponseError(ChatsActionTypes.CREATE_CHANNEL, error));\n  }\n}\n\nfunction* getChatUserDetails({ payload: id }: any) {\n  try {\n    const response: Promise<any> = yield call(getChatUserDetailsApi, id);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.GET_CHAT_USER_DETAILS, response)\n    );\n  } catch (error: any) {\n    yield put(\n      chatsApiResponseError(ChatsActionTypes.GET_CHAT_USER_DETAILS, error)\n    );\n  }\n}\n\nfunction* getChatUserConversations({ payload: id }: any) {\n  try {\n    const response: Promise<any> = yield call(getChatUserConversationsApi, id);\n    yield put(\n      chatsApiResponseSuccess(\n        ChatsActionTypes.GET_CHAT_USER_CONVERSATIONS,\n        response\n      )\n    );\n  } catch (error: any) {\n    yield put(\n      chatsApiResponseError(ChatsActionTypes.GET_CHAT_USER_CONVERSATIONS, error)\n    );\n  }\n}\n\nfunction* onSendMessage({ payload: data }: any) {\n  try {\n    const response: Promise<any> = yield call(sendMessage, data);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.ON_SEND_MESSAGE, response)\n    );\n  } catch (error: any) {\n    yield put(chatsApiResponseError(ChatsActionTypes.ON_SEND_MESSAGE, error));\n  }\n}\n\nfunction* receiveMessage({ payload: id }: any) {\n  try {\n    const response: Promise<any> = yield call(receiveMessageApi, id);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.RECEIVE_MESSAGE, response)\n    );\n  } catch (error: any) {\n    yield put(chatsApiResponseError(ChatsActionTypes.RECEIVE_MESSAGE, error));\n  }\n}\n\nfunction* readMessage({ payload: id }: any) {\n  try {\n    const response: Promise<any> = yield call(readMessageApi, id);\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.READ_MESSAGE, response));\n  } catch (error: any) {\n    yield put(chatsApiResponseError(ChatsActionTypes.READ_MESSAGE, error));\n  }\n}\n\nfunction* receiveMessageFromUser({ payload: id }: any) {\n  try {\n    const response: Promise<any> = yield call(receiveMessageFromUserApi, id);\n    yield put(\n      chatsApiResponseSuccess(\n        ChatsActionTypes.RECEIVE_MESSAGE_FROM_USER,\n        response\n      )\n    );\n  } catch (error: any) {\n    yield put(\n      chatsApiResponseError(ChatsActionTypes.RECEIVE_MESSAGE_FROM_USER, error)\n    );\n  }\n}\n\nfunction* deleteMessage({ payload: { userId, messageId } }: any) {\n  try {\n    const response: Promise<any> = yield call(\n      deleteMessageApi,\n      userId,\n      messageId\n    );\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.DELETE_MESSAGE, response)\n    );\n  } catch (error: any) {\n    yield put(chatsApiResponseError(ChatsActionTypes.DELETE_MESSAGE, error));\n  }\n}\n\nfunction* forwardMessage({ payload: data }: any) {\n  try {\n    const response: Promise<any> = yield call(forwardMessageApi, data);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.FORWARD_MESSAGE, response)\n    );\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error: any) {\n    yield call(showErrorNotification, error + \"\");\n    yield put(chatsApiResponseError(ChatsActionTypes.FORWARD_MESSAGE, error));\n  }\n}\n\nfunction* deleteUserMessages({ payload: userId }: any) {\n  try {\n    const response: Promise<any> = yield call(deleteUserMessagesApi, userId);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.DELETE_USER_MESSAGES, response)\n    );\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error: any) {\n    yield call(showErrorNotification, error + \"\");\n    yield put(\n      chatsApiResponseError(ChatsActionTypes.DELETE_USER_MESSAGES, error)\n    );\n  }\n}\n\nfunction* getChannelDetails({ payload: id }: any) {\n  try {\n    const response: Promise<any> = yield call(getChannelDetailsApi, id);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.GET_CHANNEL_DETAILS, response)\n    );\n  } catch (error: any) {\n    yield put(\n      chatsApiResponseError(ChatsActionTypes.GET_CHANNEL_DETAILS, error)\n    );\n  }\n}\n\nfunction* toggleFavouriteContact({ payload: id }: any) {\n  try {\n    const response: Promise<any> = yield call(toggleFavouriteContactApi, id);\n    yield put(\n      chatsApiResponseSuccess(\n        ChatsActionTypes.TOGGLE_FAVOURITE_CONTACT,\n        response\n      )\n    );\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error: any) {\n    yield call(showErrorNotification, error + \"\");\n    yield put(\n      chatsApiResponseError(ChatsActionTypes.TOGGLE_FAVOURITE_CONTACT, error)\n    );\n  }\n}\n\nfunction* getArchiveContact() {\n  try {\n    const response: Promise<any> = yield call(getArchiveContactApi);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.GET_ARCHIVE_CONTACT, response)\n    );\n  } catch (error: any) {\n    yield put(\n      chatsApiResponseError(ChatsActionTypes.GET_ARCHIVE_CONTACT, error)\n    );\n  }\n}\n\nfunction* toggleArchiveContact({ payload: id }: any) {\n  try {\n    const response: Promise<any> = yield call(toggleArchiveContactApi, id);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.TOGGLE_ARCHIVE_CONTACT, response)\n    );\n    yield call(showSuccessNotification, response + \"\");\n  } catch (error: any) {\n    yield call(showErrorNotification, error + \"\");\n    yield put(\n      chatsApiResponseError(ChatsActionTypes.TOGGLE_ARCHIVE_CONTACT, error)\n    );\n  }\n}\n\nfunction* readConversation({ payload: id }: any) {\n  try {\n    const response: Promise<any> = yield call(readConversationApi, id);\n    yield put(\n      chatsApiResponseSuccess(ChatsActionTypes.READ_CONVERSATION, response)\n    );\n    yield put(getDirectMessagesAction());\n    yield put(getFavouritesAction());\n    yield put(getChannelsAction());\n  } catch (error: any) {\n    yield put(chatsApiResponseError(ChatsActionTypes.READ_CONVERSATION, error));\n  }\n}\n\nfunction* deleteImage({ payload: { userId, messageId, imageId } }: any) {\n  try {\n    const response: Promise<any> = yield call(\n      deleteImageApi,\n      userId,\n      messageId,\n      imageId\n    );\n    yield put(chatsApiResponseSuccess(ChatsActionTypes.DELETE_IMAGE, response));\n  } catch (error: any) {\n    yield put(chatsApiResponseError(ChatsActionTypes.DELETE_IMAGE, error));\n  }\n}\n\nexport function* watchGetFavourites() {\n  yield takeEvery(ChatsActionTypes.GET_FAVOURITES, getFavourites);\n}\n\nexport function* watchGetDirectMessages() {\n  yield takeEvery(ChatsActionTypes.GET_DIRECT_MESSAGES, getDirectMessages);\n}\nexport function* watchGetChannels() {\n  yield takeEvery(ChatsActionTypes.GET_CHANNELS, getChannels);\n}\nexport function* watchAddContacts() {\n  yield takeEvery(ChatsActionTypes.ADD_CONTACTS, addContacts);\n}\nexport function* watchCreateChannel() {\n  yield takeEvery(ChatsActionTypes.CREATE_CHANNEL, createChannel);\n}\nexport function* watchGetChatUserDetails() {\n  yield takeEvery(ChatsActionTypes.GET_CHAT_USER_DETAILS, getChatUserDetails);\n}\nexport function* watchGetChatUserConversations() {\n  yield takeEvery(\n    ChatsActionTypes.GET_CHAT_USER_CONVERSATIONS,\n    getChatUserConversations\n  );\n}\nexport function* watchOnSendMessage() {\n  yield takeEvery(ChatsActionTypes.ON_SEND_MESSAGE, onSendMessage);\n}\nexport function* watchReceiveMessage() {\n  yield takeEvery(ChatsActionTypes.RECEIVE_MESSAGE, receiveMessage);\n}\nexport function* watchReadMessage() {\n  yield takeEvery(ChatsActionTypes.READ_MESSAGE, readMessage);\n}\nexport function* watchReceiveMessageFromUser() {\n  yield takeEvery(\n    ChatsActionTypes.RECEIVE_MESSAGE_FROM_USER,\n    receiveMessageFromUser\n  );\n}\nexport function* watchDeleteMessage() {\n  yield takeEvery(ChatsActionTypes.DELETE_MESSAGE, deleteMessage);\n}\nexport function* watchForwardMessage() {\n  yield takeEvery(ChatsActionTypes.FORWARD_MESSAGE, forwardMessage);\n}\nexport function* watchDeleteUserMessages() {\n  yield takeEvery(ChatsActionTypes.DELETE_USER_MESSAGES, deleteUserMessages);\n}\nexport function* watchGetChannelDetails() {\n  yield takeEvery(ChatsActionTypes.GET_CHANNEL_DETAILS, getChannelDetails);\n}\nexport function* watchToggleFavouriteContact() {\n  yield takeEvery(\n    ChatsActionTypes.TOGGLE_FAVOURITE_CONTACT,\n    toggleFavouriteContact\n  );\n}\nexport function* watchGetArchiveContact() {\n  yield takeEvery(ChatsActionTypes.GET_ARCHIVE_CONTACT, getArchiveContact);\n}\nexport function* watchToggleArchiveContact() {\n  yield takeEvery(\n    ChatsActionTypes.TOGGLE_ARCHIVE_CONTACT,\n    toggleArchiveContact\n  );\n}\nexport function* watchReadConversation() {\n  yield takeEvery(ChatsActionTypes.READ_CONVERSATION, readConversation);\n}\nexport function* watchDeleteImage() {\n  yield takeEvery(ChatsActionTypes.DELETE_IMAGE, deleteImage);\n}\n\nfunction* chatsSaga() {\n  yield all([\n    fork(watchGetFavourites),\n    fork(watchGetDirectMessages),\n    fork(watchGetChannels),\n    fork(watchAddContacts),\n    fork(watchCreateChannel),\n    fork(watchGetChatUserDetails),\n    fork(watchGetChatUserConversations),\n    fork(watchOnSendMessage),\n    fork(watchReceiveMessage),\n    fork(watchReadMessage),\n    fork(watchReceiveMessageFromUser),\n    fork(watchDeleteMessage),\n    fork(watchForwardMessage),\n    fork(watchDeleteUserMessages),\n    fork(watchGetChannelDetails),\n    fork(watchToggleFavouriteContact),\n    fork(watchGetArchiveContact),\n    fork(watchToggleArchiveContact),\n    fork(watchReadConversation),\n    fork(watchDeleteImage),\n  ]);\n}\n\nexport default chatsSaga;\n"]},"metadata":{},"sourceType":"module"}