{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Chats/ChatUser.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\"; // interface\n\nimport { STATUS_TYPES } from \"../../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ChatUser = _ref => {\n  _s();\n\n  let {\n    user,\n    selectedChat,\n    onSelectChat\n  } = _ref;\n  const fullName = `${user.firstName} ${user.lastName}`;\n  const shortName = `${user.firstName.charAt(0)}${user.lastName.charAt(0)}`;\n  const colors = [\"bg-primary\", \"bg-danger\", \"bg-info\", \"bg-warning\", \"bg-secondary\", \"bg-pink\", \"bg-purple\"];\n  const [color] = useState(Math.floor(Math.random() * colors.length));\n  const isOnline = user.status && user.status === STATUS_TYPES.ACTIVE;\n  const unRead = user.meta && user.meta.unRead;\n  const isSelectedChat = selectedChat && selectedChat === user.id ? true : false;\n\n  const onClick = () => {\n    onSelectChat(user.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classnames({\n      active: isSelectedChat\n    }),\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      className: classnames({\n        \"unread-msg-user\": unRead\n      }),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames(\"chat-user-img\", \"align-self-center\", \"me-2\", \"ms-0\", {\n            online: isOnline\n          }),\n          children: user.profileImage ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: user.profileImage,\n              className: \"rounded-circle avatar-xs\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), isOnline && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"user-status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar-xs\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classnames(\"avatar-title\", \"rounded-circle\", \"text-uppercase\", \"text-white\", colors[color]),\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"username\",\n                children: [\" \", shortName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"user-status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-truncate mb-0\",\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), unRead && unRead !== 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ms-auto\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"badge badge-soft-dark rounded p-1\",\n            children: unRead\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatUser, \"PexqdgSKIgNwgPdTbhf0/h0GJGE=\");\n\n_c = ChatUser;\nexport default ChatUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatUser\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Chats/ChatUser.tsx"],"names":["React","useState","Link","classnames","STATUS_TYPES","ChatUser","user","selectedChat","onSelectChat","fullName","firstName","lastName","shortName","charAt","colors","color","Math","floor","random","length","isOnline","status","ACTIVE","unRead","meta","isSelectedChat","id","onClick","active","online","profileImage"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\n\n// interface\nimport { UserTypes } from \"../../../data/chat\";\nimport { STATUS_TYPES } from \"../../../constants\";\n\ninterface ChatUserProps {\n  user: UserTypes;\n  selectedChat: string | number;\n  onSelectChat: (id: number | string) => void;\n}\nconst ChatUser = ({ user, selectedChat, onSelectChat }: ChatUserProps) => {\n  const fullName = `${user.firstName} ${user.lastName}`;\n  const shortName = `${user.firstName.charAt(0)}${user.lastName.charAt(0)}`;\n\n  const colors = [\n    \"bg-primary\",\n    \"bg-danger\",\n    \"bg-info\",\n    \"bg-warning\",\n    \"bg-secondary\",\n    \"bg-pink\",\n    \"bg-purple\",\n  ];\n  const [color] = useState(Math.floor(Math.random() * colors.length));\n  const isOnline = user.status && user.status === STATUS_TYPES.ACTIVE;\n  const unRead = user.meta && user.meta.unRead;\n\n  const isSelectedChat: boolean =\n    selectedChat && selectedChat === user.id ? true : false;\n  const onClick = () => {\n    onSelectChat(user.id);\n  };\n  return (\n    <li className={classnames({ active: isSelectedChat })} onClick={onClick}>\n      <Link to=\"#\" className={classnames({ \"unread-msg-user\": unRead })}>\n        <div className=\"d-flex align-items-center\">\n          <div\n            className={classnames(\n              \"chat-user-img\",\n              \"align-self-center\",\n              \"me-2\",\n              \"ms-0\",\n              { online: isOnline }\n            )}\n          >\n            {user.profileImage ? (\n              <>\n                <img\n                  src={user.profileImage}\n                  className=\"rounded-circle avatar-xs\"\n                  alt=\"\"\n                />\n                {isOnline && <span className=\"user-status\"></span>}\n              </>\n            ) : (\n              <div className=\"avatar-xs\">\n                <span\n                  className={classnames(\n                    \"avatar-title\",\n                    \"rounded-circle\",\n                    \"text-uppercase\",\n                    \"text-white\",\n                    colors[color]\n                  )}\n                >\n                  <span className=\"username\"> {shortName}</span>\n                  <span className=\"user-status\"></span>\n                </span>\n              </div>\n            )}\n          </div>\n          <div className=\"overflow-hidden\">\n            <p className=\"text-truncate mb-0\">{fullName}</p>\n          </div>\n          {unRead && unRead !== 0 ? (\n            <div className=\"ms-auto\">\n              <span className=\"badge badge-soft-dark rounded p-1\">\n                {unRead}\n              </span>\n            </div>\n          ) : null}\n        </div>\n      </Link>\n    </li>\n  );\n};\n\nexport default ChatUser;\n"]},"metadata":{},"sourceType":"module"}