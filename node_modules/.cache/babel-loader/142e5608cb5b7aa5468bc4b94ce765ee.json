{"ast":null,"code":"import { takeEvery, fork, put, all, call } from \"redux-saga/effects\"; // Login Redux States\n\nimport { CallsActionTypes } from \"./types\";\nimport { callsApiResponseSuccess, callsApiResponseError } from \"./actions\";\nimport { getCalls as getCallsApi } from \"../../api/index\";\n\nfunction* getCalls() {\n  try {\n    const response = yield call(getCallsApi);\n    yield put(callsApiResponseSuccess(CallsActionTypes.GET_CALLS, response));\n  } catch (error) {\n    yield put(callsApiResponseError(CallsActionTypes.GET_CALLS, error));\n  }\n}\n\nexport function* watchGetCalls() {\n  yield takeEvery(CallsActionTypes.GET_CALLS, getCalls);\n}\n\nfunction* callsSaga() {\n  yield all([fork(watchGetCalls)]);\n}\n\nexport default callsSaga;","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/redux/calls/saga.ts"],"names":["takeEvery","fork","put","all","call","CallsActionTypes","callsApiResponseSuccess","callsApiResponseError","getCalls","getCallsApi","response","GET_CALLS","error","watchGetCalls","callsSaga"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,EAAoCC,IAApC,QAAgD,oBAAhD,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,SAASC,uBAAT,EAAkCC,qBAAlC,QAA+D,WAA/D;AAEA,SAASC,QAAQ,IAAIC,WAArB,QAAwC,iBAAxC;;AAEA,UAAUD,QAAV,GAAqB;AACnB,MAAI;AACF,UAAME,QAAsB,GAAG,MAAMN,IAAI,CAACK,WAAD,CAAzC;AACA,UAAMP,GAAG,CAACI,uBAAuB,CAACD,gBAAgB,CAACM,SAAlB,EAA6BD,QAA7B,CAAxB,CAAT;AACD,GAHD,CAGE,OAAOE,KAAP,EAAmB;AACnB,UAAMV,GAAG,CAACK,qBAAqB,CAACF,gBAAgB,CAACM,SAAlB,EAA6BC,KAA7B,CAAtB,CAAT;AACD;AACF;;AAED,OAAO,UAAUC,aAAV,GAA0B;AAC/B,QAAMb,SAAS,CAACK,gBAAgB,CAACM,SAAlB,EAA6BH,QAA7B,CAAf;AACD;;AAED,UAAUM,SAAV,GAAsB;AACpB,QAAMX,GAAG,CAAC,CAACF,IAAI,CAACY,aAAD,CAAL,CAAD,CAAT;AACD;;AAED,eAAeC,SAAf","sourcesContent":["import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\n\n// Login Redux States\nimport { CallsActionTypes } from \"./types\";\nimport { callsApiResponseSuccess, callsApiResponseError } from \"./actions\";\n\nimport { getCalls as getCallsApi } from \"../../api/index\";\n\nfunction* getCalls() {\n  try {\n    const response: Promise<any> = yield call(getCallsApi);\n    yield put(callsApiResponseSuccess(CallsActionTypes.GET_CALLS, response));\n  } catch (error: any) {\n    yield put(callsApiResponseError(CallsActionTypes.GET_CALLS, error));\n  }\n}\n\nexport function* watchGetCalls() {\n  yield takeEvery(CallsActionTypes.GET_CALLS, getCalls);\n}\n\nfunction* callsSaga() {\n  yield all([fork(watchGetCalls)]);\n}\n\nexport default callsSaga;\n"]},"metadata":{},"sourceType":"module"}