{"ast":null,"code":"// types\nimport { ProfileActionTypes } from \"./types\";\nexport const INIT_STATE = {\n  profileDetails: {}\n};\n\nconst Profile = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ProfileActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case ProfileActionTypes.GET_PROFILE_DETAILS:\n          return { ...state,\n            profileDetails: action.payload.data,\n            isProfileFetched: true,\n            getProfileLoading: false\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case ProfileActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case ProfileActionTypes.GET_PROFILE_DETAILS:\n          return { ...state,\n            isProfileFetched: false,\n            getProfileLoading: false\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case ProfileActionTypes.GET_PROFILE_DETAILS:\n      {\n        return { ...state,\n          getProfileLoading: true,\n          isProfileFetched: false\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/redux/profile/reducer.ts"],"names":["ProfileActionTypes","INIT_STATE","profileDetails","Profile","state","action","type","API_RESPONSE_SUCCESS","payload","actionType","GET_PROFILE_DETAILS","data","isProfileFetched","getProfileLoading","API_RESPONSE_ERROR"],"mappings":"AAAA;AACA,SAASA,kBAAT,QAAiD,SAAjD;AAEA,OAAO,MAAMC,UAAwB,GAAG;AACtCC,EAAAA,cAAc,EAAE;AADsB,CAAjC;;AAIP,MAAMC,OAAO,GAAG,YAAqC;AAAA,MAApCC,KAAoC,uEAA5BH,UAA4B;AAAA,MAAhBI,MAAgB;;AACnD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,kBAAkB,CAACO,oBAAxB;AACE,cAAQF,MAAM,CAACG,OAAP,CAAeC,UAAvB;AACE,aAAKT,kBAAkB,CAACU,mBAAxB;AACE,iBAAO,EACL,GAAGN,KADE;AAELF,YAAAA,cAAc,EAAEG,MAAM,CAACG,OAAP,CAAeG,IAF1B;AAGLC,YAAAA,gBAAgB,EAAE,IAHb;AAILC,YAAAA,iBAAiB,EAAE;AAJd,WAAP;;AAMF;AACE,iBAAO,EAAE,GAAGT;AAAL,WAAP;AATJ;;AAYF,SAAKJ,kBAAkB,CAACc,kBAAxB;AACE,cAAQT,MAAM,CAACG,OAAP,CAAeC,UAAvB;AACE,aAAKT,kBAAkB,CAACU,mBAAxB;AACE,iBAAO,EACL,GAAGN,KADE;AAELQ,YAAAA,gBAAgB,EAAE,KAFb;AAGLC,YAAAA,iBAAiB,EAAE;AAHd,WAAP;;AAMF;AACE,iBAAO,EAAE,GAAGT;AAAL,WAAP;AATJ;;AAYF,SAAKJ,kBAAkB,CAACU,mBAAxB;AAA6C;AAC3C,eAAO,EACL,GAAGN,KADE;AAELS,UAAAA,iBAAiB,EAAE,IAFd;AAGLD,UAAAA,gBAAgB,EAAE;AAHb,SAAP;AAKD;;AAED;AACE,aAAO,EAAE,GAAGR;AAAL,OAAP;AApCJ;AAsCD,CAvCD;;KAAMD,O;AAyCN,eAAeA,OAAf","sourcesContent":["// types\nimport { ProfileActionTypes, ProfileState } from \"./types\";\n\nexport const INIT_STATE: ProfileState = {\n  profileDetails: {},\n};\n\nconst Profile = (state = INIT_STATE, action: any) => {\n  switch (action.type) {\n    case ProfileActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case ProfileActionTypes.GET_PROFILE_DETAILS:\n          return {\n            ...state,\n            profileDetails: action.payload.data,\n            isProfileFetched: true,\n            getProfileLoading: false,\n          };\n        default:\n          return { ...state };\n      }\n\n    case ProfileActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case ProfileActionTypes.GET_PROFILE_DETAILS:\n          return {\n            ...state,\n            isProfileFetched: false,\n            getProfileLoading: false,\n          };\n\n        default:\n          return { ...state };\n      }\n\n    case ProfileActionTypes.GET_PROFILE_DETAILS: {\n      return {\n        ...state,\n        getProfileLoading: true,\n        isProfileFetched: false,\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}