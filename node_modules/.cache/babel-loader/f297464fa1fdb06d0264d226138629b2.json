{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\"; // Login Redux States\n\nimport { AuthLoginActionTypes } from \"./types\";\nimport { authLoginApiResponseSuccess, authLoginApiResponseError } from \"./actions\"; //Include Both Helper File with needed methods\n\nimport { getFirebaseBackend, setLoggeedInUser } from \"../../../helpers/firebase_helper\";\nimport { postFakeLogin, postJwtLogin, postSocialLogin } from \"../../../api/index\";\nconst fireBaseBackend = getFirebaseBackend();\n\nfunction* loginUser(_ref) {\n  let {\n    payload: {\n      user\n    }\n  } = _ref;\n\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.loginUser, user.email, user.password); // myData\n\n      yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response));\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\n      const response = yield call(postJwtLogin, {\n        email: user.email,\n        password: user.password\n      });\n      setLoggeedInUser(response);\n      yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response));\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"fake\") {\n      const response = yield call(postFakeLogin, {\n        email: user.email,\n        password: user.password\n      });\n      setLoggeedInUser(response);\n      yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response));\n    }\n  } catch (error) {\n    yield put(authLoginApiResponseError(AuthLoginActionTypes.LOGIN_USER, error));\n  }\n}\n\nfunction* socialLogin(_ref2) {\n  let {\n    payload: {\n      data,\n      type\n    }\n  } = _ref2;\n\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      let fireBaseBackend = getFirebaseBackend();\n      const response = yield call(fireBaseBackend.socialLoginUser, data, type);\n      setLoggeedInUser(response);\n      yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response));\n    } else {\n      const response = yield call(postSocialLogin, data);\n      yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response));\n    }\n  } catch (error) {\n    yield put(authLoginApiResponseError(AuthLoginActionTypes.LOGIN_USER, error));\n  }\n}\n\nfunction* logoutUser() {\n  try {\n    localStorage.removeItem(\"authUser\");\n\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.logout);\n      yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGOUT_USER, response));\n    } else {\n      yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGOUT_USER, true));\n    }\n  } catch (error) {\n    yield put(authLoginApiResponseError(AuthLoginActionTypes.LOGOUT_USER, error));\n  }\n}\n\nfunction* loginSaga() {\n  yield takeEvery(AuthLoginActionTypes.LOGIN_USER, loginUser);\n  yield takeEvery(AuthLoginActionTypes.LOGOUT_USER, logoutUser);\n  yield takeLatest(AuthLoginActionTypes.SOCIAL_LOGIN, socialLogin);\n}\n\nexport default loginSaga;","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/redux/auth/login/saga.ts"],"names":["call","put","takeEvery","takeLatest","AuthLoginActionTypes","authLoginApiResponseSuccess","authLoginApiResponseError","getFirebaseBackend","setLoggeedInUser","postFakeLogin","postJwtLogin","postSocialLogin","fireBaseBackend","loginUser","payload","user","process","env","REACT_APP_DEFAULTAUTH","response","email","password","LOGIN_USER","error","socialLogin","data","type","socialLoginUser","logoutUser","localStorage","removeItem","logout","LOGOUT_USER","loginSaga","SOCIAL_LOGIN"],"mappings":"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","sourcesContent":["import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\n\r\n// Login Redux States\r\nimport { AuthLoginActionTypes } from \"./types\";\r\nimport {\r\n  authLoginApiResponseSuccess,\r\n  authLoginApiResponseError,\r\n} from \"./actions\";\r\n\r\n//Include Both Helper File with needed methods\r\nimport {\r\n  getFirebaseBackend,\r\n  setLoggeedInUser,\r\n} from \"../../../helpers/firebase_helper\";\r\nimport {\r\n  postFakeLogin,\r\n  postJwtLogin,\r\n  postSocialLogin,\r\n} from \"../../../api/index\";\r\n\r\nconst fireBaseBackend = getFirebaseBackend();\r\n\r\nfunction* loginUser({ payload: { user } }: any) {\r\n  try {\r\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\r\n      const response: Promise<any> = yield call(\r\n        fireBaseBackend.loginUser,\r\n        user.email,\r\n        user.password\r\n      );\r\n      // myData\r\n      yield put(\r\n        authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response)\r\n      );\r\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"jwt\") {\r\n      const response: Promise<any> = yield call(postJwtLogin, {\r\n        email: user.email,\r\n        password: user.password,\r\n      });\r\n      setLoggeedInUser(response);\r\n      yield put(\r\n        authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response)\r\n      );\r\n    } else if (process.env.REACT_APP_DEFAULTAUTH === \"fake\") {\r\n      const response: Promise<any> = yield call(postFakeLogin, {\r\n        email: user.email,\r\n        password: user.password,\r\n      });\r\n      setLoggeedInUser(response);\r\n      yield put(\r\n        authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response)\r\n      );\r\n    }\r\n  } catch (error: any) {\r\n    yield put(\r\n      authLoginApiResponseError(AuthLoginActionTypes.LOGIN_USER, error)\r\n    );\r\n  }\r\n}\r\n\r\nfunction* socialLogin({ payload: { data, type } }: any) {\r\n  try {\r\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\r\n      let fireBaseBackend = getFirebaseBackend();\r\n      const response: Promise<any> = yield call(\r\n        fireBaseBackend.socialLoginUser,\r\n        data,\r\n        type\r\n      );\r\n      setLoggeedInUser(response);\r\n      yield put(\r\n        authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response)\r\n      );\r\n    } else {\r\n      const response: Promise<any> = yield call(postSocialLogin, data);\r\n      yield put(\r\n        authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response)\r\n      );\r\n    }\r\n  } catch (error: any) {\r\n    yield put(\r\n      authLoginApiResponseError(AuthLoginActionTypes.LOGIN_USER, error)\r\n    );\r\n  }\r\n}\r\n\r\nfunction* logoutUser() {\r\n  try {\r\n    localStorage.removeItem(\"authUser\");\r\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\r\n      const response: Promise<any> = yield call(fireBaseBackend.logout);\r\n      yield put(\r\n        authLoginApiResponseSuccess(AuthLoginActionTypes.LOGOUT_USER, response)\r\n      );\r\n    } else {\r\n      yield put(\r\n        authLoginApiResponseSuccess(AuthLoginActionTypes.LOGOUT_USER, true)\r\n      );\r\n    }\r\n  } catch (error: any) {\r\n    yield put(\r\n      authLoginApiResponseError(AuthLoginActionTypes.LOGOUT_USER, error)\r\n    );\r\n  }\r\n}\r\n\r\nfunction* loginSaga() {\r\n  yield takeEvery(AuthLoginActionTypes.LOGIN_USER, loginUser);\r\n  yield takeEvery(AuthLoginActionTypes.LOGOUT_USER, logoutUser);\r\n  yield takeLatest(AuthLoginActionTypes.SOCIAL_LOGIN, socialLogin);\r\n}\r\n\r\nexport default loginSaga;\r\n"]},"metadata":{},"sourceType":"module"}