{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Settings/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Collapse } from \"reactstrap\";\nimport classnames from \"classnames\"; // hooks\n\nimport { useRedux } from \"../../../hooks/index\"; // actions\n\nimport { getSettings, updateSettings } from \"../../../redux/actions\"; // constants\n\nimport { SETTINGS_COLLAPSES } from \"../../../constants\"; // interface\n\n// components\nimport Loader from \"../../../components/Loader\";\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport UserCoverImage from \"./UserCoverImage\";\nimport UserProfile from \"./UserProfile\";\nimport PersonalInfo from \"./PersonalInfo\";\nimport ThemeSettings from \"./ThemeSettings\";\nimport Privacy from \"./Privacy\";\nimport Security from \"./Security\";\nimport Help from \"./Help\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccordianItem = _ref => {\n  let {\n    item,\n    selectedMenu,\n    onChange\n  } = _ref;\n  const isOpen = selectedMenu && selectedMenu === item.value ? true : false;\n\n  const toggleCollapse = () => {\n    if (isOpen) {\n      onChange(null);\n    } else {\n      onChange(item.value);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"accordion-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordion-header\",\n      id: \"headerpersonalinfo\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"none\",\n        className: classnames(\"accordion-button\", \"font-size-14\", \"fw-medium\", {\n          collapsed: !isOpen\n        }),\n        onClick: toggleCollapse,\n        type: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: classnames(\"text-muted\", \"me-3\", item.icon)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), \" \", item.label]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      isOpen: isOpen,\n      id: \"personalinfo\",\n      className: \"accordion-collapse\",\n      \"aria-labelledby\": \"headerpersonalinfo\",\n      \"data-bs-parent\": \"#settingprofile\",\n      children: item.component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AccordianItem;\n\nconst Index = props => {\n  _s();\n\n  // global store\n  const {\n    dispatch,\n    useAppSelector\n  } = useRedux();\n  const {\n    settingsData,\n    getSettingsLoading\n  } = useAppSelector(state => ({\n    settingsData: state.Settings.settings,\n    getSettingsLoading: state.Profile.getSettingsLoading,\n    isSettingsFetched: state.Profile.isSettingsFetched\n  })); // get user settings\n\n  useEffect(() => {\n    dispatch(getSettings());\n  }, [dispatch]);\n  const [settings, setSettings] = useState(settingsData);\n  useEffect(() => {\n    setSettings(settingsData);\n  }, [settingsData]);\n  /*\n  api calling\n  */\n\n  const onChangeData = (field, value) => {\n    dispatch(updateSettings(field, value));\n  };\n  /*\n  collapse handeling\n  */\n\n\n  const [selectedMenu, setSelectedMenu] = useState(null);\n  const collapseItems = [{\n    value: SETTINGS_COLLAPSES.PROFILE,\n    label: \"Personal Info\",\n    icon: \"bx bxs-user\",\n    component: /*#__PURE__*/_jsxDEV(PersonalInfo, {\n      basicDetails: settings.basicDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 18\n    }, this)\n  }, {\n    value: SETTINGS_COLLAPSES.THEME,\n    label: \"Themes\",\n    icon: \"bx bxs-adjust-alt\",\n    component: /*#__PURE__*/_jsxDEV(ThemeSettings, {\n      theme: settings.theme,\n      onChangeData: onChangeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this)\n  }, {\n    value: SETTINGS_COLLAPSES.PRIVACY,\n    label: \"Privacy\",\n    icon: \"bx bxs-lock\",\n    component: /*#__PURE__*/_jsxDEV(Privacy, {\n      privacy: settings.privacy,\n      onChangeSettings: onChangeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)\n  }, {\n    value: SETTINGS_COLLAPSES.SECURITY,\n    label: \"Security\",\n    icon: \"bx bxs-check-shield\",\n    component: /*#__PURE__*/_jsxDEV(Security, {\n      security: settings.security,\n      onChangeSettings: onChangeData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)\n  }, {\n    value: SETTINGS_COLLAPSES.HELP,\n    label: \"Help\",\n    icon: \"bx bxs-help-circle\",\n    component: /*#__PURE__*/_jsxDEV(Help, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 18\n    }, this)\n  }];\n\n  const onChangeCollapse = id => {\n    setSelectedMenu(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-relative\",\n    children: [getSettingsLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(UserCoverImage, {\n      basicDetails: settings.basicDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UserProfile, {\n      basicDetails: settings.basicDetails,\n      status: settings.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppSimpleBar, {\n      className: \"user-setting\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"settingprofile\",\n        className: \"accordion accordion-flush\",\n        children: (collapseItems || []).map((item, key) => /*#__PURE__*/_jsxDEV(AccordianItem, {\n          item: item,\n          selectedMenu: selectedMenu,\n          onChange: onChangeCollapse\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"JYCAAvHVqf2LuUGTYsHD9yZcnW0=\", true, function () {\n  return [useRedux];\n});\n\n_c2 = Index;\nexport default Index;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AccordianItem\");\n$RefreshReg$(_c2, \"Index\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Settings/index.tsx"],"names":["React","useState","useEffect","Button","Collapse","classnames","useRedux","getSettings","updateSettings","SETTINGS_COLLAPSES","Loader","AppSimpleBar","UserCoverImage","UserProfile","PersonalInfo","ThemeSettings","Privacy","Security","Help","AccordianItem","item","selectedMenu","onChange","isOpen","value","toggleCollapse","collapsed","icon","label","component","Index","props","dispatch","useAppSelector","settingsData","getSettingsLoading","state","Settings","settings","Profile","isSettingsFetched","setSettings","onChangeData","field","setSelectedMenu","collapseItems","PROFILE","basicDetails","THEME","theme","PRIVACY","privacy","SECURITY","security","HELP","onChangeCollapse","id","status","map","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Button, Collapse } from \"reactstrap\";\nimport classnames from \"classnames\";\n\n// hooks\nimport { useRedux } from \"../../../hooks/index\";\n\n// actions\nimport { getSettings, updateSettings } from \"../../../redux/actions\";\n\n// constants\nimport { SETTINGS_COLLAPSES } from \"../../../constants\";\n\n// interface\nimport { SettingsTypes } from \"../../../data/settings\";\n\n// components\nimport Loader from \"../../../components/Loader\";\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport UserCoverImage from \"./UserCoverImage\";\nimport UserProfile from \"./UserProfile\";\nimport PersonalInfo from \"./PersonalInfo\";\nimport ThemeSettings from \"./ThemeSettings\";\nimport Privacy from \"./Privacy\";\nimport Security from \"./Security\";\nimport Help from \"./Help\";\n\ninterface CollapseItemTypes {\n  value:\n    | SETTINGS_COLLAPSES.PROFILE\n    | SETTINGS_COLLAPSES.HELP\n    | SETTINGS_COLLAPSES.PRIVACY\n    | SETTINGS_COLLAPSES.SECURITY\n    | SETTINGS_COLLAPSES.THEME;\n  label: string;\n  icon: string;\n  component: any;\n}\n\ninterface AccordianItemProps {\n  item: CollapseItemTypes;\n  onChange: (\n    id:\n      | null\n      | SETTINGS_COLLAPSES.PROFILE\n      | SETTINGS_COLLAPSES.HELP\n      | SETTINGS_COLLAPSES.PRIVACY\n      | SETTINGS_COLLAPSES.SECURITY\n      | SETTINGS_COLLAPSES.THEME\n  ) => void;\n  selectedMenu:\n    | null\n    | SETTINGS_COLLAPSES.PROFILE\n    | SETTINGS_COLLAPSES.HELP\n    | SETTINGS_COLLAPSES.PRIVACY\n    | SETTINGS_COLLAPSES.SECURITY\n    | SETTINGS_COLLAPSES.THEME;\n}\nconst AccordianItem = ({\n  item,\n  selectedMenu,\n  onChange,\n}: AccordianItemProps) => {\n  const isOpen: boolean =\n    selectedMenu && selectedMenu === item.value ? true : false;\n  const toggleCollapse = () => {\n    if (isOpen) {\n      onChange(null);\n    } else {\n      onChange(item.value);\n    }\n  };\n  return (\n    <div className=\"accordion-item\">\n      <div className=\"accordion-header\" id=\"headerpersonalinfo\">\n        <Button\n          color=\"none\"\n          className={classnames(\n            \"accordion-button\",\n            \"font-size-14\",\n            \"fw-medium\",\n            { collapsed: !isOpen }\n          )}\n          onClick={toggleCollapse}\n          type=\"button\"\n        >\n          <i className={classnames(\"text-muted\", \"me-3\", item.icon)}></i>{\" \"}\n          {item.label}\n        </Button>\n      </div>\n      <Collapse\n        isOpen={isOpen}\n        id=\"personalinfo\"\n        className=\"accordion-collapse\"\n        aria-labelledby=\"headerpersonalinfo\"\n        data-bs-parent=\"#settingprofile\"\n      >\n        {item.component}\n      </Collapse>\n    </div>\n  );\n};\ninterface IndexProps {}\nconst Index = (props: IndexProps) => {\n  // global store\n  const { dispatch, useAppSelector } = useRedux();\n\n  const { settingsData, getSettingsLoading } = useAppSelector(state => ({\n    settingsData: state.Settings.settings,\n    getSettingsLoading: state.Profile.getSettingsLoading,\n    isSettingsFetched: state.Profile.isSettingsFetched,\n  }));\n\n  // get user settings\n  useEffect(() => {\n    dispatch(getSettings());\n  }, [dispatch]);\n\n  const [settings, setSettings] = useState<SettingsTypes>(settingsData);\n  useEffect(() => {\n    setSettings(settingsData);\n  }, [settingsData]);\n\n  /*\n  api calling\n  */\n  const onChangeData = (field: string, value: any) => {\n    dispatch(updateSettings(field, value));\n  };\n\n  /*\n  collapse handeling\n  */\n  const [selectedMenu, setSelectedMenu] = useState<\n    | null\n    | SETTINGS_COLLAPSES.PROFILE\n    | SETTINGS_COLLAPSES.HELP\n    | SETTINGS_COLLAPSES.PRIVACY\n    | SETTINGS_COLLAPSES.SECURITY\n    | SETTINGS_COLLAPSES.THEME\n  >(null);\n\n  const collapseItems: CollapseItemTypes[] = [\n    {\n      value: SETTINGS_COLLAPSES.PROFILE,\n      label: \"Personal Info\",\n      icon: \"bx bxs-user\",\n      component: <PersonalInfo basicDetails={settings.basicDetails} />,\n    },\n    {\n      value: SETTINGS_COLLAPSES.THEME,\n      label: \"Themes\",\n      icon: \"bx bxs-adjust-alt\",\n      component: (\n        <ThemeSettings theme={settings.theme} onChangeData={onChangeData} />\n      ),\n    },\n    {\n      value: SETTINGS_COLLAPSES.PRIVACY,\n      label: \"Privacy\",\n      icon: \"bx bxs-lock\",\n      component: (\n        <Privacy privacy={settings.privacy} onChangeSettings={onChangeData} />\n      ),\n    },\n    {\n      value: SETTINGS_COLLAPSES.SECURITY,\n      label: \"Security\",\n      icon: \"bx bxs-check-shield\",\n      component: (\n        <Security\n          security={settings.security}\n          onChangeSettings={onChangeData}\n        />\n      ),\n    },\n    {\n      value: SETTINGS_COLLAPSES.HELP,\n      label: \"Help\",\n      icon: \"bx bxs-help-circle\",\n      component: <Help />,\n    },\n  ];\n\n  const onChangeCollapse = (\n    id:\n      | null\n      | SETTINGS_COLLAPSES.PROFILE\n      | SETTINGS_COLLAPSES.HELP\n      | SETTINGS_COLLAPSES.PRIVACY\n      | SETTINGS_COLLAPSES.SECURITY\n      | SETTINGS_COLLAPSES.THEME\n  ) => {\n    setSelectedMenu(id);\n  };\n\n  return (\n    <div className=\"position-relative\">\n      {getSettingsLoading && <Loader />}\n      <UserCoverImage basicDetails={settings.basicDetails} />\n\n      <UserProfile\n        basicDetails={settings.basicDetails}\n        status={settings.status}\n      />\n      {/* Start User profile description */}\n      <AppSimpleBar className=\"user-setting\">\n        <div id=\"settingprofile\" className=\"accordion accordion-flush\">\n          {(collapseItems || []).map((item: CollapseItemTypes, key: number) => (\n            <AccordianItem\n              item={item}\n              key={key}\n              selectedMenu={selectedMenu}\n              onChange={onChangeCollapse}\n            />\n          ))}\n        </div>\n        {/* end profile-setting-accordion */}\n      </AppSimpleBar>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}