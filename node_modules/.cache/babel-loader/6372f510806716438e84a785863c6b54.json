{"ast":null,"code":"// types\nimport { ContactsActionTypes } from \"./types\";\nexport const INIT_STATE = {\n  contacts: []\n};\n\nconst Contacts = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ContactsActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case ContactsActionTypes.GET_CONTACTS:\n          return { ...state,\n            contacts: action.payload.data,\n            isContactsFetched: true,\n            getContactsLoading: false\n          };\n\n        case ContactsActionTypes.INVITE_CONTACT:\n          return { ...state,\n            isContactInvited: true\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case ContactsActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case ContactsActionTypes.GET_CONTACTS:\n          return { ...state,\n            isContactsFetched: false,\n            getContactsLoading: false\n          };\n\n        case ContactsActionTypes.INVITE_CONTACT:\n          return { ...state,\n            isContactInvited: false\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case ContactsActionTypes.GET_CONTACTS:\n      {\n        return { ...state,\n          getContactsLoading: true,\n          isContactsFetched: false\n        };\n      }\n\n    case ContactsActionTypes.INVITE_CONTACT:\n      return { ...state,\n        isContactInvited: false\n      };\n\n    case ContactsActionTypes.RESET_CONTACTS:\n      const flag = action.payload.flag;\n      const value = action.payload.value;\n      let flags = {};\n      flags[flag] = value;\n      return { ...state,\n        ...flags\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/redux/contacts/reducer.ts"],"names":["ContactsActionTypes","INIT_STATE","contacts","Contacts","state","action","type","API_RESPONSE_SUCCESS","payload","actionType","GET_CONTACTS","data","isContactsFetched","getContactsLoading","INVITE_CONTACT","isContactInvited","API_RESPONSE_ERROR","RESET_CONTACTS","flag","value","flags"],"mappings":"AAAA;AACA,SAASA,mBAAT,QAAmD,SAAnD;AAEA,OAAO,MAAMC,UAAyB,GAAG;AACvCC,EAAAA,QAAQ,EAAE;AAD6B,CAAlC;;AAIP,MAAMC,QAAQ,GAAG,YAAqC;AAAA,MAApCC,KAAoC,uEAA5BH,UAA4B;AAAA,MAAhBI,MAAgB;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,mBAAmB,CAACO,oBAAzB;AACE,cAAQF,MAAM,CAACG,OAAP,CAAeC,UAAvB;AACE,aAAKT,mBAAmB,CAACU,YAAzB;AACE,iBAAO,EACL,GAAGN,KADE;AAELF,YAAAA,QAAQ,EAAEG,MAAM,CAACG,OAAP,CAAeG,IAFpB;AAGLC,YAAAA,iBAAiB,EAAE,IAHd;AAILC,YAAAA,kBAAkB,EAAE;AAJf,WAAP;;AAMF,aAAKb,mBAAmB,CAACc,cAAzB;AACE,iBAAO,EACL,GAAGV,KADE;AAELW,YAAAA,gBAAgB,EAAE;AAFb,WAAP;;AAIF;AACE,iBAAO,EAAE,GAAGX;AAAL,WAAP;AAdJ;;AAiBF,SAAKJ,mBAAmB,CAACgB,kBAAzB;AACE,cAAQX,MAAM,CAACG,OAAP,CAAeC,UAAvB;AACE,aAAKT,mBAAmB,CAACU,YAAzB;AACE,iBAAO,EACL,GAAGN,KADE;AAELQ,YAAAA,iBAAiB,EAAE,KAFd;AAGLC,YAAAA,kBAAkB,EAAE;AAHf,WAAP;;AAKF,aAAKb,mBAAmB,CAACc,cAAzB;AACE,iBAAO,EACL,GAAGV,KADE;AAELW,YAAAA,gBAAgB,EAAE;AAFb,WAAP;;AAIF;AACE,iBAAO,EAAE,GAAGX;AAAL,WAAP;AAbJ;;AAgBF,SAAKJ,mBAAmB,CAACU,YAAzB;AAAuC;AACrC,eAAO,EACL,GAAGN,KADE;AAELS,UAAAA,kBAAkB,EAAE,IAFf;AAGLD,UAAAA,iBAAiB,EAAE;AAHd,SAAP;AAKD;;AAED,SAAKZ,mBAAmB,CAACc,cAAzB;AACE,aAAO,EACL,GAAGV,KADE;AAELW,QAAAA,gBAAgB,EAAE;AAFb,OAAP;;AAIF,SAAKf,mBAAmB,CAACiB,cAAzB;AACE,YAAMC,IAAI,GAAGb,MAAM,CAACG,OAAP,CAAeU,IAA5B;AACA,YAAMC,KAAK,GAAGd,MAAM,CAACG,OAAP,CAAeW,KAA7B;AACA,UAAIC,KAAU,GAAG,EAAjB;AACAA,MAAAA,KAAK,CAACF,IAAD,CAAL,GAAcC,KAAd;AACA,aAAO,EACL,GAAGf,KADE;AAEL,WAAGgB;AAFE,OAAP;;AAIF;AACE,aAAO,EAAE,GAAGhB;AAAL,OAAP;AA3DJ;AA6DD,CA9DD;;KAAMD,Q;AAgEN,eAAeA,QAAf","sourcesContent":["// types\nimport { ContactsActionTypes, ContactsState } from \"./types\";\n\nexport const INIT_STATE: ContactsState = {\n  contacts: [],\n};\n\nconst Contacts = (state = INIT_STATE, action: any) => {\n  switch (action.type) {\n    case ContactsActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case ContactsActionTypes.GET_CONTACTS:\n          return {\n            ...state,\n            contacts: action.payload.data,\n            isContactsFetched: true,\n            getContactsLoading: false,\n          };\n        case ContactsActionTypes.INVITE_CONTACT:\n          return {\n            ...state,\n            isContactInvited: true,\n          };\n        default:\n          return { ...state };\n      }\n\n    case ContactsActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case ContactsActionTypes.GET_CONTACTS:\n          return {\n            ...state,\n            isContactsFetched: false,\n            getContactsLoading: false,\n          };\n        case ContactsActionTypes.INVITE_CONTACT:\n          return {\n            ...state,\n            isContactInvited: false,\n          };\n        default:\n          return { ...state };\n      }\n\n    case ContactsActionTypes.GET_CONTACTS: {\n      return {\n        ...state,\n        getContactsLoading: true,\n        isContactsFetched: false,\n      };\n    }\n\n    case ContactsActionTypes.INVITE_CONTACT:\n      return {\n        ...state,\n        isContactInvited: false,\n      };\n    case ContactsActionTypes.RESET_CONTACTS:\n      const flag = action.payload.flag;\n      const value = action.payload.value;\n      let flags: any = {};\n      flags[flag] = value;\n      return {\n        ...state,\n        ...flags,\n      };\n    default:\n      return { ...state };\n  }\n};\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}