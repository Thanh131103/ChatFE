{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Chats/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Form, UncontrolledTooltip } from \"reactstrap\";\nimport { Link } from \"react-router-dom\"; // hooks\n\nimport { useRedux } from \"../../../hooks/index\"; // actions\n\nimport { inviteContact, resetContacts, getFavourites, getDirectMessages, getChannels, addContacts, createChannel, changeSelectedChat, getChatUserDetails, getChatUserConversations, getChannelDetails, getArchiveContact, readConversation } from \"../../../redux/actions\"; // interfaces\n\n// components\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport AddGroupModal from \"../../../components/AddGroupModal\";\nimport InviteContactModal from \"../../../components/InviteContactModal\";\nimport AddButton from \"../../../components/AddButton\";\nimport ContactModal from \"../../../components/ContactModal\";\nimport Favourites from \"./Favourites\";\nimport DirectMessages from \"./DirectMessages\";\nimport Chanels from \"./Chanels\";\nimport Archive from \"./Archive\";\nimport { CHATS_TABS } from \"../../../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Index = props => {\n  _s();\n\n  // global store\n  const {\n    dispatch,\n    useAppSelector\n  } = useRedux();\n  const {\n    isContactInvited,\n    favourites,\n    directMessages,\n    channels,\n    isContactsAdded,\n    isChannelCreated,\n    selectedChat,\n    isFavouriteContactToggled,\n    archiveContacts,\n    isContactArchiveToggled,\n    chatUserDetails\n  } = useAppSelector(state => ({\n    isContactInvited: state.Contacts.isContactInvited,\n    favourites: state.Chats.favourites,\n    directMessages: state.Chats.directMessages,\n    channels: state.Chats.channels,\n    isContactsAdded: state.Chats.isContactsAdded,\n    isChannelCreated: state.Chats.isChannelCreated,\n    selectedChat: state.Chats.selectedChat,\n    isFavouriteContactToggled: state.Chats.isFavouriteContactToggled,\n    archiveContacts: state.Chats.archiveContacts,\n    isContactArchiveToggled: state.Chats.isContactArchiveToggled,\n    chatUserDetails: state.Chats.chatUserDetails\n  }));\n  /*\n  get data\n  */\n\n  useEffect(() => {\n    dispatch(getFavourites());\n    dispatch(getDirectMessages());\n    dispatch(getChannels());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isFavouriteContactToggled) {\n      dispatch(getFavourites());\n      dispatch(getDirectMessages());\n    }\n  }, [dispatch, isFavouriteContactToggled]);\n  /*\n  invite contact modal handeling\n  */\n\n  const [isOpen, setIsOpen] = useState(false);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n  /*\n  onInvite handeling\n  */\n\n\n  const onInviteContact = data => {\n    dispatch(inviteContact(data));\n  };\n\n  useEffect(() => {\n    if (isContactInvited) {\n      setIsOpen(false);\n      setTimeout(() => {\n        dispatch(resetContacts(\"isContactInvited\", false));\n      }, 1000);\n    }\n  }, [dispatch, isContactInvited]);\n  /*\n  contact add handeling\n  */\n\n  const [isOpenAddContact, setIsOpenAddContact] = useState(false);\n\n  const openAddContactModal = () => {\n    setIsOpenAddContact(true);\n  };\n\n  const closeAddContactModal = () => {\n    setIsOpenAddContact(false);\n  };\n\n  const onAddContact = contacts => {\n    dispatch(addContacts(contacts));\n  };\n\n  useEffect(() => {\n    if (isContactsAdded) {\n      setIsOpenAddContact(false);\n      dispatch(getDirectMessages());\n    }\n  }, [dispatch, isContactsAdded]);\n  /*\n  channel creation handeling\n  */\n\n  const [isOpenCreateChannel, setIsOpenCreateChannel] = useState(false);\n\n  const openCreateChannelModal = () => {\n    setIsOpenCreateChannel(true);\n  };\n\n  const closeCreateChannelModal = () => {\n    setIsOpenCreateChannel(false);\n  };\n\n  const onCreateChannel = channelData => {\n    dispatch(createChannel(channelData));\n  };\n\n  useEffect(() => {\n    if (isChannelCreated) {\n      setIsOpenCreateChannel(false);\n      dispatch(getChannels());\n    }\n  }, [dispatch, isChannelCreated]);\n  /*\n  select chat handeling :\n    get conversations\n    get chat user details\n  */\n\n  const onSelectChat = (id, isChannel) => {\n    if (isChannel) {\n      dispatch(getChannelDetails(id));\n    } else {\n      dispatch(getChatUserDetails(id));\n    }\n\n    dispatch(readConversation(id));\n    dispatch(getChatUserConversations(id));\n    dispatch(changeSelectedChat(id));\n  };\n  /*\n  tab handeling\n  */\n\n\n  const [active, setActive] = useState(CHATS_TABS.DEFAULT);\n\n  const onChangeTab = tab => {\n    setActive(tab);\n  };\n  /*\n  archive contacts\n  */\n\n\n  useEffect(() => {\n    dispatch(getArchiveContact());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isContactArchiveToggled) {\n      dispatch(getArchiveContact());\n      dispatch(getFavourites());\n      dispatch(getDirectMessages());\n      dispatch(getChannels());\n      dispatch(getChatUserDetails(chatUserDetails.id));\n    }\n  }, [dispatch, isContactArchiveToggled, chatUserDetails.id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-4 pt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-start\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-grow-1\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \"mb-4\",\n              children: \"Chats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-shrink-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"add-contact\",\n              children: /*#__PURE__*/_jsxDEV(AddButton, {\n                onClick: openModal\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(UncontrolledTooltip, {\n              target: \"add-contact\",\n              placement: \"bottom\",\n              children: \"Add Contact\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"input-group mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control bg-light border-0 pe-0\",\n              placeholder: \"Search here..\",\n              \"aria-label\": \"Example text with button addon\",\n              \"aria-describedby\": \"searchbtn-addon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn btn-light\",\n              type: \"button\",\n              id: \"searchbtn-addon\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bx bx-search align-middle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(AppSimpleBar, {\n        className: \"chat-room-list\",\n        children: [active === CHATS_TABS.DEFAULT && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Favourites, {\n            users: favourites,\n            selectedChat: selectedChat,\n            onSelectChat: onSelectChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DirectMessages, {\n            users: directMessages,\n            openAddContact: openAddContactModal,\n            selectedChat: selectedChat,\n            onSelectChat: onSelectChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Chanels, {\n            channels: channels,\n            openCreateChannel: openCreateChannelModal,\n            selectedChat: selectedChat,\n            onSelectChat: onSelectChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-center mb-2\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"mb-3 px-4 mt-4 font-size-11 text-primary\",\n              onClick: () => onChangeTab(CHATS_TABS.ARCHIVE),\n              children: [\"Archived Contacts\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bx bxs-archive-in align-middle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), active === CHATS_TABS.ARCHIVE && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Archive, {\n            archiveContacts: archiveContacts,\n            selectedChat: selectedChat,\n            onSelectChat: onSelectChat\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-center mb-2\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"#\",\n              className: \"mb-3 px-4 mt-4 font-size-11 text-primary\",\n              onClick: () => onChangeTab(CHATS_TABS.DEFAULT),\n              children: [\"Chats \", /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"bx bxs-archive-out align-middle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), isOpenCreateChannel && /*#__PURE__*/_jsxDEV(AddGroupModal, {\n      isOpen: isOpenCreateChannel,\n      onClose: closeCreateChannelModal,\n      onCreateChannel: onCreateChannel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(InviteContactModal, {\n      isOpen: isOpen,\n      onClose: closeModal,\n      onInvite: onInviteContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 9\n    }, this), isOpenAddContact && /*#__PURE__*/_jsxDEV(ContactModal, {\n      isOpen: isOpenAddContact,\n      onClose: closeAddContactModal,\n      onAddContact: onAddContact\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Index, \"i4OCYE80+8bFAFqeUfbVC2Aaldw=\", true, function () {\n  return [useRedux];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Chats/index.tsx"],"names":["React","useEffect","useState","Button","Form","UncontrolledTooltip","Link","useRedux","inviteContact","resetContacts","getFavourites","getDirectMessages","getChannels","addContacts","createChannel","changeSelectedChat","getChatUserDetails","getChatUserConversations","getChannelDetails","getArchiveContact","readConversation","AppSimpleBar","AddGroupModal","InviteContactModal","AddButton","ContactModal","Favourites","DirectMessages","Chanels","Archive","CHATS_TABS","Index","props","dispatch","useAppSelector","isContactInvited","favourites","directMessages","channels","isContactsAdded","isChannelCreated","selectedChat","isFavouriteContactToggled","archiveContacts","isContactArchiveToggled","chatUserDetails","state","Contacts","Chats","isOpen","setIsOpen","openModal","closeModal","onInviteContact","data","setTimeout","isOpenAddContact","setIsOpenAddContact","openAddContactModal","closeAddContactModal","onAddContact","contacts","isOpenCreateChannel","setIsOpenCreateChannel","openCreateChannelModal","closeCreateChannelModal","onCreateChannel","channelData","onSelectChat","id","isChannel","active","setActive","DEFAULT","onChangeTab","tab","ARCHIVE"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { Button, Form, UncontrolledTooltip } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n// hooks\nimport { useRedux } from \"../../../hooks/index\";\n\n// actions\nimport {\n  inviteContact,\n  resetContacts,\n  getFavourites,\n  getDirectMessages,\n  getChannels,\n  addContacts,\n  createChannel,\n  changeSelectedChat,\n  getChatUserDetails,\n  getChatUserConversations,\n  getChannelDetails,\n  getArchiveContact,\n  readConversation,\n} from \"../../../redux/actions\";\n\n// interfaces\nimport { CreateChannelPostData } from \"../../../redux/actions\";\n\n// components\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport AddGroupModal from \"../../../components/AddGroupModal\";\nimport InviteContactModal from \"../../../components/InviteContactModal\";\nimport AddButton from \"../../../components/AddButton\";\nimport ContactModal from \"../../../components/ContactModal\";\n\nimport Favourites from \"./Favourites\";\nimport DirectMessages from \"./DirectMessages\";\nimport Chanels from \"./Chanels\";\nimport Archive from \"./Archive\";\nimport { CHATS_TABS } from \"../../../constants\";\n\ninterface IndexProps {}\nconst Index = (props: IndexProps) => {\n  // global store\n  const { dispatch, useAppSelector } = useRedux();\n\n  const {\n    isContactInvited,\n    favourites,\n    directMessages,\n    channels,\n    isContactsAdded,\n    isChannelCreated,\n    selectedChat,\n    isFavouriteContactToggled,\n    archiveContacts,\n    isContactArchiveToggled,\n    chatUserDetails,\n  } = useAppSelector(state => ({\n    isContactInvited: state.Contacts.isContactInvited,\n    favourites: state.Chats.favourites,\n    directMessages: state.Chats.directMessages,\n    channels: state.Chats.channels,\n    isContactsAdded: state.Chats.isContactsAdded,\n    isChannelCreated: state.Chats.isChannelCreated,\n    selectedChat: state.Chats.selectedChat,\n    isFavouriteContactToggled: state.Chats.isFavouriteContactToggled,\n    archiveContacts: state.Chats.archiveContacts,\n    isContactArchiveToggled: state.Chats.isContactArchiveToggled,\n    chatUserDetails: state.Chats.chatUserDetails,\n  }));\n\n  /*\n  get data\n  */\n  useEffect(() => {\n    dispatch(getFavourites());\n    dispatch(getDirectMessages());\n    dispatch(getChannels());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isFavouriteContactToggled) {\n      dispatch(getFavourites());\n      dispatch(getDirectMessages());\n    }\n  }, [dispatch, isFavouriteContactToggled]);\n\n  /*\n  invite contact modal handeling\n  */\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const openModal = () => {\n    setIsOpen(true);\n  };\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  /*\n  onInvite handeling\n  */\n  const onInviteContact = (data: any) => {\n    dispatch(inviteContact(data));\n  };\n  useEffect(() => {\n    if (isContactInvited) {\n      setIsOpen(false);\n      setTimeout(() => {\n        dispatch(resetContacts(\"isContactInvited\", false));\n      }, 1000);\n    }\n  }, [dispatch, isContactInvited]);\n\n  /*\n  contact add handeling\n  */\n  const [isOpenAddContact, setIsOpenAddContact] = useState<boolean>(false);\n  const openAddContactModal = () => {\n    setIsOpenAddContact(true);\n  };\n  const closeAddContactModal = () => {\n    setIsOpenAddContact(false);\n  };\n  const onAddContact = (contacts: Array<string | number>) => {\n    dispatch(addContacts(contacts));\n  };\n  useEffect(() => {\n    if (isContactsAdded) {\n      setIsOpenAddContact(false);\n      dispatch(getDirectMessages());\n    }\n  }, [dispatch, isContactsAdded]);\n\n  /*\n  channel creation handeling\n  */\n  const [isOpenCreateChannel, setIsOpenCreateChannel] =\n    useState<boolean>(false);\n  const openCreateChannelModal = () => {\n    setIsOpenCreateChannel(true);\n  };\n  const closeCreateChannelModal = () => {\n    setIsOpenCreateChannel(false);\n  };\n  const onCreateChannel = (channelData: CreateChannelPostData) => {\n    dispatch(createChannel(channelData));\n  };\n  useEffect(() => {\n    if (isChannelCreated) {\n      setIsOpenCreateChannel(false);\n      dispatch(getChannels());\n    }\n  }, [dispatch, isChannelCreated]);\n\n  /*\n  select chat handeling :\n    get conversations\n    get chat user details\n  */\n\n  const onSelectChat = (id: string | number, isChannel?: boolean) => {\n    if (isChannel) {\n      dispatch(getChannelDetails(id));\n    } else {\n      dispatch(getChatUserDetails(id));\n    }\n    dispatch(readConversation(id));\n    dispatch(getChatUserConversations(id));\n    dispatch(changeSelectedChat(id));\n  };\n\n  /*\n  tab handeling\n  */\n  const [active, setActive] = useState(CHATS_TABS.DEFAULT);\n  const onChangeTab = (tab: CHATS_TABS) => {\n    setActive(tab);\n  };\n\n  /*\n  archive contacts\n  */\n  useEffect(() => {\n    dispatch(getArchiveContact());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isContactArchiveToggled) {\n      dispatch(getArchiveContact());\n      dispatch(getFavourites());\n      dispatch(getDirectMessages());\n      dispatch(getChannels());\n      dispatch(getChatUserDetails(chatUserDetails.id));\n    }\n  }, [dispatch, isContactArchiveToggled, chatUserDetails.id]);\n\n  return (\n    <>\n      <div>\n        <div className=\"px-4 pt-4\">\n          <div className=\"d-flex align-items-start\">\n            <div className=\"flex-grow-1\">\n              <h4 className=\"mb-4\">Chats</h4>\n            </div>\n            <div className=\"flex-shrink-0\">\n              <div id=\"add-contact\">\n                {/* Button trigger modal */}\n                <AddButton onClick={openModal} />\n              </div>\n              <UncontrolledTooltip target=\"add-contact\" placement=\"bottom\">\n                Add Contact\n              </UncontrolledTooltip>\n            </div>\n          </div>\n          <Form>\n            <div className=\"input-group mb-3\">\n              <input\n                type=\"text\"\n                className=\"form-control bg-light border-0 pe-0\"\n                placeholder=\"Search here..\"\n                aria-label=\"Example text with button addon\"\n                aria-describedby=\"searchbtn-addon\"\n              />\n              <Button\n                className=\"btn btn-light\"\n                type=\"button\"\n                id=\"searchbtn-addon\"\n              >\n                <i className=\"bx bx-search align-middle\"></i>\n              </Button>\n            </div>\n          </Form>\n        </div>{\" \"}\n        {/* .p-4 */}\n        <AppSimpleBar className=\"chat-room-list\">\n          {/* Start chat-message-list */}\n          {active === CHATS_TABS.DEFAULT && (\n            <>\n              {/* favourite */}\n              <Favourites\n                users={favourites}\n                selectedChat={selectedChat}\n                onSelectChat={onSelectChat}\n              />\n\n              {/* direct messages */}\n              <DirectMessages\n                users={directMessages}\n                openAddContact={openAddContactModal}\n                selectedChat={selectedChat}\n                onSelectChat={onSelectChat}\n              />\n\n              {/* channels list */}\n              <Chanels\n                channels={channels}\n                openCreateChannel={openCreateChannelModal}\n                selectedChat={selectedChat}\n                onSelectChat={onSelectChat}\n              />\n              <h5 className=\"text-center mb-2\">\n                <Link\n                  to=\"#\"\n                  className=\"mb-3 px-4 mt-4 font-size-11 text-primary\"\n                  onClick={() => onChangeTab(CHATS_TABS.ARCHIVE)}\n                >\n                  Archived Contacts{\" \"}\n                  <i className=\"bx bxs-archive-in align-middle\" />\n                </Link>\n              </h5>\n            </>\n          )}\n          {active === CHATS_TABS.ARCHIVE && (\n            <>\n              <Archive\n                archiveContacts={archiveContacts}\n                selectedChat={selectedChat}\n                onSelectChat={onSelectChat}\n              />\n              <h5 className=\"text-center mb-2\">\n                <Link\n                  to=\"#\"\n                  className=\"mb-3 px-4 mt-4 font-size-11 text-primary\"\n                  onClick={() => onChangeTab(CHATS_TABS.DEFAULT)}\n                >\n                  Chats <i className=\"bx bxs-archive-out align-middle\" />\n                </Link>\n              </h5>\n            </>\n          )}\n\n          {/* End chat-message-list */}\n        </AppSimpleBar>\n      </div>\n      {/* add group Modal */}\n      {isOpenCreateChannel && (\n        <AddGroupModal\n          isOpen={isOpenCreateChannel}\n          onClose={closeCreateChannelModal}\n          onCreateChannel={onCreateChannel}\n        />\n      )}\n\n      {/* add contact modal */}\n      {isOpen && (\n        <InviteContactModal\n          isOpen={isOpen}\n          onClose={closeModal}\n          onInvite={onInviteContact}\n        />\n      )}\n\n      {isOpenAddContact && (\n        <ContactModal\n          isOpen={isOpenAddContact}\n          onClose={closeAddContactModal}\n          onAddContact={onAddContact}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}