{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/FormInput.tsx\",\n    _s = $RefreshSig$();\n\n// @flow\nimport React, { useState } from \"react\";\nimport { Input, Label, FormFeedback } from \"reactstrap\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\n/* Password Input */\nconst PasswordInput = _ref => {\n  _s();\n\n  let {\n    name,\n    placeholder,\n    refCallback,\n    errors,\n    register,\n    className,\n    hidePasswordButton\n  } = _ref;\n  const [showPassword, setShowPassword] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"position-relative auth-pass-inputgroup mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: showPassword ? \"text\" : \"password\",\n        placeholder: placeholder,\n        name: name,\n        id: name,\n        ref: r => {\n          if (refCallback) refCallback(r);\n        },\n        className: classNames(className, {\n          \"is-invalid\": errors && errors[name]\n        }),\n        ...(register ? register(name) : {}),\n        autoComplete: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), errors && errors[name] ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n        type: \"invalid\",\n        children: [\" \", errors[name][\"message\"]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : null, !hidePasswordButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-link position-absolute end-0 top-0 text-decoration-none text-muted\",\n        type: \"button\",\n        onClick: () => {\n          setShowPassword(!showPassword);\n        },\n        \"data-password\": showPassword ? \"true\" : \"false\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"ri-eye-fill align-middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(PasswordInput, \"daguiRHWMFkqPgCh/ppD7CF5VuQ=\");\n\n_c = PasswordInput;\n\nconst FormInput = _ref2 => {\n  let {\n    label,\n    type,\n    name,\n    placeholder,\n    register,\n    errors,\n    className,\n    labelClassName,\n    containerClass,\n    refCallback,\n    children,\n    control,\n    withoutLabel,\n    hidePasswordButton,\n    ...otherProps\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: type === \"hidden\" ? /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      name: name,\n      ...(register ? register(name) : {}),\n      ...otherProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: type === \"password\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [label ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [!withoutLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"float-end\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"auth-recoverpw\",\n              className: \"text-muted\",\n              children: \"Forgot password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: name,\n            className: labelClassName,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : null, /*#__PURE__*/_jsxDEV(PasswordInput, {\n          name: name,\n          placeholder: placeholder,\n          refCallback: refCallback,\n          errors: errors,\n          register: register,\n          className: className,\n          withoutLabel: withoutLabel,\n          hidePasswordButton: hidePasswordButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: type === \"checkbox\" || type === \"radio\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check form-check-info font-size-16\",\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              className: className,\n              type: type,\n              name: name,\n              id: name,\n              ref: r => {\n                if (refCallback) refCallback(r);\n              },\n              invalid: errors && errors[name] ? true : undefined,\n              ...(register ? register(name) : {}),\n              ...otherProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Label, {\n              className: \"form-check-label font-size-14\",\n              for: \"remember-check\",\n              children: \"Remember me\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 19\n          }, this), errors && errors[name] ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n            type: \"invalid\",\n            children: errors[name][\"message\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 21\n          }, this) : null]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [label ? /*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: name,\n            className: labelClassName,\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"input\", {\n            type: type,\n            placeholder: placeholder,\n            name: name,\n            id: name,\n            ref: r => {\n              if (refCallback) refCallback(r);\n            },\n            className: classNames(className, {\n              \"is-invalid\": errors && errors[name]\n            }),\n            ...(register ? register(name) : {}),\n            ...otherProps,\n            autoComplete: name,\n            tag: \"input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 19\n          }, this), errors && errors[name] ? /*#__PURE__*/_jsxDEV(FormFeedback, {\n            type: \"invalid\",\n            children: errors[name][\"message\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 21\n          }, this) : null]\n        }, void 0, true)\n      }, void 0, false)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_c2 = FormInput;\nexport default FormInput;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PasswordInput\");\n$RefreshReg$(_c2, \"FormInput\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/FormInput.tsx"],"names":["React","useState","Input","Label","FormFeedback","classNames","PasswordInput","name","placeholder","refCallback","errors","register","className","hidePasswordButton","showPassword","setShowPassword","r","FormInput","label","type","labelClassName","containerClass","children","control","withoutLabel","otherProps","undefined"],"mappings":"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","sourcesContent":["// @flow\nimport React, { useState, InputHTMLAttributes } from \"react\";\nimport { Input, Label, FormFeedback } from \"reactstrap\";\nimport classNames from \"classnames\";\n\nimport { FieldErrors } from \"react-hook-form\";\n\ninterface PasswordInputProps {\n  name: string;\n  placeholder?: string;\n  refCallback?: any;\n  errors: any;\n  register?: any;\n  className?: string;\n  withoutLabel?: boolean;\n  hidePasswordButton?: boolean;\n}\n\n/* Password Input */\nconst PasswordInput: React.FunctionComponent<PasswordInputProps> = ({\n  name,\n  placeholder,\n  refCallback,\n  errors,\n  register,\n  className,\n  hidePasswordButton,\n}) => {\n  const [showPassword, setShowPassword] = useState<boolean>(false);\n\n  return (\n    <>\n      <div className=\"position-relative auth-pass-inputgroup mb-3\">\n        <input\n          type={showPassword ? \"text\" : \"password\"}\n          placeholder={placeholder}\n          name={name}\n          id={name}\n          ref={(r: HTMLInputElement) => {\n            if (refCallback) refCallback(r);\n          }}\n          className={classNames(className, {\n            \"is-invalid\": errors && errors[name],\n          })}\n          {...(register ? register(name) : {})}\n          autoComplete={name}\n        />\n        {errors && errors[name] ? (\n          <FormFeedback type=\"invalid\"> {errors[name][\"message\"]}</FormFeedback>\n        ) : null}\n        {!hidePasswordButton && (\n          <button\n            className=\"btn btn-link position-absolute end-0 top-0 text-decoration-none text-muted\"\n            type=\"button\"\n            onClick={() => {\n              setShowPassword(!showPassword);\n            }}\n            data-password={showPassword ? \"true\" : \"false\"}\n          >\n            <i className=\"ri-eye-fill align-middle\"></i>\n          </button>\n        )}\n      </div>\n    </>\n  );\n};\n\ninterface FormInputProps extends InputHTMLAttributes<HTMLInputElement> {\n  label?: string;\n  type?: string;\n  name: string;\n  placeholder?: string;\n  register?: any;\n  errors?: FieldErrors;\n  className?: string;\n  labelClassName?: string;\n  containerClass?: string;\n  refCallback?: any;\n  children?: any;\n  control?: any;\n  withoutLabel?: boolean;\n  hidePasswordButton?: boolean;\n}\n\nconst FormInput: React.FunctionComponent<FormInputProps> = ({\n  label,\n  type,\n  name,\n  placeholder,\n  register,\n  errors,\n  className,\n  labelClassName,\n  containerClass,\n  refCallback,\n  children,\n  control,\n  withoutLabel,\n  hidePasswordButton,\n  ...otherProps\n}) => {\n  return (\n    <>\n      {type === \"hidden\" ? (\n        <input\n          type={type}\n          name={name}\n          {...(register ? register(name) : {})}\n          {...otherProps}\n        />\n      ) : (\n        <>\n          {type === \"password\" ? (\n            <>\n              {label ? (\n                <>\n                  {!withoutLabel && (\n                    <div className=\"float-end\">\n                      <a href=\"auth-recoverpw\" className=\"text-muted\">\n                        Forgot password?\n                      </a>\n                    </div>\n                  )}\n\n                  <Label htmlFor={name} className={labelClassName}>\n                    {label}\n                  </Label>\n                </>\n              ) : null}\n              <PasswordInput\n                name={name}\n                placeholder={placeholder}\n                refCallback={refCallback}\n                errors={errors}\n                register={register}\n                className={className}\n                withoutLabel={withoutLabel}\n                hidePasswordButton={hidePasswordButton}\n              />\n            </>\n          ) : (\n            <>\n              {type === \"checkbox\" || type === \"radio\" ? (\n                <>\n                  <div className=\"form-check form-check-info font-size-16\">\n                    <Input\n                      className={className}\n                      type={type}\n                      name={name}\n                      id={name}\n                      ref={(r: HTMLInputElement) => {\n                        if (refCallback) refCallback(r);\n                      }}\n                      invalid={errors && errors[name] ? true : undefined}\n                      {...(register ? register(name) : {})}\n                      {...otherProps}\n                    />\n                    <Label\n                      className=\"form-check-label font-size-14\"\n                      for=\"remember-check\"\n                    >\n                      Remember me\n                    </Label>\n                  </div>\n                  {errors && errors[name] ? (\n                    <FormFeedback type=\"invalid\">\n                      {errors[name][\"message\"]}\n                    </FormFeedback>\n                  ) : null}\n                </>\n              ) : (\n                <>\n                  {label ? (\n                    <Label htmlFor={name} className={labelClassName}>\n                      {label}\n                    </Label>\n                  ) : null}\n                  <input\n                    type={type}\n                    placeholder={placeholder}\n                    name={name}\n                    id={name}\n                    ref={(r: HTMLInputElement) => {\n                      if (refCallback) refCallback(r);\n                    }}\n                    className={classNames(className, {\n                      \"is-invalid\": errors && errors[name],\n                    })}\n                    {...(register ? register(name) : {})}\n                    {...otherProps}\n                    autoComplete={name}\n                    tag=\"input\"\n                  />\n                  {errors && errors[name] ? (\n                    <FormFeedback type=\"invalid\">\n                      {errors[name][\"message\"]}\n                    </FormFeedback>\n                  ) : null}\n                </>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default FormInput;\n"]},"metadata":{},"sourceType":"module"}