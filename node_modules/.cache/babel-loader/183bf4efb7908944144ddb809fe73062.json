{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Calls/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // hooks\n\nimport { useRedux } from \"../../../hooks/index\"; // components\n\nimport Loader from \"../../../components/Loader\";\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport LeftbarTitle from \"../../../components/LeftbarTitle\";\nimport Call from \"./Call\"; // actions\n\nimport { getCalls } from \"../../../redux/actions\"; // interface\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = props => {\n  _s();\n\n  // global store\n  const {\n    dispatch,\n    useAppSelector\n  } = useRedux();\n  const {\n    calls,\n    getCallsLoading\n  } = useAppSelector(state => ({\n    calls: state.Calls.calls,\n    getCallsLoading: state.Calls.getCallsLoading\n  })); // get user calls\n\n  useEffect(() => {\n    dispatch(getCalls());\n  }, [dispatch]);\n  const [callsList, setCallsList] = useState([]);\n  useEffect(() => {\n    setCallsList(calls);\n  }, [calls]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-relative\",\n    children: [getCallsLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }, this), /*#__PURE__*/_jsxDEV(LeftbarTitle, {\n      title: \"Calls\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppSimpleBar, {\n      className: \"chat-message-list chat-call-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled chat-list\",\n        children: (callsList || []).map((call, key) => /*#__PURE__*/_jsxDEV(Call, {\n          call: call\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"yQzlVNy95o3cIvhtS2axY+Cu+pw=\", true, function () {\n  return [useRedux];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Calls/index.tsx"],"names":["React","useEffect","useState","useRedux","Loader","AppSimpleBar","LeftbarTitle","Call","getCalls","Index","props","dispatch","useAppSelector","calls","getCallsLoading","state","Calls","callsList","setCallsList","map","call","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C,C,CAEA;;AACA,SAASC,QAAT,QAAyB,sBAAzB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,wBAAzB,C,CAEA;;;;AAIA,MAAMC,KAAK,GAAIC,KAAD,IAAuB;AAAA;;AACnC;AACA,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA+BT,QAAQ,EAA7C;AAEA,QAAM;AAAEU,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAA6BF,cAAc,CAAEG,KAAD,KAAiB;AACjEF,IAAAA,KAAK,EAAEE,KAAK,CAACC,KAAN,CAAYH,KAD8C;AAEjEC,IAAAA,eAAe,EAAEC,KAAK,CAACC,KAAN,CAAYF;AAFoC,GAAjB,CAAD,CAAjD,CAJmC,CASnC;;AACAb,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACH,QAAQ,EAAT,CAAR;AACD,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAIA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,YAAY,CAACL,KAAD,CAAZ;AACD,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,eACGC,eAAe,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADtB,eAEE,QAAC,YAAD;AAAc,MAAA,KAAK,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,YAAD;AAAc,MAAA,SAAS,EAAC,kCAAxB;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,yBAAd;AAAA,kBACG,CAACG,SAAS,IAAI,EAAd,EAAkBE,GAAlB,CAAsB,CAACC,IAAD,EAAiBC,GAAjB,kBACrB,QAAC,IAAD;AAAM,UAAA,IAAI,EAAED;AAAZ,WAAuBC,GAAvB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CArCD;;GAAMZ,K;UAEiCN,Q;;;KAFjCM,K;AAuCN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// hooks\nimport { useRedux } from \"../../../hooks/index\";\n\n// components\nimport Loader from \"../../../components/Loader\";\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport LeftbarTitle from \"../../../components/LeftbarTitle\";\nimport Call from \"./Call\";\n\n// actions\nimport { getCalls } from \"../../../redux/actions\";\n\n// interface\nimport { CallItem } from \"../../../data/calls\";\n\ninterface IndexProps {}\nconst Index = (props: IndexProps) => {\n  // global store\n  const { dispatch, useAppSelector } = useRedux();\n\n  const { calls, getCallsLoading } = useAppSelector((state: any) => ({\n    calls: state.Calls.calls,\n    getCallsLoading: state.Calls.getCallsLoading,\n  }));\n\n  // get user calls\n  useEffect(() => {\n    dispatch(getCalls());\n  }, [dispatch]);\n\n  const [callsList, setCallsList] = useState([]);\n\n  useEffect(() => {\n    setCallsList(calls);\n  }, [calls]);\n\n  return (\n    <div className=\"position-relative\">\n      {getCallsLoading && <Loader />}\n      <LeftbarTitle title=\"Calls\" />\n      {/* end p-4 */}\n\n      {/* Start contact lists */}\n      <AppSimpleBar className=\"chat-message-list chat-call-list\">\n        <ul className=\"list-unstyled chat-list\">\n          {(callsList || []).map((call: CallItem, key: number) => (\n            <Call call={call} key={key} />\n          ))}\n        </ul>\n      </AppSimpleBar>\n      {/* end contact lists */}\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}