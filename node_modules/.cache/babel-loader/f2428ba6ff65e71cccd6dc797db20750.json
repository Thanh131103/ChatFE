{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/LightBox.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\"; // This only needs to be imported once in your app\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst LightBox = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    defaultIdx,\n    images\n  } = _ref;\n  const [photoIndex, setPhotoIndex] = useState(0);\n  useEffect(() => {\n    if (defaultIdx) {\n      setPhotoIndex(defaultIdx);\n    }\n  }, [defaultIdx]);\n\n  const onPrev = () => {\n    setPhotoIndex((photoIndex + images.length - 1) % images.length);\n  };\n\n  const onNext = () => {\n    setPhotoIndex((photoIndex + 1) % images.length);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isOpen && /*#__PURE__*/_jsxDEV(Lightbox, {\n      mainSrc: images[photoIndex].downloadLink,\n      nextSrc: images[(photoIndex + 1) % images.length].downloadLink,\n      prevSrc: images[(photoIndex + images.length - 1) % images.length].downloadLink,\n      onCloseRequest: onClose,\n      onMovePrevRequest: onPrev,\n      onMoveNextRequest: onNext\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(LightBox, \"yXQZ4BYFGX2+/NhyP0fkiOGFjEE=\");\n\n_c = LightBox;\nexport default LightBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"LightBox\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/LightBox.tsx"],"names":["React","useEffect","useState","Lightbox","LightBox","isOpen","onClose","defaultIdx","images","photoIndex","setPhotoIndex","onPrev","length","onNext","downloadLink"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAO,gCAAP,C,CAAyC;;;;;AAQzC,MAAMC,QAAQ,GAAG,QAA4D;AAAA;;AAAA,MAA3D;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBC,IAAAA,UAAnB;AAA+BC,IAAAA;AAA/B,GAA2D;AAC3E,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,CAAD,CAA5C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,UAAJ,EAAgB;AACdG,MAAAA,aAAa,CAACH,UAAD,CAAb;AACD;AACF,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;;AAMA,QAAMI,MAAM,GAAG,MAAM;AACnBD,IAAAA,aAAa,CAAC,CAACD,UAAU,GAAGD,MAAM,CAACI,MAApB,GAA6B,CAA9B,IAAmCJ,MAAM,CAACI,MAA3C,CAAb;AACD,GAFD;;AAGA,QAAMC,MAAM,GAAG,MAAM;AACnBH,IAAAA,aAAa,CAAC,CAACD,UAAU,GAAG,CAAd,IAAmBD,MAAM,CAACI,MAA3B,CAAb;AACD,GAFD;;AAIA,sBACE;AAAA,cACGP,MAAM,iBACL,QAAC,QAAD;AACE,MAAA,OAAO,EAAEG,MAAM,CAACC,UAAD,CAAN,CAAmBK,YAD9B;AAEE,MAAA,OAAO,EAAEN,MAAM,CAAC,CAACC,UAAU,GAAG,CAAd,IAAmBD,MAAM,CAACI,MAA3B,CAAN,CAAyCE,YAFpD;AAGE,MAAA,OAAO,EACLN,MAAM,CAAC,CAACC,UAAU,GAAGD,MAAM,CAACI,MAApB,GAA6B,CAA9B,IAAmCJ,MAAM,CAACI,MAA3C,CAAN,CACGE,YALP;AAOE,MAAA,cAAc,EAAER,OAPlB;AAQE,MAAA,iBAAiB,EAAEK,MARrB;AASE,MAAA,iBAAiB,EAAEE;AATrB;AAAA;AAAA;AAAA;AAAA;AAFJ,mBADF;AAiBD,CAhCD;;GAAMT,Q;;KAAAA,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\"; // This only needs to be imported once in your app\n\ninterface LightBoxProps {\n  isOpen: boolean;\n  onClose: () => any;\n  images: Array<any>;\n  defaultIdx?: number;\n}\nconst LightBox = ({ isOpen, onClose, defaultIdx, images }: LightBoxProps) => {\n  const [photoIndex, setPhotoIndex] = useState(0);\n  useEffect(() => {\n    if (defaultIdx) {\n      setPhotoIndex(defaultIdx);\n    }\n  }, [defaultIdx]);\n\n  const onPrev = () => {\n    setPhotoIndex((photoIndex + images.length - 1) % images.length);\n  };\n  const onNext = () => {\n    setPhotoIndex((photoIndex + 1) % images.length);\n  };\n\n  return (\n    <>\n      {isOpen && (\n        <Lightbox\n          mainSrc={images[photoIndex].downloadLink}\n          nextSrc={images[(photoIndex + 1) % images.length].downloadLink}\n          prevSrc={\n            images[(photoIndex + images.length - 1) % images.length]\n              .downloadLink\n          }\n          onCloseRequest={onClose}\n          onMovePrevRequest={onPrev}\n          onMoveNextRequest={onNext}\n        />\n      )}\n    </>\n  );\n};\n\nexport default LightBox;\n"]},"metadata":{},"sourceType":"module"}