{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/InviteContactModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Form, Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Input } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InviteContactModal = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onInvite\n  } = _ref;\n\n  /*\n  data input handeling\n  */\n  const [data, setData] = useState({\n    email: null,\n    name: null,\n    message: null\n  });\n  useEffect(() => {\n    setData({\n      email: null,\n      name: null,\n      message: null\n    });\n  }, []);\n\n  const onChangeData = (field, value) => {\n    let modifiedData = { ...data\n    };\n\n    if (value === \"\") {\n      modifiedData[field] = null;\n    } else {\n      modifiedData[field] = value;\n    }\n\n    setData(modifiedData);\n  };\n  /*\n  validation\n  */\n\n\n  const [valid, setValid] = useState(false);\n  useEffect(() => {\n    if (data.email !== null && data.message !== null && data.name !== null) {\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    toggle: onClose,\n    tabIndex: -1,\n    centered: true,\n    scrollable: true,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      className: \"modal-title-custom\",\n      toggle: onClose,\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      className: \"p-4\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"AddContactModalemail-input\",\n            className: \"form-label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            className: \"form-control\",\n            id: \"AddContactModalemail-input\",\n            placeholder: \"Enter Email\",\n            value: data[\"email\"] || \"\",\n            onChange: e => {\n              onChangeData(\"email\", e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"AddContactModalname-input\",\n            className: \"form-label\",\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"AddContactModalname-input\",\n            placeholder: \"Enter Name\",\n            value: data[\"name\"] || \"\",\n            onChange: e => {\n              onChangeData(\"name\", e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"AddContactModal-invitemessage-input\",\n            className: \"form-label\",\n            children: \"Invatation Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            value: data[\"message\"] || \"\",\n            onChange: e => {\n              onChangeData(\"message\", e.target.value);\n            },\n            className: \"form-control\",\n            id: \"AddContactModal-invitemessage-input\",\n            rows: 3,\n            placeholder: \"Enter Message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        color: \"link\",\n        className: \"btn\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        color: \"primary\",\n        disabled: !valid,\n        onClick: () => onInvite(data),\n        children: \"Invite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InviteContactModal, \"8DYYMEozw/uxY6O5M0ADsz3z+RE=\");\n\n_c = InviteContactModal;\nexport default InviteContactModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"InviteContactModal\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/InviteContactModal.tsx"],"names":["React","useEffect","useState","Form","Button","Modal","ModalHeader","ModalBody","ModalFooter","Label","Input","InviteContactModal","isOpen","onClose","onInvite","data","setData","email","name","message","onChangeData","field","value","modifiedData","valid","setValid","e","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Form,\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Input,\n} from \"reactstrap\";\n\ninterface DataTypes {\n  email: string | null;\n  name: string | null;\n  message: string | null;\n}\ninterface InviteContactModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onInvite: (data: any) => void;\n}\nconst InviteContactModal = ({\n  isOpen,\n  onClose,\n  onInvite,\n}: InviteContactModalProps) => {\n  /*\n  data input handeling\n  */\n  const [data, setData] = useState<DataTypes>({\n    email: null,\n    name: null,\n    message: null,\n  });\n  useEffect(() => {\n    setData({\n      email: null,\n      name: null,\n      message: null,\n    });\n  }, []);\n\n  const onChangeData = (field: \"email\" | \"name\" | \"message\", value: string) => {\n    let modifiedData: DataTypes = { ...data };\n    if (value === \"\") {\n      modifiedData[field] = null;\n    } else {\n      modifiedData[field] = value;\n    }\n    setData(modifiedData);\n  };\n\n  /*\n  validation\n  */\n  const [valid, setValid] = useState<boolean>(false);\n  useEffect(() => {\n    if (data.email !== null && data.message !== null && data.name !== null) {\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n  }, [data]);\n  return (\n    <Modal isOpen={isOpen} toggle={onClose} tabIndex={-1} centered scrollable>\n      <ModalHeader className=\"modal-title-custom\" toggle={onClose}>\n        Add Contact\n      </ModalHeader>\n      <ModalBody className=\"p-4\">\n        <Form>\n          <div className=\"mb-3\">\n            <Label htmlFor=\"AddContactModalemail-input\" className=\"form-label\">\n              Email\n            </Label>\n            <Input\n              type=\"email\"\n              className=\"form-control\"\n              id=\"AddContactModalemail-input\"\n              placeholder=\"Enter Email\"\n              value={data[\"email\"] || \"\"}\n              onChange={(e: any) => {\n                onChangeData(\"email\", e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <Label htmlFor=\"AddContactModalname-input\" className=\"form-label\">\n              Name\n            </Label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"AddContactModalname-input\"\n              placeholder=\"Enter Name\"\n              value={data[\"name\"] || \"\"}\n              onChange={(e: any) => {\n                onChangeData(\"name\", e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"mb-3\">\n            <Label\n              htmlFor=\"AddContactModal-invitemessage-input\"\n              className=\"form-label\"\n            >\n              Invatation Message\n            </Label>\n            <textarea\n              value={data[\"message\"] || \"\"}\n              onChange={(e: any) => {\n                onChangeData(\"message\", e.target.value);\n              }}\n              className=\"form-control\"\n              id=\"AddContactModal-invitemessage-input\"\n              rows={3}\n              placeholder=\"Enter Message\"\n            ></textarea>\n          </div>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button type=\"button\" color=\"link\" className=\"btn\" onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          type=\"button\"\n          color=\"primary\"\n          disabled={!valid}\n          onClick={() => onInvite(data)}\n        >\n          Invite\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default InviteContactModal;\n"]},"metadata":{},"sourceType":"module"}