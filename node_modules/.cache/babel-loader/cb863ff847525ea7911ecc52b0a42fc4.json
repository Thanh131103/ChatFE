{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/UpdateDeleteBookmark.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Form, FormGroup, Label, Input } from \"reactstrap\"; // interface\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateDeleteBookmark = _ref => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onUpdate,\n    bookmark\n  } = _ref;\n\n  /*\n   data input handeling\n   */\n  const [data, setData] = useState({\n    bookmarkTitle: bookmark.title\n  });\n\n  const onChangeData = (field, value) => {\n    let modifiedData = { ...data\n    };\n\n    if (value === \"\") {\n      modifiedData[field] = null;\n    } else {\n      modifiedData[field] = value;\n    }\n\n    setData(modifiedData);\n  };\n  /*\n    validation\n    */\n\n\n  const [valid, setValid] = useState(false);\n  useEffect(() => {\n    if (data.bookmarkTitle !== null) {\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n  }, [data]);\n  /*\n    submit data\n    */\n\n  const onSubmit = () => {\n    onUpdate(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    toggle: onClose,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      className: \"modal-title-custom\",\n      toggle: onClose,\n      children: \"Update Bookmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: /*#__PURE__*/_jsxDEV(FormGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"update-bookmark\",\n            className: \"mb-2\",\n            children: \"Bookmark Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            name: \"email\",\n            id: \"update-bookmark\",\n            placeholder: \"add bookmark title\",\n            value: data.bookmarkTitle || \"\",\n            onChange: e => {\n              onChangeData(\"bookmarkTitle\", e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        color: \"none\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        disabled: !valid,\n        onClick: onSubmit,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateDeleteBookmark, \"ZK5ztPxVGorneEW8AxE1aUNFBoM=\");\n\n_c = UpdateDeleteBookmark;\nexport default UpdateDeleteBookmark;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateDeleteBookmark\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/UpdateDeleteBookmark.tsx"],"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","Form","FormGroup","Label","Input","UpdateDeleteBookmark","isOpen","onClose","onUpdate","bookmark","data","setData","bookmarkTitle","title","onChangeData","field","value","modifiedData","valid","setValid","onSubmit","e","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n} from \"reactstrap\";\n\n// interface\nimport { BookMarkTypes } from \"../data/bookmarks\";\n\ninterface DataTypes {\n  bookmarkTitle: string | null;\n}\n\ninterface UpdateDeleteBookmarkProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onUpdate: (data: any) => void;\n  bookmark: BookMarkTypes;\n}\nconst UpdateDeleteBookmark = ({\n  isOpen,\n  onClose,\n  onUpdate,\n  bookmark,\n}: UpdateDeleteBookmarkProps) => {\n  /*\n   data input handeling\n   */\n  const [data, setData] = useState<DataTypes>({\n    bookmarkTitle: bookmark.title,\n  });\n\n  const onChangeData = (field: \"bookmarkTitle\", value: string) => {\n    let modifiedData: DataTypes = { ...data };\n    if (value === \"\") {\n      modifiedData[field] = null;\n    } else {\n      modifiedData[field] = value;\n    }\n    setData(modifiedData);\n  };\n\n  /*\n    validation\n    */\n  const [valid, setValid] = useState<boolean>(false);\n  useEffect(() => {\n    if (data.bookmarkTitle !== null) {\n      setValid(true);\n    } else {\n      setValid(false);\n    }\n  }, [data]);\n\n  /*\n    submit data\n    */\n  const onSubmit = () => {\n    onUpdate(data);\n  };\n  return (\n    <Modal isOpen={isOpen} toggle={onClose}>\n      <ModalHeader className=\"modal-title-custom\" toggle={onClose}>\n        Update Bookmark\n      </ModalHeader>\n      <ModalBody>\n        <Form>\n          <FormGroup>\n            <Label htmlFor=\"update-bookmark\" className=\"mb-2\">\n              Bookmark Title\n            </Label>\n            <Input\n              type=\"text\"\n              name=\"email\"\n              id=\"update-bookmark\"\n              placeholder=\"add bookmark title\"\n              value={data.bookmarkTitle || \"\"}\n              onChange={(e: any) => {\n                onChangeData(\"bookmarkTitle\", e.target.value);\n              }}\n            />\n          </FormGroup>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button type=\"button\" color=\"none\" onClick={onClose}>\n          Close\n        </Button>\n        <Button color=\"primary\" disabled={!valid} onClick={onSubmit}>\n          Update\n        </Button>{\" \"}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default UpdateDeleteBookmark;\n"]},"metadata":{},"sourceType":"module"}