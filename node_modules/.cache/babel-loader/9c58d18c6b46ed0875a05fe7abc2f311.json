{"ast":null,"code":"// types\nimport { CallsActionTypes } from \"./types\";\nexport const INIT_STATE = {\n  calls: []\n};\n\nconst Calls = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case CallsActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case CallsActionTypes.GET_CALLS:\n          return { ...state,\n            calls: action.payload.data,\n            isCallsFetched: true,\n            getCallsLoading: false\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case CallsActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case CallsActionTypes.GET_CALLS:\n          return { ...state,\n            isCallsFetched: false,\n            getCallsLoading: false\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case CallsActionTypes.GET_CALLS:\n      {\n        return { ...state,\n          getCallsLoading: true,\n          isCallsFetched: false\n        };\n      }\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = Calls;\nexport default Calls;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calls\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/redux/calls/reducer.ts"],"names":["CallsActionTypes","INIT_STATE","calls","Calls","state","action","type","API_RESPONSE_SUCCESS","payload","actionType","GET_CALLS","data","isCallsFetched","getCallsLoading","API_RESPONSE_ERROR"],"mappings":"AAAA;AACA,SAASA,gBAAT,QAA6C,SAA7C;AAEA,OAAO,MAAMC,UAAsB,GAAG;AACpCC,EAAAA,KAAK,EAAE;AAD6B,CAA/B;;AAIP,MAAMC,KAAK,GAAG,YAAqC;AAAA,MAApCC,KAAoC,uEAA5BH,UAA4B;AAAA,MAAhBI,MAAgB;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,gBAAgB,CAACO,oBAAtB;AACE,cAAQF,MAAM,CAACG,OAAP,CAAeC,UAAvB;AACE,aAAKT,gBAAgB,CAACU,SAAtB;AACE,iBAAO,EACL,GAAGN,KADE;AAELF,YAAAA,KAAK,EAAEG,MAAM,CAACG,OAAP,CAAeG,IAFjB;AAGLC,YAAAA,cAAc,EAAE,IAHX;AAILC,YAAAA,eAAe,EAAE;AAJZ,WAAP;;AAMF;AACE,iBAAO,EAAE,GAAGT;AAAL,WAAP;AATJ;;AAYF,SAAKJ,gBAAgB,CAACc,kBAAtB;AACE,cAAQT,MAAM,CAACG,OAAP,CAAeC,UAAvB;AACE,aAAKT,gBAAgB,CAACU,SAAtB;AACE,iBAAO,EACL,GAAGN,KADE;AAELQ,YAAAA,cAAc,EAAE,KAFX;AAGLC,YAAAA,eAAe,EAAE;AAHZ,WAAP;;AAMF;AACE,iBAAO,EAAE,GAAGT;AAAL,WAAP;AATJ;;AAYF,SAAKJ,gBAAgB,CAACU,SAAtB;AAAiC;AAC/B,eAAO,EACL,GAAGN,KADE;AAELS,UAAAA,eAAe,EAAE,IAFZ;AAGLD,UAAAA,cAAc,EAAE;AAHX,SAAP;AAKD;;AAED;AACE,aAAO,EAAE,GAAGR;AAAL,OAAP;AApCJ;AAsCD,CAvCD;;KAAMD,K;AAyCN,eAAeA,KAAf","sourcesContent":["// types\nimport { CallsActionTypes, CallsState } from \"./types\";\n\nexport const INIT_STATE: CallsState = {\n  calls: [],\n};\n\nconst Calls = (state = INIT_STATE, action: any) => {\n  switch (action.type) {\n    case CallsActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case CallsActionTypes.GET_CALLS:\n          return {\n            ...state,\n            calls: action.payload.data,\n            isCallsFetched: true,\n            getCallsLoading: false,\n          };\n        default:\n          return { ...state };\n      }\n\n    case CallsActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case CallsActionTypes.GET_CALLS:\n          return {\n            ...state,\n            isCallsFetched: false,\n            getCallsLoading: false,\n          };\n\n        default:\n          return { ...state };\n      }\n\n    case CallsActionTypes.GET_CALLS: {\n      return {\n        ...state,\n        getCallsLoading: true,\n        isCallsFetched: false,\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default Calls;\n"]},"metadata":{},"sourceType":"module"}