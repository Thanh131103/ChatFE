{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/ConversationUser/Conversation.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useCallback, useState } from \"react\"; // hooks\n\nimport { useRedux } from \"../../../hooks/index\"; // hooks\n\nimport { useProfile } from \"../../../hooks\"; // components\n\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport Loader from \"../../../components/Loader\";\nimport Message from \"./Message\"; // import Day from \"./Day\";\n// interface\n\nimport ForwardModal from \"../../../components/ForwardModal\"; // actions\n\nimport { forwardMessage, deleteImage } from \"../../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Conversation = _ref => {\n  _s();\n\n  let {\n    chatUserDetails,\n    chatUserConversations,\n    onDelete,\n    onSetReplyData,\n    isChannel\n  } = _ref;\n  // global store\n  const {\n    dispatch,\n    useAppSelector\n  } = useRedux();\n  const {\n    userProfile\n  } = useProfile();\n  const {\n    getUserConversationsLoading,\n    isMessageForwarded\n  } = useAppSelector(state => ({\n    getUserConversationsLoading: state.Chats.getUserConversationsLoading,\n    isMessageForwarded: state.Chats.isMessageForwarded\n  }));\n  const messages = chatUserConversations.messages && chatUserConversations.messages.length ? chatUserConversations.messages : [];\n  const ref = useRef();\n  const scrollElement = useCallback(() => {\n    if (ref && ref.current) {\n      const listEle = document.getElementById(\"chat-conversation-list\");\n      let offsetHeight = 0;\n\n      if (listEle) {\n        offsetHeight = listEle.scrollHeight - window.innerHeight + 250;\n      }\n\n      if (offsetHeight) {\n        ref.current.getScrollElement().scrollTo({\n          top: offsetHeight,\n          behavior: \"smooth\"\n        });\n      }\n    }\n  }, [ref]);\n  useEffect(() => {\n    if (ref && ref.current) {\n      ref.current.recalculate();\n    }\n  }, []);\n  useEffect(() => {\n    if (chatUserConversations.messages) {\n      scrollElement();\n    }\n  }, [chatUserConversations.messages, scrollElement]);\n  /*\n  forward message\n  */\n\n  const [forwardData, setForwardData] = useState();\n  const [isOpenForward, setIsOpenForward] = useState(false);\n\n  const onOpenForward = message => {\n    setForwardData(message);\n    setIsOpenForward(true);\n  };\n\n  const onCloseForward = () => {\n    setIsOpenForward(false);\n  };\n\n  const onForwardMessage = data => {\n    const params = {\n      contacts: data.contacts,\n      message: data.message,\n      forwardedMessage: forwardData\n    };\n    dispatch(forwardMessage(params));\n  };\n\n  useEffect(() => {\n    if (isMessageForwarded) {\n      setIsOpenForward(false);\n    }\n  }, [isMessageForwarded]);\n  /*\n  image delete\n  */\n\n  const onDeleteImage = (messageId, imageId) => {\n    dispatch(deleteImage(chatUserDetails.id, messageId, imageId));\n  };\n\n  return /*#__PURE__*/_jsxDEV(AppSimpleBar, {\n    scrollRef: ref,\n    className: \"chat-conversation p-3 p-lg-4 positin-relative\",\n    children: [getUserConversationsLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled chat-conversation-list\",\n      id: \"chat-conversation-list\",\n      children: (messages || []).map((message, key) => {\n        const isFromMe = message.meta.sender + \"\" === userProfile.uid + \"\";\n        return /*#__PURE__*/_jsxDEV(Message, {\n          message: message,\n          chatUserDetails: chatUserDetails,\n          onDelete: onDelete,\n          onSetReplyData: onSetReplyData,\n          isFromMe: isFromMe,\n          onOpenForward: onOpenForward,\n          isChannel: isChannel,\n          onDeleteImage: onDeleteImage\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), isOpenForward && /*#__PURE__*/_jsxDEV(ForwardModal, {\n      isOpen: isOpenForward,\n      onClose: onCloseForward,\n      forwardData: forwardData,\n      chatUserDetails: chatUserDetails,\n      onForward: onForwardMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Conversation, \"JSM18KrQaajnDRrbn6qUAh+VJAo=\", true, function () {\n  return [useRedux, useProfile];\n});\n\n_c = Conversation;\nexport default Conversation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/ConversationUser/Conversation.tsx"],"names":["React","useEffect","useRef","useCallback","useState","useRedux","useProfile","AppSimpleBar","Loader","Message","ForwardModal","forwardMessage","deleteImage","Conversation","chatUserDetails","chatUserConversations","onDelete","onSetReplyData","isChannel","dispatch","useAppSelector","userProfile","getUserConversationsLoading","isMessageForwarded","state","Chats","messages","length","ref","scrollElement","current","listEle","document","getElementById","offsetHeight","scrollHeight","window","innerHeight","getScrollElement","scrollTo","top","behavior","recalculate","forwardData","setForwardData","isOpenForward","setIsOpenForward","onOpenForward","message","onCloseForward","onForwardMessage","data","params","contacts","forwardedMessage","onDeleteImage","messageId","imageId","id","map","key","isFromMe","meta","sender","uid"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useCallback, useState } from \"react\";\n\n// hooks\nimport { useRedux } from \"../../../hooks/index\";\n\n// hooks\nimport { useProfile } from \"../../../hooks\";\n\n// components\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport Loader from \"../../../components/Loader\";\nimport Message from \"./Message\";\n// import Day from \"./Day\";\n\n// interface\nimport { MessagesTypes } from \"../../../data/messages\";\nimport ForwardModal from \"../../../components/ForwardModal\";\n\n// actions\nimport { forwardMessage, deleteImage } from \"../../../redux/actions\";\ninterface ConversationProps {\n  chatUserConversations: any;\n  chatUserDetails: any;\n  onDelete: (messageId: string | number) => any;\n  onSetReplyData: (reply: null | MessagesTypes | undefined) => void;\n  isChannel: boolean;\n}\nconst Conversation = ({\n  chatUserDetails,\n  chatUserConversations,\n  onDelete,\n  onSetReplyData,\n  isChannel,\n}: ConversationProps) => {\n  // global store\n  const { dispatch, useAppSelector } = useRedux();\n\n  const { userProfile } = useProfile();\n\n  const { getUserConversationsLoading, isMessageForwarded } = useAppSelector(\n    (state: any) => ({\n      getUserConversationsLoading: state.Chats.getUserConversationsLoading,\n      isMessageForwarded: state.Chats.isMessageForwarded,\n    })\n  );\n\n  const messages =\n    chatUserConversations.messages && chatUserConversations.messages.length\n      ? chatUserConversations.messages\n      : [];\n\n  const ref = useRef<any>();\n  const scrollElement = useCallback(() => {\n    if (ref && ref.current) {\n      const listEle = document.getElementById(\"chat-conversation-list\");\n      let offsetHeight = 0;\n      if (listEle) {\n        offsetHeight = listEle.scrollHeight - window.innerHeight + 250;\n      }\n      if (offsetHeight) {\n        ref.current\n          .getScrollElement()\n          .scrollTo({ top: offsetHeight, behavior: \"smooth\" });\n      }\n    }\n  }, [ref]);\n\n  useEffect(() => {\n    if (ref && ref.current) {\n      ref.current.recalculate();\n    }\n  }, []);\n  useEffect(() => {\n    if (chatUserConversations.messages) {\n      scrollElement();\n    }\n  }, [chatUserConversations.messages, scrollElement]);\n\n  /*\n  forward message\n  */\n  const [forwardData, setForwardData] = useState<\n    null | MessagesTypes | undefined\n  >();\n  const [isOpenForward, setIsOpenForward] = useState<boolean>(false);\n  const onOpenForward = (message: MessagesTypes) => {\n    setForwardData(message);\n    setIsOpenForward(true);\n  };\n  const onCloseForward = () => {\n    setIsOpenForward(false);\n  };\n\n  const onForwardMessage = (data: any) => {\n    const params = {\n      contacts: data.contacts,\n      message: data.message,\n      forwardedMessage: forwardData,\n    };\n    dispatch(forwardMessage(params));\n  };\n  useEffect(() => {\n    if (isMessageForwarded) {\n      setIsOpenForward(false);\n    }\n  }, [isMessageForwarded]);\n\n  /*\n  image delete\n  */\n  const onDeleteImage = (\n    messageId: string | number,\n    imageId: string | number\n  ) => {\n    dispatch(deleteImage(chatUserDetails.id, messageId, imageId));\n  };\n  return (\n    <AppSimpleBar\n      scrollRef={ref}\n      className=\"chat-conversation p-3 p-lg-4 positin-relative\"\n    >\n      {getUserConversationsLoading && <Loader />}\n      <ul\n        className=\"list-unstyled chat-conversation-list\"\n        id=\"chat-conversation-list\"\n      >\n        {(messages || []).map((message: MessagesTypes, key: number) => {\n          const isFromMe = message.meta.sender + \"\" === userProfile.uid + \"\";\n          return (\n            <Message\n              message={message}\n              key={key}\n              chatUserDetails={chatUserDetails}\n              onDelete={onDelete}\n              onSetReplyData={onSetReplyData}\n              isFromMe={isFromMe}\n              onOpenForward={onOpenForward}\n              isChannel={isChannel}\n              onDeleteImage={onDeleteImage}\n            />\n          );\n        })}\n        {/*  <Day /> */}\n      </ul>\n      {isOpenForward && (\n        <ForwardModal\n          isOpen={isOpenForward}\n          onClose={onCloseForward}\n          forwardData={forwardData}\n          chatUserDetails={chatUserDetails}\n          onForward={onForwardMessage}\n        />\n      )}\n    </AppSimpleBar>\n  );\n};\n\nexport default Conversation;\n"]},"metadata":{},"sourceType":"module"}