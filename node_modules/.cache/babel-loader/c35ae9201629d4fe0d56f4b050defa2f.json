{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\"; // scss\n\nimport \"./assets/scss/theme.scss\"; // actions\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changelayoutMode } from \"./redux/actions\"; //Route\n\nimport Routes from \"./routes\"; // Import Firebase Configuration file\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\";\n//api config\n// import config from \"./config\";\n\nimport fakeBackend from \"./helpers/fakeBackend\"; // TODO\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfakeBackend(); // const firebaseConfig = {\n//   apiKey: config.FIRE_BASE.API_KEY,\n//   authDomain: config.FIRE_BASE.AUTH_DOMAIN,\n//   databaseURL: config.FIRE_BASE.DATABASEURL,\n//   projectId: config.FIRE_BASE.PROJECTID,\n//   storageBucket: config.FIRE_BASE.STORAGEBUCKET,\n//   messagingSenderId: config.FIRE_BASE.MESSAGINGSENDERID,\n//   appId: config.FIRE_BASE.APPID,\n//   measurementId: config.FIRE_BASE.MEASUREMENTID,\n// };\n// // init firebase backend\n// initFirebaseBackend(firebaseConfig);\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    layoutMode\n  } = useSelector(state => ({\n    layoutMode: state.Layout.layoutMode\n  })); // Dark/Light Mode \n\n  useEffect(() => {\n    var getLayoutMode = localStorage.getItem(\"layoutMode\");\n\n    if (getLayoutMode) {\n      dispatch(changelayoutMode(getLayoutMode));\n    } else {\n      dispatch(changelayoutMode(layoutMode));\n    }\n  }, [layoutMode, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"Kkm7420McVur4sWZOLyFlL7hsdg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/App.tsx"],"names":["React","useEffect","useSelector","useDispatch","changelayoutMode","Routes","fakeBackend","App","dispatch","layoutMode","state","Layout","getLayoutMode","localStorage","getItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAEA;;AACA,OAAO,0BAAP,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,QAAiC,iBAAjC,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;AAEA;AACA;;AACA,OAAOC,WAAP,MAAwB,uBAAxB,C,CAGA;;;AACAA,WAAW,G,CAEX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAM;AAAEM,IAAAA;AAAF,MAAiBP,WAAW,CAAEQ,KAAD,KAAiB;AAClDD,IAAAA,UAAU,EAAEC,KAAK,CAACC,MAAN,CAAaF;AADyB,GAAjB,CAAD,CAAlC,CAHgB,CAOhB;;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,aAAa,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAApB;;AACA,QAAIF,aAAJ,EAAmB;AACjBJ,MAAAA,QAAQ,CAACJ,gBAAgB,CAACQ,aAAD,CAAjB,CAAR;AACD,KAFD,MAEO;AACLJ,MAAAA,QAAQ,CAACJ,gBAAgB,CAACK,UAAD,CAAjB,CAAR;AACD;AACF,GAPQ,EAON,CAACA,UAAD,EAAaD,QAAb,CAPM,CAAT;AASA,sBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBD;;GAAMD,G;UACaJ,W,EAEMD,W;;;KAHnBK,G;AAoBN,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\n// scss\r\nimport \"./assets/scss/theme.scss\";\r\n\r\n// actions\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changelayoutMode } from \"./redux/actions\";\r\n\r\n//Route\r\nimport Routes from \"./routes\";\r\n\r\n// Import Firebase Configuration file\r\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\";\r\n\r\n//api config\r\n// import config from \"./config\";\r\nimport fakeBackend from \"./helpers/fakeBackend\";\r\n\r\n\r\n// TODO\r\nfakeBackend();\r\n\r\n// const firebaseConfig = {\r\n//   apiKey: config.FIRE_BASE.API_KEY,\r\n//   authDomain: config.FIRE_BASE.AUTH_DOMAIN,\r\n//   databaseURL: config.FIRE_BASE.DATABASEURL,\r\n//   projectId: config.FIRE_BASE.PROJECTID,\r\n//   storageBucket: config.FIRE_BASE.STORAGEBUCKET,\r\n//   messagingSenderId: config.FIRE_BASE.MESSAGINGSENDERID,\r\n//   appId: config.FIRE_BASE.APPID,\r\n//   measurementId: config.FIRE_BASE.MEASUREMENTID,\r\n// };\r\n\r\n// // init firebase backend\r\n// initFirebaseBackend(firebaseConfig);\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const { layoutMode } = useSelector((state: any) => ({\r\n    layoutMode: state.Layout.layoutMode,\r\n  }));\r\n\r\n  // Dark/Light Mode \r\n  useEffect(() => {\r\n    var getLayoutMode = localStorage.getItem(\"layoutMode\");\r\n    if (getLayoutMode) {\r\n      dispatch(changelayoutMode(getLayoutMode));\r\n    } else {\r\n      dispatch(changelayoutMode(layoutMode));\r\n    }\r\n  }, [layoutMode, dispatch]);\r\n\r\n  return <Routes />;\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}