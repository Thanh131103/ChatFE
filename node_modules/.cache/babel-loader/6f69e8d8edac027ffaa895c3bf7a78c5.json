{"ast":null,"code":"// types\nimport { SettingsActionTypes } from \"./types\";\nexport const INIT_STATE = {\n  settings: {}\n};\n\nconst Settings = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SettingsActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case SettingsActionTypes.GET_USER_SETTINGS:\n          return { ...state,\n            settings: action.payload.data,\n            isSettingsFetched: true,\n            getSettingsLoading: false,\n            isSettingsUpdated: false\n          };\n\n        case SettingsActionTypes.UPDATE_USER_SETTINGS:\n          return { ...state,\n            isSettingsUpdated: true\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case SettingsActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case SettingsActionTypes.GET_USER_SETTINGS:\n          return { ...state,\n            isSettingsFetched: false,\n            getSettingsLoading: false\n          };\n\n        case SettingsActionTypes.UPDATE_USER_SETTINGS:\n          return { ...state,\n            isSettingsUpdated: false\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case SettingsActionTypes.GET_USER_SETTINGS:\n      {\n        return { ...state,\n          getSettingsLoading: true,\n          isSettingsFetched: false\n        };\n      }\n\n    case SettingsActionTypes.UPDATE_USER_SETTINGS:\n      return { ...state,\n        isSettingsUpdated: false\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = Settings;\nexport default Settings;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/redux/settings/reducer.ts"],"names":["SettingsActionTypes","INIT_STATE","settings","Settings","state","action","type","API_RESPONSE_SUCCESS","payload","actionType","GET_USER_SETTINGS","data","isSettingsFetched","getSettingsLoading","isSettingsUpdated","UPDATE_USER_SETTINGS","API_RESPONSE_ERROR"],"mappings":"AAAA;AACA,SAASA,mBAAT,QAAmD,SAAnD;AAEA,OAAO,MAAMC,UAAyB,GAAG;AACvCC,EAAAA,QAAQ,EAAE;AAD6B,CAAlC;;AAIP,MAAMC,QAAQ,GAAG,YAAqC;AAAA,MAApCC,KAAoC,uEAA5BH,UAA4B;AAAA,MAAhBI,MAAgB;;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,mBAAmB,CAACO,oBAAzB;AACE,cAAQF,MAAM,CAACG,OAAP,CAAeC,UAAvB;AACE,aAAKT,mBAAmB,CAACU,iBAAzB;AACE,iBAAO,EACL,GAAGN,KADE;AAELF,YAAAA,QAAQ,EAAEG,MAAM,CAACG,OAAP,CAAeG,IAFpB;AAGLC,YAAAA,iBAAiB,EAAE,IAHd;AAILC,YAAAA,kBAAkB,EAAE,KAJf;AAKLC,YAAAA,iBAAiB,EAAE;AALd,WAAP;;AAOF,aAAKd,mBAAmB,CAACe,oBAAzB;AACE,iBAAO,EACL,GAAGX,KADE;AAELU,YAAAA,iBAAiB,EAAE;AAFd,WAAP;;AAIF;AACE,iBAAO,EAAE,GAAGV;AAAL,WAAP;AAfJ;;AAkBF,SAAKJ,mBAAmB,CAACgB,kBAAzB;AACE,cAAQX,MAAM,CAACG,OAAP,CAAeC,UAAvB;AACE,aAAKT,mBAAmB,CAACU,iBAAzB;AACE,iBAAO,EACL,GAAGN,KADE;AAELQ,YAAAA,iBAAiB,EAAE,KAFd;AAGLC,YAAAA,kBAAkB,EAAE;AAHf,WAAP;;AAKF,aAAKb,mBAAmB,CAACe,oBAAzB;AACE,iBAAO,EACL,GAAGX,KADE;AAELU,YAAAA,iBAAiB,EAAE;AAFd,WAAP;;AAIF;AACE,iBAAO,EAAE,GAAGV;AAAL,WAAP;AAbJ;;AAgBF,SAAKJ,mBAAmB,CAACU,iBAAzB;AAA4C;AAC1C,eAAO,EACL,GAAGN,KADE;AAELS,UAAAA,kBAAkB,EAAE,IAFf;AAGLD,UAAAA,iBAAiB,EAAE;AAHd,SAAP;AAKD;;AACD,SAAKZ,mBAAmB,CAACe,oBAAzB;AACE,aAAO,EACL,GAAGX,KADE;AAELU,QAAAA,iBAAiB,EAAE;AAFd,OAAP;;AAKF;AACE,aAAO,EAAE,GAAGV;AAAL,OAAP;AAnDJ;AAqDD,CAtDD;;KAAMD,Q;AAwDN,eAAeA,QAAf","sourcesContent":["// types\nimport { SettingsActionTypes, SettingsState } from \"./types\";\n\nexport const INIT_STATE: SettingsState = {\n  settings: {},\n};\n\nconst Settings = (state = INIT_STATE, action: any) => {\n  switch (action.type) {\n    case SettingsActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case SettingsActionTypes.GET_USER_SETTINGS:\n          return {\n            ...state,\n            settings: action.payload.data,\n            isSettingsFetched: true,\n            getSettingsLoading: false,\n            isSettingsUpdated: false,\n          };\n        case SettingsActionTypes.UPDATE_USER_SETTINGS:\n          return {\n            ...state,\n            isSettingsUpdated: true,\n          };\n        default:\n          return { ...state };\n      }\n\n    case SettingsActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case SettingsActionTypes.GET_USER_SETTINGS:\n          return {\n            ...state,\n            isSettingsFetched: false,\n            getSettingsLoading: false,\n          };\n        case SettingsActionTypes.UPDATE_USER_SETTINGS:\n          return {\n            ...state,\n            isSettingsUpdated: false,\n          };\n        default:\n          return { ...state };\n      }\n\n    case SettingsActionTypes.GET_USER_SETTINGS: {\n      return {\n        ...state,\n        getSettingsLoading: true,\n        isSettingsFetched: false,\n      };\n    }\n    case SettingsActionTypes.UPDATE_USER_SETTINGS:\n      return {\n        ...state,\n        isSettingsUpdated: false,\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default Settings;\n"]},"metadata":{},"sourceType":"module"}