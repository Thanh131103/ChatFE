{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Settings/DisplaySelect.tsx\";\nimport React from \"react\"; // constants\n\nimport { DisplayTypes } from \"../../../constants/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplaySelect = _ref => {\n  let {\n    value,\n    onChange,\n    label\n  } = _ref;\n\n  const onChangeSelect = value => {\n    onChange(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex align-items-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 overflow-hidden\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"font-size-13 mb-0 text-truncate\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-shrink-0 ms-2\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: value,\n        className: \"form-select form-select-sm\",\n        onChange: e => {\n          onChangeSelect(e.target.value);\n        },\n        children: (DisplayTypes || []).map((option, key) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DisplaySelect;\nexport default DisplaySelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplaySelect\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Settings/DisplaySelect.tsx"],"names":["React","DisplayTypes","DisplaySelect","value","onChange","label","onChangeSelect","e","target","map","option","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,SAASC,YAAT,QAAyC,0BAAzC;;;AAOA,MAAMC,aAAa,GAAG,QAAoD;AAAA,MAAnD;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA;AAAnB,GAAmD;;AACxE,QAAMC,cAAc,GAAIH,KAAD,IAAmB;AACxCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,iCAAd;AAAA,kBAAiDE;AAAjD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,6BACE;AACE,QAAA,KAAK,EAAEF,KADT;AAEE,QAAA,SAAS,EAAC,4BAFZ;AAGE,QAAA,QAAQ,EAAGI,CAAD,IAAY;AACpBD,UAAAA,cAAc,CAACC,CAAC,CAACC,MAAF,CAASL,KAAV,CAAd;AACD,SALH;AAAA,kBAOG,CAACF,YAAY,IAAI,EAAjB,EAAqBQ,GAArB,CAAyB,CAACC,MAAD,EAAqBC,GAArB,kBACxB;AAAkB,UAAA,KAAK,EAAED,MAAM,CAACP,KAAhC;AAAA,oBACGO,MAAM,CAACL;AADV,WAAaM,GAAb;AAAA;AAAA;AAAA;AAAA,gBADD;AAPH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA1BD;;KAAMT,a;AA4BN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\n\n// constants\nimport { DisplayTypes, DisplayOpt } from \"../../../constants/index\";\n\ninterface DisplaySelectProps {\n  value: string;\n  onChange: (value: string) => void;\n  label: string;\n}\nconst DisplaySelect = ({ value, onChange, label }: DisplaySelectProps) => {\n  const onChangeSelect = (value: string) => {\n    onChange(value);\n  };\n  return (\n    <div className=\"d-flex align-items-center\">\n      <div className=\"flex-grow-1 overflow-hidden\">\n        <h5 className=\"font-size-13 mb-0 text-truncate\">{label}</h5>\n      </div>\n      <div className=\"flex-shrink-0 ms-2\">\n        <select\n          value={value}\n          className=\"form-select form-select-sm\"\n          onChange={(e: any) => {\n            onChangeSelect(e.target.value);\n          }}\n        >\n          {(DisplayTypes || []).map((option: DisplayOpt, key: number) => (\n            <option key={key} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default DisplaySelect;\n"]},"metadata":{},"sourceType":"module"}