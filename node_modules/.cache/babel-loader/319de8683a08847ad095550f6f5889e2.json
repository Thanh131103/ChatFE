{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Bookmark/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // hooks\n\nimport { useRedux } from \"../../../hooks/index\"; // actions\n\nimport { getBookmarks, deleteBookmark, updateBookmark } from \"../../../redux/actions\"; // components\n\nimport Loader from \"../../../components/Loader\";\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport LeftbarTitle from \"../../../components/LeftbarTitle\";\nimport BookMark from \"./BookMark\"; // interface\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Index = props => {\n  _s();\n\n  // global store\n  const {\n    dispatch,\n    useAppSelector\n  } = useRedux();\n  const {\n    bookmarksList,\n    getBookmarksLoading,\n    isBookmarkDeleted,\n    isBookmarkUpdated\n  } = useAppSelector(state => ({\n    bookmarksList: state.Bookmarks.bookmarks,\n    getBookmarksLoading: state.Bookmarks.getBookmarksLoading,\n    isBookmarkDeleted: state.Bookmarks.isBookmarkDeleted,\n    isBookmarkUpdated: state.Bookmarks.isBookmarkUpdated\n  }));\n  /*\n  get bookmarks\n  */\n\n  useEffect(() => {\n    dispatch(getBookmarks());\n  }, [dispatch]);\n  const [bookmarks, setBookmarks] = useState([]);\n  useEffect(() => {\n    setBookmarks(bookmarksList);\n  }, [bookmarksList]);\n  /*\n  update bookmark\n  */\n\n  const onUpdate = (id, data) => {\n    dispatch(updateBookmark(id, data));\n  };\n  /*\n  delete bookmark\n  */\n\n\n  const onDelete = id => {\n    dispatch(deleteBookmark(id));\n  };\n\n  useEffect(() => {\n    if (isBookmarkDeleted || isBookmarkUpdated) {\n      dispatch(getBookmarks());\n    }\n  }, [dispatch, isBookmarkDeleted, isBookmarkUpdated]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"position-relative\",\n    children: [getBookmarksLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }, this), /*#__PURE__*/_jsxDEV(LeftbarTitle, {\n      title: \"Bookmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppSimpleBar, {\n      className: \"chat-message-list chat-bookmark-list\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-unstyled chat-list\",\n        children: (bookmarks || []).map((bookmark, key) => /*#__PURE__*/_jsxDEV(BookMark, {\n          bookmark: bookmark,\n          onUpdate: onUpdate,\n          onDelete: onDelete\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Index, \"0bG4cChbKGP8SScMmLh6+CrKXTE=\", true, function () {\n  return [useRedux];\n});\n\n_c = Index;\nexport default Index;\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/Bookmark/index.tsx"],"names":["React","useEffect","useState","useRedux","getBookmarks","deleteBookmark","updateBookmark","Loader","AppSimpleBar","LeftbarTitle","BookMark","Index","props","dispatch","useAppSelector","bookmarksList","getBookmarksLoading","isBookmarkDeleted","isBookmarkUpdated","state","Bookmarks","bookmarks","setBookmarks","onUpdate","id","data","onDelete","map","bookmark","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\n// hooks\nimport { useRedux } from \"../../../hooks/index\";\n\n// actions\nimport {\n  getBookmarks,\n  deleteBookmark,\n  updateBookmark,\n} from \"../../../redux/actions\";\n\n// components\nimport Loader from \"../../../components/Loader\";\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport LeftbarTitle from \"../../../components/LeftbarTitle\";\nimport BookMark from \"./BookMark\";\n\n// interface\nimport { BookMarkTypes } from \"../../../data/bookmarks\";\n\ninterface IndexProps {}\nconst Index = (props: IndexProps) => {\n  // global store\n  const { dispatch, useAppSelector } = useRedux();\n\n  const {\n    bookmarksList,\n    getBookmarksLoading,\n    isBookmarkDeleted,\n    isBookmarkUpdated,\n  } = useAppSelector(state => ({\n    bookmarksList: state.Bookmarks.bookmarks,\n    getBookmarksLoading: state.Bookmarks.getBookmarksLoading,\n    isBookmarkDeleted: state.Bookmarks.isBookmarkDeleted,\n    isBookmarkUpdated: state.Bookmarks.isBookmarkUpdated,\n  }));\n\n  /*\n  get bookmarks\n  */\n  useEffect(() => {\n    dispatch(getBookmarks());\n  }, [dispatch]);\n\n  const [bookmarks, setBookmarks] = useState<BookMarkTypes[]>([]);\n  useEffect(() => {\n    setBookmarks(bookmarksList);\n  }, [bookmarksList]);\n\n  /*\n  update bookmark\n  */\n  const onUpdate = (id: number, data: BookMarkTypes) => {\n    dispatch(updateBookmark(id, data));\n  };\n\n  /*\n  delete bookmark\n  */\n  const onDelete = (id: number) => {\n    dispatch(deleteBookmark(id));\n  };\n\n  useEffect(() => {\n    if (isBookmarkDeleted || isBookmarkUpdated) {\n      dispatch(getBookmarks());\n    }\n  }, [dispatch, isBookmarkDeleted, isBookmarkUpdated]);\n\n  return (\n    <div className=\"position-relative\">\n      {getBookmarksLoading && <Loader />}\n      <LeftbarTitle title=\"Bookmark\" />\n      <AppSimpleBar className=\"chat-message-list chat-bookmark-list\">\n        <ul className=\"list-unstyled chat-list\">\n          {(bookmarks || []).map((bookmark: BookMarkTypes, key: number) => (\n            <BookMark\n              key={key}\n              bookmark={bookmark}\n              onUpdate={onUpdate}\n              onDelete={onDelete}\n            />\n          ))}\n        </ul>\n      </AppSimpleBar>\n    </div>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}