{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/AddGroupModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Label, Input, Collapse, Form } from \"reactstrap\"; //utils\n\nimport { useContacts } from \"../hooks\";\n// components\nimport AppSimpleBar from \"./AppSimpleBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContactItem = _ref => {\n  let {\n    contact,\n    selected,\n    onSelectContact\n  } = _ref;\n  const fullName = `${contact.firstName} ${contact.lastName}`;\n\n  const onCheck = checked => {\n    onSelectContact(contact.id, checked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-check\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        type: \"checkbox\",\n        className: \"form-check-input\",\n        id: `contact-${contact.id}`,\n        onChange: e => onCheck(e.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        className: \"form-check-label\",\n        htmlFor: `contact-${contact.id}`,\n        children: fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContactItem;\n\nconst CharacterItem = _ref2 => {\n  let {\n    letterContacts,\n    index,\n    totalContacts,\n    selectedContacts,\n    onSelectContact\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-title\",\n      children: letterContacts.letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classnames(\"list-unstyled\", \"contact-list\", {\n        \"mb-0\": index + 1 === totalContacts\n      }),\n      children: (letterContacts.data || []).map((contact, key) => {\n        const selected = selectedContacts.includes(contact.id);\n        return /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact,\n          selected: selected,\n          onSelectContact: onSelectContact\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = CharacterItem;\n\nconst AddGroupModal = _ref3 => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onCreateChannel\n  } = _ref3;\n\n  /*\n    collapse handeling\n    */\n  const [isOpenCollapse, setIsOpenCollapse] = useState(false);\n\n  const toggleCollapse = () => {\n    setIsOpenCollapse(!isOpenCollapse);\n  };\n  /*\n    contacts hook\n    */\n\n\n  const {\n    categorizedContacts,\n    totalContacts\n  } = useContacts();\n  /*\n  select contacts\n  */\n\n  const [selectedContacts, setSelectedContacts] = useState([]);\n\n  const onSelectContact = (id, selected) => {\n    let modifiedList = [...selectedContacts];\n\n    if (selected) {\n      modifiedList = [...modifiedList, id];\n    } else {\n      modifiedList = modifiedList.filter(m => m + \"\" !== id + \"\");\n    }\n\n    setSelectedContacts(modifiedList);\n  };\n  /*\n    data\n    */\n\n\n  const [data, setData] = useState({\n    channelName: \"\",\n    description: \"\"\n  });\n\n  const onDataChange = (field, value) => {\n    let modifiedData = { ...data\n    };\n    modifiedData[field] = value;\n    setData(modifiedData);\n  };\n  /*\n    disale button\n    */\n\n\n  const [valid, setValid] = useState(false);\n  useEffect(() => {\n    if (selectedContacts.length === 0 && !data.description && data.description === \"\") {\n      setValid(false);\n    } else {\n      setValid(true);\n    }\n  }, [selectedContacts, data]);\n  /*\n    submit data\n    */\n\n  const onSubmit = () => {\n    const params = {\n      name: data.channelName,\n      members: selectedContacts,\n      description: data.description\n    };\n    onCreateChannel(params);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    toggle: onClose,\n    tabIndex: -1,\n    centered: true,\n    scrollable: true,\n    id: \"addgroup-exampleModal\",\n    role: \"dialog\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      className: \"modal-title-custom\",\n      toggle: onClose,\n      children: \"Create New Group\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      className: \"p-4\",\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"addgroupname-input\",\n            className: \"form-label\",\n            children: \"Group Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            className: \"form-control\",\n            id: \"addgroupname-input\",\n            placeholder: \"Enter Group Name\",\n            value: data.channelName || \"\",\n            onChange: e => {\n              onDataChange(\"channelName\", e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label\",\n            children: \"Group Members\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"light\",\n              size: \"sm\",\n              type: \"button\",\n              onClick: toggleCollapse,\n              children: \"Select Members\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            isOpen: isOpenCollapse,\n            id: \"groupmembercollapse\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card border\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-header\",\n                children: /*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"font-size-15 mb-0\",\n                  children: \"Contacts\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body p-2\",\n                children: /*#__PURE__*/_jsxDEV(AppSimpleBar, {\n                  style: {\n                    maxHeight: \"150px\"\n                  },\n                  children: (categorizedContacts || []).map((letterContacts, key) => /*#__PURE__*/_jsxDEV(CharacterItem, {\n                    letterContacts: letterContacts,\n                    index: key,\n                    totalContacts: totalContacts,\n                    selectedContacts: selectedContacts,\n                    onSelectContact: onSelectContact\n                  }, key, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            htmlFor: \"addgroupdescription-input\",\n            className: \"form-label\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"form-control\",\n            id: \"addgroupdescription-input\",\n            rows: 3,\n            placeholder: \"Enter Description\",\n            value: data.description || \"\",\n            onChange: e => {\n              onDataChange(\"description\", e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"link\",\n        type: \"button\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        color: \"primary\",\n        onClick: onSubmit,\n        disabled: !valid,\n        children: \"Create Groups\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddGroupModal, \"BvpczExksfDJQGooootRO6Zcwb8=\", false, function () {\n  return [useContacts];\n});\n\n_c3 = AddGroupModal;\nexport default AddGroupModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ContactItem\");\n$RefreshReg$(_c2, \"CharacterItem\");\n$RefreshReg$(_c3, \"AddGroupModal\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/AddGroupModal.tsx"],"names":["React","useEffect","useState","classnames","Button","Modal","ModalHeader","ModalBody","ModalFooter","Label","Input","Collapse","Form","useContacts","AppSimpleBar","ContactItem","contact","selected","onSelectContact","fullName","firstName","lastName","onCheck","checked","id","e","target","CharacterItem","letterContacts","index","totalContacts","selectedContacts","letter","data","map","key","includes","AddGroupModal","isOpen","onClose","onCreateChannel","isOpenCollapse","setIsOpenCollapse","toggleCollapse","categorizedContacts","setSelectedContacts","modifiedList","filter","m","setData","channelName","description","onDataChange","field","value","modifiedData","valid","setValid","length","onSubmit","params","name","members","maxHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Label,\n  Input,\n  Collapse,\n  Form,\n} from \"reactstrap\";\n\n//utils\nimport { DivideByKeyResultTypes } from \"../utils\";\n\n// interfaaces\nimport { ContactTypes } from \"../data/contacts\";\nimport { useContacts } from \"../hooks\";\nimport { CreateChannelPostData } from \"../redux/actions\";\n\n// components\nimport AppSimpleBar from \"./AppSimpleBar\";\n\ninterface DataTypes {\n  channelName: string;\n  description: string;\n}\ninterface ContactItemProps {\n  contact: ContactTypes;\n  selected: boolean;\n  onSelectContact: (id: string | number, selected: boolean) => void;\n}\nconst ContactItem = ({\n  contact,\n  selected,\n  onSelectContact,\n}: ContactItemProps) => {\n  const fullName = `${contact.firstName} ${contact.lastName}`;\n  const onCheck = (checked: boolean) => {\n    onSelectContact(contact.id, checked);\n  };\n\n  return (\n    <li>\n      <div className=\"form-check\">\n        <Input\n          type=\"checkbox\"\n          className=\"form-check-input\"\n          id={`contact-${contact.id}`}\n          onChange={(e: any) => onCheck(e.target.checked)}\n        />\n        <Label className=\"form-check-label\" htmlFor={`contact-${contact.id}`}>\n          {fullName}\n        </Label>\n      </div>\n    </li>\n  );\n};\n\ninterface CharacterItemProps {\n  letterContacts: DivideByKeyResultTypes;\n  index: number;\n  totalContacts: number;\n  selectedContacts: Array<number | string>;\n  onSelectContact: (id: string | number, selected: boolean) => void;\n}\n\nconst CharacterItem = ({\n  letterContacts,\n  index,\n  totalContacts,\n  selectedContacts,\n  onSelectContact,\n}: CharacterItemProps) => {\n  return (\n    <div>\n      <div className=\"contact-list-title\">{letterContacts.letter}</div>\n\n      <ul\n        className={classnames(\"list-unstyled\", \"contact-list\", {\n          \"mb-0\": index + 1 === totalContacts,\n        })}\n      >\n        {(letterContacts.data || []).map((contact: any, key: number) => {\n          const selected: boolean = selectedContacts.includes(contact.id);\n          return (\n            <ContactItem\n              contact={contact}\n              key={key}\n              selected={selected}\n              onSelectContact={onSelectContact}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\ninterface AddGroupModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onCreateChannel: (params: CreateChannelPostData) => void;\n}\nconst AddGroupModal = ({\n  isOpen,\n  onClose,\n  onCreateChannel,\n}: AddGroupModalProps) => {\n  /*\n    collapse handeling\n    */\n  const [isOpenCollapse, setIsOpenCollapse] = useState(false);\n  const toggleCollapse = () => {\n    setIsOpenCollapse(!isOpenCollapse);\n  };\n\n  /*\n    contacts hook\n    */\n  const { categorizedContacts, totalContacts } = useContacts();\n\n  /*\n  select contacts\n  */\n  const [selectedContacts, setSelectedContacts] = useState<\n    Array<string | number>\n  >([]);\n  const onSelectContact = (id: string | number, selected: boolean) => {\n    let modifiedList: Array<string | number> = [...selectedContacts];\n    if (selected) {\n      modifiedList = [...modifiedList, id];\n    } else {\n      modifiedList = modifiedList.filter(m => m + \"\" !== id + \"\");\n    }\n    setSelectedContacts(modifiedList);\n  };\n\n  /*\n    data\n    */\n  const [data, setData] = useState<DataTypes>({\n    channelName: \"\",\n    description: \"\",\n  });\n  const onDataChange = (field: \"channelName\" | \"description\", value: any) => {\n    let modifiedData: DataTypes = { ...data };\n    modifiedData[field] = value;\n    setData(modifiedData);\n  };\n\n  /*\n    disale button\n    */\n  const [valid, setValid] = useState(false);\n  useEffect(() => {\n    if (\n      selectedContacts.length === 0 &&\n      !data.description &&\n      data.description === \"\"\n    ) {\n      setValid(false);\n    } else {\n      setValid(true);\n    }\n  }, [selectedContacts, data]);\n\n  /*\n    submit data\n    */\n  const onSubmit = () => {\n    const params = {\n      name: data.channelName,\n      members: selectedContacts,\n      description: data.description,\n    };\n    onCreateChannel(params);\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      toggle={onClose}\n      tabIndex={-1}\n      centered\n      scrollable\n      id=\"addgroup-exampleModal\"\n      role=\"dialog\"\n    >\n      <ModalHeader className=\"modal-title-custom\" toggle={onClose}>\n        Create New Group\n      </ModalHeader>\n\n      <ModalBody className=\"p-4\">\n        <Form>\n          <div className=\"mb-4\">\n            <Label htmlFor=\"addgroupname-input\" className=\"form-label\">\n              Group Name\n            </Label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"addgroupname-input\"\n              placeholder=\"Enter Group Name\"\n              value={data.channelName || \"\"}\n              onChange={(e: any) => {\n                onDataChange(\"channelName\", e.target.value);\n              }}\n            />\n          </div>\n          <div className=\"mb-4\">\n            <label className=\"form-label\">Group Members</label>\n            <div className=\"mb-3\">\n              <Button\n                color=\"light\"\n                size=\"sm\"\n                type=\"button\"\n                onClick={toggleCollapse}\n              >\n                Select Members\n              </Button>\n            </div>\n\n            <Collapse isOpen={isOpenCollapse} id=\"groupmembercollapse\">\n              <div className=\"card border\">\n                <div className=\"card-header\">\n                  <h5 className=\"font-size-15 mb-0\">Contacts</h5>\n                </div>\n                <div className=\"card-body p-2\">\n                  <AppSimpleBar style={{ maxHeight: \"150px\" }}>\n                    {(categorizedContacts || []).map(\n                      (letterContacts: DivideByKeyResultTypes, key: number) => (\n                        <CharacterItem\n                          letterContacts={letterContacts}\n                          key={key}\n                          index={key}\n                          totalContacts={totalContacts}\n                          selectedContacts={selectedContacts}\n                          onSelectContact={onSelectContact}\n                        />\n                      )\n                    )}\n                  </AppSimpleBar>\n                </div>\n              </div>\n            </Collapse>\n          </div>\n          <div className=\"mb-3\">\n            <Label htmlFor=\"addgroupdescription-input\" className=\"form-label\">\n              Description\n            </Label>\n            <textarea\n              className=\"form-control\"\n              id=\"addgroupdescription-input\"\n              rows={3}\n              placeholder=\"Enter Description\"\n              value={data.description || \"\"}\n              onChange={(e: any) => {\n                onDataChange(\"description\", e.target.value);\n              }}\n            />\n          </div>\n        </Form>\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"link\" type=\"button\" onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          type=\"button\"\n          color=\"primary\"\n          onClick={onSubmit}\n          disabled={!valid}\n        >\n          Create Groups\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default AddGroupModal;\n"]},"metadata":{},"sourceType":"module"}