{"ast":null,"code":"import { APIClient } from \"./apiCore\";\nimport * as url from \"./urls\";\nconst api = new APIClient();\n\nconst getFavourites = () => {\n  return api.get(url.GET_FAVOURITES);\n};\n\nconst getDirectMessages = () => {\n  return api.get(url.GET_DIRECT_MESSAGES);\n};\n\nconst getChannels = () => {\n  return api.get(url.GET_CHANNELS);\n};\n\nconst addContacts = contacts => {\n  return api.create(url.ADD_CONTACTS, contacts);\n};\n\nconst createChannel = data => {\n  return api.create(url.CREATE_CHANNEL, data);\n};\n\nconst getChatUserDetails = id => {\n  return api.get(url.GET_CHAT_USER_DETAILS + \"/\" + id, {\n    params: {\n      id\n    }\n  });\n};\n\nconst getChatUserConversations = id => {\n  return api.get(url.GET_CHAT_USER_CONVERSATIONS + \"/\" + id, {\n    params: {\n      id\n    }\n  });\n};\n\nconst sendMessage = data => {\n  return api.create(url.SEND_MESSAGE, data);\n};\n\nconst receiveMessage = id => {\n  return api.update(url.RECEIVE_MESSAGE + \"/\" + id, {\n    params: {\n      id\n    }\n  });\n};\n\nconst readMessage = id => {\n  return api.update(url.READ_MESSAGE + \"/\" + id, {\n    params: {\n      id\n    }\n  });\n};\n\nconst receiveMessageFromUser = id => {\n  return api.get(url.RECEIVE_MESSAGE_FROM_USER + \"/\" + id, {\n    params: {\n      id\n    }\n  });\n};\n\nconst deleteMessage = (userId, messageId) => {\n  return api.delete(url.DELETE_MESSAGE + \"/\" + userId + \"/\" + messageId, {\n    params: {\n      userId,\n      messageId\n    }\n  });\n};\n\nconst forwardMessage = data => {\n  return api.create(url.FORWARD_MESSAGE, data);\n};\n\nconst deleteUserMessages = userId => {\n  return api.delete(url.DELETE_USER_MESSAGES + \"/\" + userId, {\n    params: {\n      userId\n    }\n  });\n};\n\nconst getChannelDetails = id => {\n  return api.get(url.GET_CHANNEL_DETAILS + \"/\" + id, {\n    params: {\n      id\n    }\n  });\n};\n\nconst toggleFavouriteContact = id => {\n  return api.update(url.TOGGLE_FAVOURITE_CONTACT + \"/\" + id, {\n    params: {\n      id\n    }\n  });\n};\n/*\narchive\n*/\n\n\nconst getArchiveContact = () => {\n  return api.get(url.GET_ARCHIVE_CONTACT);\n};\n\nconst toggleArchiveContact = id => {\n  return api.update(url.TOGGLE_ARCHIVE_CONTACT + \"/\" + id, {\n    params: {\n      id\n    }\n  });\n};\n\nconst readConversation = id => {\n  return api.update(url.READ_CONVERSATION + \"/\" + id, {\n    params: {\n      id\n    }\n  });\n};\n\nconst deleteImage = (userId, messageId, imageId) => {\n  return api.delete(url.DELETE_IMAGE + \"/\" + userId + \"/\" + messageId, {\n    params: {\n      userId,\n      messageId,\n      imageId\n    }\n  });\n};\n\nexport { getFavourites, getDirectMessages, getChannels, addContacts, createChannel, getChatUserDetails, getChatUserConversations, sendMessage, receiveMessage, readMessage, receiveMessageFromUser, deleteMessage, forwardMessage, deleteUserMessages, getChannelDetails, toggleFavouriteContact, getArchiveContact, toggleArchiveContact, readConversation, deleteImage };","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/api/chats.ts"],"names":["APIClient","url","api","getFavourites","get","GET_FAVOURITES","getDirectMessages","GET_DIRECT_MESSAGES","getChannels","GET_CHANNELS","addContacts","contacts","create","ADD_CONTACTS","createChannel","data","CREATE_CHANNEL","getChatUserDetails","id","GET_CHAT_USER_DETAILS","params","getChatUserConversations","GET_CHAT_USER_CONVERSATIONS","sendMessage","SEND_MESSAGE","receiveMessage","update","RECEIVE_MESSAGE","readMessage","READ_MESSAGE","receiveMessageFromUser","RECEIVE_MESSAGE_FROM_USER","deleteMessage","userId","messageId","delete","DELETE_MESSAGE","forwardMessage","FORWARD_MESSAGE","deleteUserMessages","DELETE_USER_MESSAGES","getChannelDetails","GET_CHANNEL_DETAILS","toggleFavouriteContact","TOGGLE_FAVOURITE_CONTACT","getArchiveContact","GET_ARCHIVE_CONTACT","toggleArchiveContact","TOGGLE_ARCHIVE_CONTACT","readConversation","READ_CONVERSATION","deleteImage","imageId","DELETE_IMAGE"],"mappings":"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","sourcesContent":["import { APIClient } from \"./apiCore\";\nimport * as url from \"./urls\";\n\nconst api = new APIClient();\n\nconst getFavourites = () => {\n  return api.get(url.GET_FAVOURITES);\n};\n\nconst getDirectMessages = () => {\n  return api.get(url.GET_DIRECT_MESSAGES);\n};\nconst getChannels = () => {\n  return api.get(url.GET_CHANNELS);\n};\n\nconst addContacts = (contacts: Array<string | number>) => {\n  return api.create(url.ADD_CONTACTS, contacts);\n};\n\nconst createChannel = (data: object) => {\n  return api.create(url.CREATE_CHANNEL, data);\n};\n\nconst getChatUserDetails = (id: string | number) => {\n  return api.get(url.GET_CHAT_USER_DETAILS + \"/\" + id, { params: { id } });\n};\n\nconst getChatUserConversations = (id: string | number) => {\n  return api.get(url.GET_CHAT_USER_CONVERSATIONS + \"/\" + id, {\n    params: { id },\n  });\n};\n\nconst sendMessage = (data: object) => {\n  return api.create(url.SEND_MESSAGE, data);\n};\n\nconst receiveMessage = (id: string | number) => {\n  return api.update(url.RECEIVE_MESSAGE + \"/\" + id, { params: { id } });\n};\n\nconst readMessage = (id: string | number) => {\n  return api.update(url.READ_MESSAGE + \"/\" + id, { params: { id } });\n};\n\nconst receiveMessageFromUser = (id: string | number) => {\n  return api.get(url.RECEIVE_MESSAGE_FROM_USER + \"/\" + id, {\n    params: { id },\n  });\n};\n\nconst deleteMessage = (userId: number | string, messageId: number | string) => {\n  return api.delete(url.DELETE_MESSAGE + \"/\" + userId + \"/\" + messageId, {\n    params: { userId, messageId },\n  });\n};\n\nconst forwardMessage = (data: object) => {\n  return api.create(url.FORWARD_MESSAGE, data);\n};\n\nconst deleteUserMessages = (userId: number | string) => {\n  return api.delete(url.DELETE_USER_MESSAGES + \"/\" + userId, {\n    params: { userId },\n  });\n};\n\nconst getChannelDetails = (id: string | number) => {\n  return api.get(url.GET_CHANNEL_DETAILS + \"/\" + id, { params: { id } });\n};\n\nconst toggleFavouriteContact = (id: string | number) => {\n  return api.update(url.TOGGLE_FAVOURITE_CONTACT + \"/\" + id, {\n    params: { id },\n  });\n};\n\n/*\narchive\n*/\nconst getArchiveContact = () => {\n  return api.get(url.GET_ARCHIVE_CONTACT);\n};\n\nconst toggleArchiveContact = (id: string | number) => {\n  return api.update(url.TOGGLE_ARCHIVE_CONTACT + \"/\" + id, { params: { id } });\n};\n\nconst readConversation = (id: string | number) => {\n  return api.update(url.READ_CONVERSATION + \"/\" + id, { params: { id } });\n};\n\nconst deleteImage = (\n  userId: number | string,\n  messageId: number | string,\n  imageId: number | string\n) => {\n  return api.delete(url.DELETE_IMAGE + \"/\" + userId + \"/\" + messageId, {\n    params: { userId, messageId, imageId },\n  });\n};\n\nexport {\n  getFavourites,\n  getDirectMessages,\n  getChannels,\n  addContacts,\n  createChannel,\n  getChatUserDetails,\n  getChatUserConversations,\n  sendMessage,\n  receiveMessage,\n  readMessage,\n  receiveMessageFromUser,\n  deleteMessage,\n  forwardMessage,\n  deleteUserMessages,\n  getChannelDetails,\n  toggleFavouriteContact,\n  getArchiveContact,\n  toggleArchiveContact,\n  readConversation,\n  deleteImage,\n};\n"]},"metadata":{},"sourceType":"module"}