{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/UserProfileDetails/Members.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { Badge } from \"reactstrap\"; // hooks\n\nimport { useRedux } from \"../../../hooks/index\"; // actions\n\nimport { getChannelDetails, getChatUserDetails, getChatUserConversations, changeSelectedChat } from \"../../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Member = _ref => {\n  _s();\n\n  let {\n    member\n  } = _ref;\n  // global store\n  const {\n    dispatch\n  } = useRedux();\n  const fullName = `${member.firstName} ${member.lastName}`;\n  const shortName = `${member.firstName.charAt(0)}${member.lastName.charAt(0)}`;\n  const colors = [\"bg-primary\", \"bg-danger\", \"bg-info\", \"bg-warning\", \"bg-secondary\", \"bg-pink\", \"bg-purple\"];\n  const [color] = useState(Math.floor(Math.random() * colors.length));\n\n  const onSelectChat = (id, isChannel) => {\n    if (isChannel) {\n      dispatch(getChannelDetails(id));\n    } else {\n      dispatch(getChatUserDetails(id));\n    }\n\n    dispatch(getChatUserConversations(id));\n    dispatch(changeSelectedChat(id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: \"#\",\n      onClick: () => onSelectChat(member.id),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-shrink-0 avatar-xs me-2\",\n          children: member.profileImage ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classnames(\"chat-user-img\", \"align-self-center\", \"me-2\", \"ms-0\"),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: member.profileImage,\n              className: \"rounded-circle avatar-xs\",\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classnames(\"avatar-title\", \"rounded-circle\", \"text-uppercase\", \"text-white\", colors[color]),\n            children: shortName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex-grow-1 overflow-hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-truncate mb-0\",\n            children: fullName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), member.isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"ms-auto\",\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            className: \"badge badge-soft-primary rounded p-1\",\n            children: \"Admin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Member, \"O1MQUCYxCJtXYa9Z29GHFjSKpDA=\", false, function () {\n  return [useRedux];\n});\n\n_c = Member;\n\nconst Members = _ref2 => {\n  let {\n    chatUserDetails\n  } = _ref2;\n  const groups = chatUserDetails.members && chatUserDetails.members.length && chatUserDetails.members;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow-1\",\n        children: /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"font-size-11 text-muted text-uppercase\",\n          children: \"Members\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), groups ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled chat-list mx-n4\",\n      children: (groups || []).map((member, key) => /*#__PURE__*/_jsxDEV(Member, {\n        member: member\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Members;\nexport default Members;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Member\");\n$RefreshReg$(_c2, \"Members\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/pages/Dashboard/UserProfileDetails/Members.tsx"],"names":["React","useState","Link","classnames","Badge","useRedux","getChannelDetails","getChatUserDetails","getChatUserConversations","changeSelectedChat","Member","member","dispatch","fullName","firstName","lastName","shortName","charAt","colors","color","Math","floor","random","length","onSelectChat","id","isChannel","profileImage","isAdmin","Members","chatUserDetails","groups","members","map","key"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport classnames from \"classnames\";\nimport { Badge } from \"reactstrap\";\n\n// hooks\nimport { useRedux } from \"../../../hooks/index\";\n\n// actions\nimport {\n  getChannelDetails,\n  getChatUserDetails,\n  getChatUserConversations,\n  changeSelectedChat,\n} from \"../../../redux/actions\";\n\ninterface GroupProps {\n  member: any;\n}\nconst Member = ({ member }: GroupProps) => {\n  // global store\n  const { dispatch } = useRedux();\n\n  const fullName = `${member.firstName} ${member.lastName}`;\n  const shortName = `${member.firstName.charAt(0)}${member.lastName.charAt(0)}`;\n\n  const colors = [\n    \"bg-primary\",\n    \"bg-danger\",\n    \"bg-info\",\n    \"bg-warning\",\n    \"bg-secondary\",\n    \"bg-pink\",\n    \"bg-purple\",\n  ];\n  const [color] = useState(Math.floor(Math.random() * colors.length));\n\n  const onSelectChat = (id: string | number, isChannel?: boolean) => {\n    if (isChannel) {\n      dispatch(getChannelDetails(id));\n    } else {\n      dispatch(getChatUserDetails(id));\n    }\n    dispatch(getChatUserConversations(id));\n    dispatch(changeSelectedChat(id));\n  };\n\n  return (\n    <li>\n      <Link to=\"#\" onClick={() => onSelectChat(member.id)}>\n        <div className=\"d-flex align-items-center\">\n          <div className=\"flex-shrink-0 avatar-xs me-2\">\n            {member.profileImage ? (\n              <div\n                className={classnames(\n                  \"chat-user-img\",\n                  \"align-self-center\",\n                  \"me-2\",\n                  \"ms-0\"\n                )}\n              >\n                <img\n                  src={member.profileImage}\n                  className=\"rounded-circle avatar-xs\"\n                  alt=\"\"\n                />\n              </div>\n            ) : (\n              <span\n                className={classnames(\n                  \"avatar-title\",\n                  \"rounded-circle\",\n                  \"text-uppercase\",\n                  \"text-white\",\n                  colors[color]\n                )}\n              >\n                {shortName}\n              </span>\n            )}\n          </div>\n          <div className=\"flex-grow-1 overflow-hidden\">\n            <p className=\"text-truncate mb-0\">{fullName}</p>\n          </div>\n          {member.isAdmin && (\n            <div className=\"ms-auto\">\n              <Badge className=\"badge badge-soft-primary rounded p-1\">\n                Admin\n              </Badge>\n            </div>\n          )}\n        </div>\n      </Link>\n    </li>\n  );\n};\ninterface GroupsProps {\n  chatUserDetails: any;\n}\nconst Members = ({ chatUserDetails }: GroupsProps) => {\n  const groups =\n    chatUserDetails.members &&\n    chatUserDetails.members.length &&\n    chatUserDetails.members;\n  return (\n    <div>\n      <div className=\"d-flex\">\n        <div className=\"flex-grow-1\">\n          <h5 className=\"font-size-11 text-muted text-uppercase\">Members</h5>\n        </div>\n      </div>\n\n      {groups ? (\n        <ul className=\"list-unstyled chat-list mx-n4\">\n          {(groups || []).map((member: any, key: number) => (\n            <Member member={member} key={key} />\n          ))}\n        </ul>\n      ) : (\n        <p>No Groups</p>\n      )}\n    </div>\n  );\n};\n\nexport default Members;\n"]},"metadata":{},"sourceType":"module"}