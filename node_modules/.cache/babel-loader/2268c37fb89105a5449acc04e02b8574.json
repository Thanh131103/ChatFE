{"ast":null,"code":"var _jsxFileName = \"/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/ContactModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Input, InputGroup } from \"reactstrap\"; // hooks\n\nimport { useRedux } from \"../hooks/index\"; // components\n\nimport AppSimpleBar from \"./AppSimpleBar\";\nimport EmptyStateResult from \"./EmptyStateResult\"; //utils\n\nimport { divideByKey } from \"../utils\"; // interfaaces\n\n// hooks\nimport { useContacts } from \"../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ContactItem = _ref => {\n  let {\n    contact,\n    selected,\n    onSelectContact\n  } = _ref;\n  const fullName = `${contact.firstName} ${contact.lastName}`;\n\n  const onClick = () => {\n    onSelectContact(contact.id, !selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classnames({\n      selected: selected\n    }),\n    onClick: onClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"font-size-14 m-0\",\n        children: fullName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContactItem;\n\nconst CharacterItem = _ref2 => {\n  let {\n    letterContacts,\n    index,\n    totalContacts,\n    selectedContacts,\n    onSelectContact\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames({\n      \"mt-3\": index !== 0\n    }),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contact-list-title\",\n      children: letterContacts.letter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: classnames(\"list-unstyled\", \"contact-list\", {\n        \"mb-0\": index + 1 === totalContacts\n      }),\n      children: (letterContacts.data || []).map((contact, key) => {\n        const selected = selectedContacts.includes(contact.id);\n        return /*#__PURE__*/_jsxDEV(ContactItem, {\n          contact: contact,\n          selected: selected,\n          onSelectContact: onSelectContact\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = CharacterItem;\n\nconst ContactModal = _ref3 => {\n  _s();\n\n  let {\n    isOpen,\n    onClose,\n    onAddContact\n  } = _ref3;\n  // global store\n  const {\n    useAppSelector\n  } = useRedux();\n  const {\n    contactsList\n  } = useAppSelector(state => ({\n    contactsList: state.Contacts.contacts\n  }));\n  /*\n  contacts hook\n  */\n\n  const {\n    categorizedContacts,\n    totalContacts\n  } = useContacts();\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    setContacts(categorizedContacts);\n  }, [categorizedContacts]);\n  /*\n  contact search\n  */\n\n  const [search, setSearch] = useState(\"\");\n\n  const onChangeSearch = value => {\n    setSearch(value);\n    let modifiedContacts = [...contactsList];\n    let filteredContacts = (modifiedContacts || []).filter(c => c[\"firstName\"].toLowerCase().includes(value.toLowerCase()));\n    const formattedContacts = divideByKey(\"firstName\", filteredContacts);\n    setContacts(formattedContacts);\n  };\n\n  const totalC = (contacts || []).length;\n  /*\n  select contacts\n  */\n\n  const [selectedContacts, setSelectedContacts] = useState([]);\n\n  const onSelectContact = (id, selected) => {\n    let modifiedList = [...selectedContacts];\n\n    if (selected) {\n      modifiedList = [...modifiedList, id];\n    } else {\n      modifiedList = modifiedList.filter(m => m + \"\" !== id + \"\");\n    }\n\n    setSelectedContacts(modifiedList);\n  };\n  /*\n  disale button\n  */\n\n\n  const disabled = selectedContacts.length === 0;\n  /*\n  submit data\n  */\n\n  const onSubmit = () => {\n    onAddContact(selectedContacts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    toggle: onClose,\n    tabIndex: -1,\n    centered: true,\n    className: \"contactModal\",\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      className: \"modal-title-custom\",\n      toggle: onClose,\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      className: \"p-4\",\n      children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          className: \"form-control bg-light border-0 pe-0\",\n          placeholder: \"Search here..\",\n          \"aria-label\": \"Example text with button addon\",\n          \"aria-describedby\": \"contactSearchbtn-addon\",\n          value: search || \"\",\n          onChange: e => {\n            onChangeSearch(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"light\",\n          type: \"button\",\n          id: \"contactSearchbtn-addon\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"bx bx-search align-middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), totalC === 0 ? /*#__PURE__*/_jsxDEV(EmptyStateResult, {\n        searchedText: search\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center px-1\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex-grow-1\",\n            children: /*#__PURE__*/_jsxDEV(\"h4\", {\n              className: \" font-size-11 text-muted text-uppercase\",\n              children: \"Contacts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AppSimpleBar, {\n          className: \"contact-modal-list mx-n4 px-1\",\n          style: {\n            maxHeight: \"200px\"\n          },\n          children: (contacts || []).map((letterContacts, key) => /*#__PURE__*/_jsxDEV(CharacterItem, {\n            letterContacts: letterContacts,\n            index: key,\n            totalContacts: totalContacts,\n            selectedContacts: selectedContacts,\n            onSelectContact: onSelectContact\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        color: \"link\",\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        color: \"primary\",\n        disabled: disabled,\n        onClick: onSubmit,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"bx bxs-send align-middle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContactModal, \"EXEEChvvwXSTZqpgoP+BXKAXCAs=\", true, function () {\n  return [useRedux, useContacts];\n});\n\n_c3 = ContactModal;\nexport default ContactModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ContactItem\");\n$RefreshReg$(_c2, \"CharacterItem\");\n$RefreshReg$(_c3, \"ContactModal\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/components/ContactModal.tsx"],"names":["React","useEffect","useState","classnames","Button","Modal","ModalHeader","ModalBody","ModalFooter","Input","InputGroup","useRedux","AppSimpleBar","EmptyStateResult","divideByKey","useContacts","ContactItem","contact","selected","onSelectContact","fullName","firstName","lastName","onClick","id","CharacterItem","letterContacts","index","totalContacts","selectedContacts","letter","data","map","key","includes","ContactModal","isOpen","onClose","onAddContact","useAppSelector","contactsList","state","Contacts","contacts","categorizedContacts","setContacts","search","setSearch","onChangeSearch","value","modifiedContacts","filteredContacts","filter","c","toLowerCase","formattedContacts","totalC","length","setSelectedContacts","modifiedList","m","disabled","onSubmit","e","target","maxHeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\n\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  InputGroup,\n} from \"reactstrap\";\n\n// hooks\nimport { useRedux } from \"../hooks/index\";\n\n// components\nimport AppSimpleBar from \"./AppSimpleBar\";\nimport EmptyStateResult from \"./EmptyStateResult\";\n\n//utils\nimport { DivideByKeyResultTypes, divideByKey } from \"../utils\";\n\n// interfaaces\nimport { ContactTypes } from \"../data/contacts\";\n\n// hooks\nimport { useContacts } from \"../hooks\";\n\ninterface ContactItemProps {\n  contact: ContactTypes;\n  selected: boolean;\n  onSelectContact: (id: string | number, selected: boolean) => void;\n}\nconst ContactItem = ({\n  contact,\n  selected,\n  onSelectContact,\n}: ContactItemProps) => {\n  const fullName = `${contact.firstName} ${contact.lastName}`;\n  const onClick = () => {\n    onSelectContact(contact.id, !selected);\n  };\n\n  return (\n    <li className={classnames({ selected: selected })} onClick={onClick}>\n      <div>\n        <h5 className=\"font-size-14 m-0\">{fullName}</h5>\n      </div>\n    </li>\n  );\n};\ninterface CharacterItemProps {\n  letterContacts: DivideByKeyResultTypes;\n  index: number;\n  totalContacts: number;\n  selectedContacts: Array<number | string>;\n  onSelectContact: (id: string | number, selected: boolean) => void;\n}\n\nconst CharacterItem = ({\n  letterContacts,\n  index,\n  totalContacts,\n  selectedContacts,\n  onSelectContact,\n}: CharacterItemProps) => {\n  return (\n    <div className={classnames({ \"mt-3\": index !== 0 })}>\n      <div className=\"contact-list-title\">{letterContacts.letter}</div>\n\n      <ul\n        className={classnames(\"list-unstyled\", \"contact-list\", {\n          \"mb-0\": index + 1 === totalContacts,\n        })}\n      >\n        {(letterContacts.data || []).map((contact: any, key: number) => {\n          const selected: boolean = selectedContacts.includes(contact.id);\n          return (\n            <ContactItem\n              contact={contact}\n              key={key}\n              selected={selected}\n              onSelectContact={onSelectContact}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\ninterface ContactModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onAddContact: (contacts: Array<string | number>) => void;\n}\nconst ContactModal = ({ isOpen, onClose, onAddContact }: ContactModalProps) => {\n  // global store\n  const { useAppSelector } = useRedux();\n\n  const { contactsList } = useAppSelector(state => ({\n    contactsList: state.Contacts.contacts,\n  }));\n\n  /*\n  contacts hook\n  */\n  const { categorizedContacts, totalContacts } = useContacts();\n  const [contacts, setContacts] = useState<any>([]);\n  useEffect(() => {\n    setContacts(categorizedContacts);\n  }, [categorizedContacts]);\n\n  /*\n  contact search\n  */\n  const [search, setSearch] = useState(\"\");\n  const onChangeSearch = (value: string) => {\n    setSearch(value);\n    let modifiedContacts = [...contactsList];\n    let filteredContacts = (modifiedContacts || []).filter((c: any) =>\n      c[\"firstName\"].toLowerCase().includes(value.toLowerCase())\n    );\n    const formattedContacts = divideByKey(\"firstName\", filteredContacts);\n    setContacts(formattedContacts);\n  };\n\n  const totalC = (contacts || []).length;\n\n  /*\n  select contacts\n  */\n  const [selectedContacts, setSelectedContacts] = useState<\n    Array<string | number>\n  >([]);\n  const onSelectContact = (id: string | number, selected: boolean) => {\n    let modifiedList: Array<string | number> = [...selectedContacts];\n    if (selected) {\n      modifiedList = [...modifiedList, id];\n    } else {\n      modifiedList = modifiedList.filter(m => m + \"\" !== id + \"\");\n    }\n    setSelectedContacts(modifiedList);\n  };\n\n  /*\n  disale button\n  */\n  const disabled = selectedContacts.length === 0;\n\n  /*\n  submit data\n  */\n  const onSubmit = () => {\n    onAddContact(selectedContacts);\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      toggle={onClose}\n      tabIndex={-1}\n      centered\n      className=\"contactModal\"\n    >\n      <ModalHeader className=\"modal-title-custom\" toggle={onClose}>\n        Add Contact\n      </ModalHeader>\n      <ModalBody className=\"p-4\">\n        <InputGroup className=\"mb-4\">\n          <Input\n            type=\"text\"\n            className=\"form-control bg-light border-0 pe-0\"\n            placeholder=\"Search here..\"\n            aria-label=\"Example text with button addon\"\n            aria-describedby=\"contactSearchbtn-addon\"\n            value={search || \"\"}\n            onChange={(e: any) => {\n              onChangeSearch(e.target.value);\n            }}\n          />\n          <Button color=\"light\" type=\"button\" id=\"contactSearchbtn-addon\">\n            <i className=\"bx bx-search align-middle\"></i>\n          </Button>\n        </InputGroup>\n\n        {totalC === 0 ? (\n          <EmptyStateResult searchedText={search} />\n        ) : (\n          <>\n            <div className=\"d-flex align-items-center px-1\">\n              <div className=\"flex-grow-1\">\n                <h4 className=\" font-size-11 text-muted text-uppercase\">\n                  Contacts\n                </h4>\n              </div>\n            </div>\n            <AppSimpleBar\n              className=\"contact-modal-list mx-n4 px-1\"\n              style={{ maxHeight: \"200px\" }}\n            >\n              {(contacts || []).map(\n                (letterContacts: DivideByKeyResultTypes, key: number) => (\n                  <CharacterItem\n                    letterContacts={letterContacts}\n                    key={key}\n                    index={key}\n                    totalContacts={totalContacts}\n                    selectedContacts={selectedContacts}\n                    onSelectContact={onSelectContact}\n                  />\n                )\n              )}\n            </AppSimpleBar>\n          </>\n        )}\n      </ModalBody>\n      <ModalFooter>\n        <Button type=\"button\" color=\"link\" onClick={onClose}>\n          Cancel\n        </Button>\n        <Button\n          type=\"button\"\n          color=\"primary\"\n          disabled={disabled}\n          onClick={onSubmit}\n        >\n          <i className=\"bx bxs-send align-middle\"></i>\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nexport default ContactModal;\n"]},"metadata":{},"sourceType":"module"}