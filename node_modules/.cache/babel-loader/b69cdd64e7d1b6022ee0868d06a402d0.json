{"ast":null,"code":"// types\nimport { BookmarksActionTypes } from \"./types\";\nexport const INIT_STATE = {\n  bookmarks: []\n};\n\nconst Bookmarks = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INIT_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case BookmarksActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case BookmarksActionTypes.GET_BOOKMARKS:\n          return { ...state,\n            bookmarks: action.payload.data,\n            isBookmarksFetched: true,\n            getBookmarksLoading: false,\n            isBookmarkUpdated: false,\n            isBookmarkDeleted: false\n          };\n\n        case BookmarksActionTypes.UPDATE_BOOKMARK:\n          return { ...state,\n            isBookmarkUpdated: true\n          };\n\n        case BookmarksActionTypes.DELETE_BOOKMARK:\n          return { ...state,\n            isBookmarkDeleted: true\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case BookmarksActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case BookmarksActionTypes.GET_BOOKMARKS:\n          return { ...state,\n            isBookmarksFetched: false,\n            getBookmarksLoading: false\n          };\n\n        case BookmarksActionTypes.UPDATE_BOOKMARK:\n          return { ...state,\n            isBookmarkUpdated: false,\n            error: action.payload.error\n          };\n\n        case BookmarksActionTypes.DELETE_BOOKMARK:\n          return { ...state,\n            isBookmarkDeleted: false,\n            error: action.payload.error\n          };\n\n        default:\n          return { ...state\n          };\n      }\n\n    case BookmarksActionTypes.GET_BOOKMARKS:\n      {\n        return { ...state,\n          getBookmarksLoading: true,\n          isBookmarksFetched: false\n        };\n      }\n\n    case BookmarksActionTypes.UPDATE_BOOKMARK:\n      return { ...state,\n        isBookmarkUpdated: false\n      };\n\n    case BookmarksActionTypes.DELETE_BOOKMARK:\n      return { ...state,\n        isBookmarkDeleted: false\n      };\n\n    case BookmarksActionTypes.RESET_BOOKMARKS:\n      const flag = action.payload.flag;\n      const value = action.payload.value;\n      let flags = {};\n      flags[flag] = value;\n      return { ...state,\n        ...flags\n      };\n\n    default:\n      return { ...state\n      };\n  }\n};\n\n_c = Bookmarks;\nexport default Bookmarks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Bookmarks\");","map":{"version":3,"sources":["/Users/huy8bit/Desktop/DRIVE/JOB/webchatFE/src/redux/bookmarks/reducer.ts"],"names":["BookmarksActionTypes","INIT_STATE","bookmarks","Bookmarks","state","action","type","API_RESPONSE_SUCCESS","payload","actionType","GET_BOOKMARKS","data","isBookmarksFetched","getBookmarksLoading","isBookmarkUpdated","isBookmarkDeleted","UPDATE_BOOKMARK","DELETE_BOOKMARK","API_RESPONSE_ERROR","error","RESET_BOOKMARKS","flag","value","flags"],"mappings":"AAAA;AACA,SAASA,oBAAT,QAAqD,SAArD;AAEA,OAAO,MAAMC,UAA0B,GAAG;AACxCC,EAAAA,SAAS,EAAE;AAD6B,CAAnC;;AAIP,MAAMC,SAAS,GAAG,YAAqC;AAAA,MAApCC,KAAoC,uEAA5BH,UAA4B;AAAA,MAAhBI,MAAgB;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,oBAAoB,CAACO,oBAA1B;AACE,cAAQF,MAAM,CAACG,OAAP,CAAeC,UAAvB;AACE,aAAKT,oBAAoB,CAACU,aAA1B;AACE,iBAAO,EACL,GAAGN,KADE;AAELF,YAAAA,SAAS,EAAEG,MAAM,CAACG,OAAP,CAAeG,IAFrB;AAGLC,YAAAA,kBAAkB,EAAE,IAHf;AAILC,YAAAA,mBAAmB,EAAE,KAJhB;AAKLC,YAAAA,iBAAiB,EAAE,KALd;AAMLC,YAAAA,iBAAiB,EAAE;AANd,WAAP;;AAQF,aAAKf,oBAAoB,CAACgB,eAA1B;AACE,iBAAO,EACL,GAAGZ,KADE;AAELU,YAAAA,iBAAiB,EAAE;AAFd,WAAP;;AAIF,aAAKd,oBAAoB,CAACiB,eAA1B;AACE,iBAAO,EACL,GAAGb,KADE;AAELW,YAAAA,iBAAiB,EAAE;AAFd,WAAP;;AAIF;AACE,iBAAO,EAAE,GAAGX;AAAL,WAAP;AArBJ;;AAwBF,SAAKJ,oBAAoB,CAACkB,kBAA1B;AACE,cAAQb,MAAM,CAACG,OAAP,CAAeC,UAAvB;AACE,aAAKT,oBAAoB,CAACU,aAA1B;AACE,iBAAO,EACL,GAAGN,KADE;AAELQ,YAAAA,kBAAkB,EAAE,KAFf;AAGLC,YAAAA,mBAAmB,EAAE;AAHhB,WAAP;;AAKF,aAAKb,oBAAoB,CAACgB,eAA1B;AACE,iBAAO,EACL,GAAGZ,KADE;AAELU,YAAAA,iBAAiB,EAAE,KAFd;AAGLK,YAAAA,KAAK,EAAEd,MAAM,CAACG,OAAP,CAAeW;AAHjB,WAAP;;AAKF,aAAKnB,oBAAoB,CAACiB,eAA1B;AACE,iBAAO,EACL,GAAGb,KADE;AAELW,YAAAA,iBAAiB,EAAE,KAFd;AAGLI,YAAAA,KAAK,EAAEd,MAAM,CAACG,OAAP,CAAeW;AAHjB,WAAP;;AAKF;AACE,iBAAO,EAAE,GAAGf;AAAL,WAAP;AApBJ;;AAuBF,SAAKJ,oBAAoB,CAACU,aAA1B;AAAyC;AACvC,eAAO,EACL,GAAGN,KADE;AAELS,UAAAA,mBAAmB,EAAE,IAFhB;AAGLD,UAAAA,kBAAkB,EAAE;AAHf,SAAP;AAKD;;AACD,SAAKZ,oBAAoB,CAACgB,eAA1B;AACE,aAAO,EACL,GAAGZ,KADE;AAELU,QAAAA,iBAAiB,EAAE;AAFd,OAAP;;AAIF,SAAKd,oBAAoB,CAACiB,eAA1B;AACE,aAAO,EACL,GAAGb,KADE;AAELW,QAAAA,iBAAiB,EAAE;AAFd,OAAP;;AAIF,SAAKf,oBAAoB,CAACoB,eAA1B;AACE,YAAMC,IAAI,GAAGhB,MAAM,CAACG,OAAP,CAAea,IAA5B;AACA,YAAMC,KAAK,GAAGjB,MAAM,CAACG,OAAP,CAAec,KAA7B;AACA,UAAIC,KAAU,GAAG,EAAjB;AACAA,MAAAA,KAAK,CAACF,IAAD,CAAL,GAAcC,KAAd;AACA,aAAO,EACL,GAAGlB,KADE;AAEL,WAAGmB;AAFE,OAAP;;AAKF;AACE,aAAO,EAAE,GAAGnB;AAAL,OAAP;AA9EJ;AAgFD,CAjFD;;KAAMD,S;AAmFN,eAAeA,SAAf","sourcesContent":["// types\nimport { BookmarksActionTypes, BookmarksState } from \"./types\";\n\nexport const INIT_STATE: BookmarksState = {\n  bookmarks: [],\n};\n\nconst Bookmarks = (state = INIT_STATE, action: any) => {\n  switch (action.type) {\n    case BookmarksActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case BookmarksActionTypes.GET_BOOKMARKS:\n          return {\n            ...state,\n            bookmarks: action.payload.data,\n            isBookmarksFetched: true,\n            getBookmarksLoading: false,\n            isBookmarkUpdated: false,\n            isBookmarkDeleted: false,\n          };\n        case BookmarksActionTypes.UPDATE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkUpdated: true,\n          };\n        case BookmarksActionTypes.DELETE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkDeleted: true,\n          };\n        default:\n          return { ...state };\n      }\n\n    case BookmarksActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case BookmarksActionTypes.GET_BOOKMARKS:\n          return {\n            ...state,\n            isBookmarksFetched: false,\n            getBookmarksLoading: false,\n          };\n        case BookmarksActionTypes.UPDATE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkUpdated: false,\n            error: action.payload.error,\n          };\n        case BookmarksActionTypes.DELETE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkDeleted: false,\n            error: action.payload.error,\n          };\n        default:\n          return { ...state };\n      }\n\n    case BookmarksActionTypes.GET_BOOKMARKS: {\n      return {\n        ...state,\n        getBookmarksLoading: true,\n        isBookmarksFetched: false,\n      };\n    }\n    case BookmarksActionTypes.UPDATE_BOOKMARK:\n      return {\n        ...state,\n        isBookmarkUpdated: false,\n      };\n    case BookmarksActionTypes.DELETE_BOOKMARK:\n      return {\n        ...state,\n        isBookmarkDeleted: false,\n      };\n    case BookmarksActionTypes.RESET_BOOKMARKS:\n      const flag = action.payload.flag;\n      const value = action.payload.value;\n      let flags: any = {};\n      flags[flag] = value;\n      return {\n        ...state,\n        ...flags,\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default Bookmarks;\n"]},"metadata":{},"sourceType":"module"}